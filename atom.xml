<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mysry</title>
  
  <subtitle>Life is short, learn more!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.mysry.com/"/>
  <updated>2017-11-22T14:45:35.249Z</updated>
  <id>http://www.mysry.com/</id>
  
  <author>
    <name>Mysry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>48. Rotate Image</title>
    <link href="http://www.mysry.com/2017/11/22/48-Rotate-Image/"/>
    <id>http://www.mysry.com/2017/11/22/48-Rotate-Image/</id>
    <published>2017-11-22T14:42:25.000Z</published>
    <updated>2017-11-22T14:45:35.249Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>You are given an n x n 2D matrix representing an image.</p></blockquote><blockquote><p>Rotate the image by 90 degrees (clockwise).</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> My suggestion is to plot the matrix with subindex, and then it may be clear.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public void rotate(int[][] matrix) &#123;</div><div class="line">        for (int i=0;i&lt;matrix.length;i++) &#123;</div><div class="line">for (int j=i;j&lt;matrix[0].length;j++) &#123;</div><div class="line">int tmp =0;</div><div class="line"> tmp = matrix[i][j];</div><div class="line"> matrix[i][j]= matrix[j][i];</div><div class="line"> matrix [j][i]=tmp;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">for (int i=0;i&lt;matrix.length;i++) &#123;</div><div class="line">for (int j=0;j&lt;matrix.length/2;j++) &#123;</div><div class="line">int tmp=0;</div><div class="line">tmp=matrix[i][j];</div><div class="line">matrix[i][j]=matrix[i][matrix.length-1-j];</div><div class="line">matrix[i][matrix.length-1-j]=tmp;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;You are given an n x n 2D matrix representing an image.&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>47. Permutations II</title>
    <link href="http://www.mysry.com/2017/11/22/47-Permutations-II/"/>
    <id>http://www.mysry.com/2017/11/22/47-Permutations-II/</id>
    <published>2017-11-22T14:37:47.000Z</published>
    <updated>2017-11-22T14:42:03.233Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a collection of numbers that might contain duplicates, return all possible unique permutations.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Similar to the previous problem, we use an extra boolean array &quot; boolean[] used&quot; to indicate whether the value is added to list. And sort the array “int[] nums” to make sure we can skip the same value. When a number has the same value with its previous, we can use this number only if his previous is used.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public List&lt;List&lt;Integer&gt;&gt; permuteUnique(int[] nums) &#123;</div><div class="line">        List&lt;List&lt;Integer&gt;&gt; res=new ArrayList&lt;List&lt;Integer&gt;&gt;();</div><div class="line">if(nums==null||nums.length==0) return res;</div><div class="line">boolean []used = new boolean[nums.length];</div><div class="line">List&lt;Integer&gt;list = new ArrayList&lt;Integer&gt;();</div><div class="line">Arrays.sort(nums);</div><div class="line">dfs(nums,used,list,res);</div><div class="line">return res;</div><div class="line">&#125;</div><div class="line">public void dfs(int[]nums,boolean[]used,List&lt;Integer&gt;list,List&lt;List&lt;Integer&gt;&gt;res) &#123;</div><div class="line">if(list.size()==nums.length) &#123;</div><div class="line">res.add(new ArrayList&lt;Integer&gt;(list));</div><div class="line">return ;</div><div class="line">&#125;</div><div class="line">for (int i=0;i&lt;nums.length;i++) &#123;</div><div class="line">if(used[i])continue;</div><div class="line">if(i&gt;0&amp;&amp;nums[i-1]==nums[i]&amp;&amp;!used[i-1])continue;</div><div class="line">used[i]=true;</div><div class="line">list.add(nums[i]);</div><div class="line">dfs(nums,used,list,res);</div><div class="line">used[i]=false;</div><div class="line">list.remove(list.size()-1);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a collection of numbers that might contain duplicates, retur
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>46. Permutations</title>
    <link href="http://www.mysry.com/2017/11/21/46-Permutations/"/>
    <id>http://www.mysry.com/2017/11/21/46-Permutations/</id>
    <published>2017-11-21T15:35:43.000Z</published>
    <updated>2017-11-21T15:39:23.765Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a collection of distinct numbers, return all possible permutations.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Traversing nums (the first for loop), the result in res is the full array of nums [0] through nums [i-1] when starting nums [i]. In each iteration, you need to add nums [i] to each of the res results, and then start the next iteration. Specifically, each cycle begins by recording the size of the current res, taking the first one in res, adding nums [i] at each location, and adding it to the end of res (the third for loop, r .size ()), a total of size times (the second for loop).</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public List&lt;List&lt;Integer&gt;&gt; permute(int[] nums) &#123;</div><div class="line">        LinkedList&lt;List&lt;Integer&gt;&gt; res = new LinkedList&lt;List&lt;Integer&gt;&gt;();</div><div class="line">        res.add(new ArrayList&lt;Integer&gt;());</div><div class="line">        for (int n:nums)&#123;</div><div class="line">            int size = res.size();</div><div class="line">            for(;size&gt;0;size--)&#123;</div><div class="line">                List&lt;Integer&gt; r= res.pollFirst();</div><div class="line">                for (int i=0;i&lt;=r.size();i++)&#123;</div><div class="line">                    List&lt;Integer&gt; t= new ArrayList&lt;Integer&gt;(r);</div><div class="line">                    t.add(i,n);</div><div class="line">                    res.add(t);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a collection of distinct numbers, return all possible permut
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>45. Jump Game II</title>
    <link href="http://www.mysry.com/2017/11/21/45-Jump-Game-II/"/>
    <id>http://www.mysry.com/2017/11/21/45-Jump-Game-II/</id>
    <published>2017-11-21T15:27:23.000Z</published>
    <updated>2017-11-21T15:33:39.083Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an array of non-negative integers, you are initially positioned at the first index of the array.</p></blockquote><blockquote><p>Each element in the array represents your maximum jump length at that position.</p></blockquote><blockquote><p>Your goal is to reach the last index in the minimum number of jumps.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> set e to be longest distance in current minimum step set sc to be minimum steps for reaching e. From i to e, even max is changed in a loop, it is reachable in one step.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int jump(int[] nums) &#123;</div><div class="line">        int sc=0;</div><div class="line">        int e=0;</div><div class="line">        int max=0;</div><div class="line">        for(int i=0;i&lt;nums.length-1;i++)&#123;</div><div class="line">            max=Math.max(max,i+nums[i]);</div><div class="line">            if (i==e)&#123;</div><div class="line">                sc++;</div><div class="line">                e=max;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return sc;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an array of non-negative integers, you are initially positio
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>44. Wildcard Matching</title>
    <link href="http://www.mysry.com/2017/11/20/44-Wildcard-Matching/"/>
    <id>http://www.mysry.com/2017/11/20/44-Wildcard-Matching/</id>
    <published>2017-11-20T14:42:36.000Z</published>
    <updated>2017-11-20T14:46:31.533Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Implement wildcard pattern matching with support for ‘?’ and ‘<em>’. ’?’ Matches any single character. ’</em>’ Matches any sequence of characters (including the empty sequence).</p></blockquote><blockquote><p>The matching should cover the entire input string (not partial).</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> We use a dp table, just like the problem——<a href="http://www.mysry.com/2017/11/13/10-Regular-Expression-Matching/">Regular Expression Matching</a></p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public boolean isMatch(String s, String p) &#123;</div><div class="line">        boolean[][]match= new boolean[s.length()+1][p.length()+1];</div><div class="line">match[s.length()][p.length()] = true;</div><div class="line">for (int i=p.length()-1;i&gt;=0;i--) &#123;</div><div class="line">if(p.charAt(i)!=&apos;*&apos;)</div><div class="line">break;</div><div class="line">else match[s.length()][i]=true;</div><div class="line">&#125;</div><div class="line">for (int i=s.length()-1;i&gt;=0;i--) &#123;</div><div class="line">for (int j=p.length()-1;j&gt;=0;j--) &#123;</div><div class="line">if(s.charAt(i)==p.charAt(j)||p.charAt(j)==&apos;?&apos;)</div><div class="line">match[i][j]=match[i+1][j+1];</div><div class="line">else if (p.charAt(j)==&apos;*&apos;)</div><div class="line">match[i][j]=match[i+1][j]||match[i][j+1];</div><div class="line">else</div><div class="line">match[i][j]=false;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return match[0][0];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Implement wildcard pattern matching with support for ‘?’ and ‘&lt;em&gt;
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>43. Multiply Strings</title>
    <link href="http://www.mysry.com/2017/11/20/43Multiply-Strings/"/>
    <id>http://www.mysry.com/2017/11/20/43Multiply-Strings/</id>
    <published>2017-11-20T14:38:02.000Z</published>
    <updated>2017-11-20T14:42:14.609Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2.</p></blockquote><blockquote><p>Note:</p></blockquote><blockquote><p>The length of both num1 and num2 is &lt; 110. Both num1 and num2 contains only digits 0-9. Both num1 and num2 does not contain any leading zero. You must not use any built-in BigInteger library or convert the inputs to integer directly.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Start from right to left, perform multiplication on every pair of digits, and add them together. Let’s draw the process! From the following draft, we can immediately conclude:<code>num1[i] * num2[j]</code> will be placed at indices <code>[i + j</code>, <code>i + j + 1]</code> .</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public String multiply(String num1, String num2) &#123;</div><div class="line">        int m = num1.length(),n=num2.length();</div><div class="line">int []pos = new int [m+n];</div><div class="line">for (int i=m-1;i&gt;=0;i--) &#123;</div><div class="line">for (int j=n-1;j&gt;=0;j--) &#123;</div><div class="line">int mul=(num1.charAt(i)-&apos;0&apos;)*(num2.charAt(j)-&apos;0&apos;);</div><div class="line">int p1= i+j,p2=i+j+1;</div><div class="line">int sum =mul+pos[p2];</div><div class="line">pos[p1]+=sum/10;</div><div class="line">pos[p2]= sum%10;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">StringBuilder sb = new StringBuilder();</div><div class="line">for (int p:pos)</div><div class="line">if(!(sb.length()==0&amp;&amp;p==0)) sb.append(p);</div><div class="line">return sb.length()==0?&quot;0&quot;:sb.toString();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given two non-negative integers num1 and num2 represented as strin
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>42. Trapping Rain Water</title>
    <link href="http://www.mysry.com/2017/11/19/42-Trapping-Rain-Water/"/>
    <id>http://www.mysry.com/2017/11/19/42-Trapping-Rain-Water/</id>
    <published>2017-11-19T12:13:19.000Z</published>
    <updated>2017-11-19T12:15:58.710Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Keep track of the maximum height from both forward directions backward directions, call them leftmax and rightmax.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int trap(int[] height) &#123;</div><div class="line">        int a=0,b=height.length-1,max=0,leftmax=0,rightmax=0;</div><div class="line">while(a&lt;b) &#123;</div><div class="line">leftmax=Math.max(leftmax, height[a]);</div><div class="line">rightmax=Math.max(rightmax, height[b]);</div><div class="line">if(leftmax&lt;rightmax) &#123;</div><div class="line">max+=leftmax-height[a];</div><div class="line">a++;</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">max+=(rightmax-height[b]);</div><div class="line">b--;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return max;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given n non-negative integers representing an elevation map where 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>41. First Missing Positive</title>
    <link href="http://www.mysry.com/2017/11/19/41-First-Missing-Positive/"/>
    <id>http://www.mysry.com/2017/11/19/41-First-Missing-Positive/</id>
    <published>2017-11-19T12:07:34.000Z</published>
    <updated>2017-11-19T12:12:59.298Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an unsorted integer array, find the first missing positive integer.</p></blockquote><blockquote><p>For example, Given [1,2,0] return 3, and [3,4,-1,1] return 2.</p></blockquote><blockquote><p>Your algorithm should run in O(n) time and uses constant space.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Swap the array element tomake the ith place store number i+1, then traverse the array, to find the first abnormal elements, return its index.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int firstMissingPositive(int[] nums) &#123;</div><div class="line">    int i = 0;</div><div class="line">        while(i &lt; nums.length)&#123;</div><div class="line">            if(nums[i] == i+1 || nums[i] &lt;= 0 || nums[i] &gt; nums.length) i++;</div><div class="line">            else if(nums[nums[i]-1] != nums[i]) swap(nums, i, nums[i]-1);</div><div class="line">            else i++;</div><div class="line">        &#125;</div><div class="line">        i = 0;</div><div class="line">        while(i &lt; nums.length &amp;&amp; nums[i] == i+1) i++;</div><div class="line">        return i+1;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void swap(int[] nums, int i, int j)&#123;</div><div class="line">        int temp = nums[i];</div><div class="line">        nums[i] = nums[j];</div><div class="line">        nums[j] = temp;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an unsorted integer array, find the first missing positive i
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>40. Combination Sum II</title>
    <link href="http://www.mysry.com/2017/11/19/40-Combination-Sum-II/"/>
    <id>http://www.mysry.com/2017/11/19/40-Combination-Sum-II/</id>
    <published>2017-11-19T10:01:40.000Z</published>
    <updated>2017-11-19T12:07:05.147Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a collection of candidate numbers (C) and a target number (T), find all unique combinations in C where the candidate numbers sums to T.</p></blockquote><blockquote><p>Each number in C may only be used once in the combination.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Just skip the duplicated element!</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public List&lt;List&lt;Integer&gt;&gt; combinationSum2(int[] candidates, int target) &#123;</div><div class="line"></div><div class="line">    List&lt;List&lt;Integer&gt;&gt;list = new LinkedList&lt;List&lt;Integer&gt;&gt;();</div><div class="line">Arrays.sort(candidates);</div><div class="line">backtrack(list,new ArrayList&lt;Integer&gt;(),candidates,target,0);</div><div class="line">return list;</div><div class="line">&#125;</div><div class="line">public void backtrack(List&lt;List&lt;Integer&gt;&gt;list,List&lt;Integer&gt;tempList,int[]can,int remain,int start) &#123;</div><div class="line">if(remain&lt;0) return;</div><div class="line">else if (remain==0) list.add(new ArrayList&lt;&gt;(tempList));</div><div class="line">else &#123;</div><div class="line">for (int i=start;i&lt;can.length;i++) &#123;</div><div class="line">if(i&gt;start&amp;&amp;can[i]==can[i-1])continue;</div><div class="line">tempList.add(can[i]);</div><div class="line">backtrack(list,tempList,can,remain-can[i],i+1);</div><div class="line">tempList.remove(tempList.size()-1);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a collection of candidate numbers (C) and a target number (T
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>39. Combination Sum</title>
    <link href="http://www.mysry.com/2017/11/19/39-Combination-Sum/"/>
    <id>http://www.mysry.com/2017/11/19/39-Combination-Sum/</id>
    <published>2017-11-19T09:56:30.000Z</published>
    <updated>2017-11-19T10:01:13.609Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a set of candidate numbers (C) (without duplicates) and a target number (T), find all unique combinations in C where the candidate numbers sums to T.</p></blockquote><blockquote><p>The same repeated number may be chosen from C unlimited number of times.</p></blockquote><blockquote><p>Note: All numbers (including target) will be positive integers. The solution set must not contain duplicate combinations. For example, given candidate set [2, 3, 6, 7] and target 7, A solution set is:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[7],</div><div class="line">[2, 2, 3]</div><div class="line"> ]</div></pre></td></tr></table></figure><h2 id="idea"><font color="red">Idea:</font></h2><p> The main idea reminds an approach for solving coins/knapsack problem - to store the result for all i lower than target and create the solution from them. For that for each t from 1 to our target we try every candidate which is less or equal to t in ascending order. For each candidate “c” we run through all combinations for target t-c starting with the value greater or equal than c to avoid duplicates and store only ordered combinations.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public List&lt;List&lt;Integer&gt;&gt; combinationSum(int[] candidates, int target) &#123;</div><div class="line">        Arrays.sort(candidates);</div><div class="line">List&lt;List&lt;List&lt;Integer&gt;&gt;&gt; dp = new ArrayList&lt;&gt;();</div><div class="line">for (int i=1;i&lt;=target;i++) &#123;</div><div class="line">List&lt;List&lt;Integer&gt;&gt; newList = new ArrayList();</div><div class="line">for (int j=0;j&lt;candidates.length &amp;&amp;candidates[j]&lt;=i;j++) &#123;</div><div class="line">if(i == candidates[j])newList.add(Arrays.asList(candidates[j]));</div><div class="line">else for (List&lt;Integer&gt; l :dp.get(i-candidates[j]-1)) &#123;</div><div class="line">if(candidates[j]&lt;=l.get(0)) &#123;</div><div class="line">List cl = new ArrayList&lt;&gt;();</div><div class="line">cl.add(candidates[j]);</div><div class="line">cl.addAll(l);</div><div class="line">newList.add(cl);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">dp.add(newList);</div><div class="line">&#125;</div><div class="line">return dp.get(target-1);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a set of candidate numbers (C) (without duplicates) and a ta
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>37. Sudoku Solver</title>
    <link href="http://www.mysry.com/2017/11/19/37-Sudoku-Solver/"/>
    <id>http://www.mysry.com/2017/11/19/37-Sudoku-Solver/</id>
    <published>2017-11-19T09:52:05.000Z</published>
    <updated>2017-11-19T09:55:23.036Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Write a program to solve a Sudoku puzzle by filling the empty cells.</p></blockquote><blockquote><p>Empty cells are indicated by the character ‘.’.</p></blockquote><blockquote><p>You may assume that there will be only one unique solution.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Try 1 through 9 for each cell. The time complexity should be 9 ^ m (m represents the number of blanks to be filled in), since each blank can have 9 choices. Details see the belong code.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">   public void solveSudoku(char[][]board) &#123;</div><div class="line">if (board ==null||board.length==0) return;</div><div class="line">solve(board);</div><div class="line">&#125;</div><div class="line">public boolean solve(char[][] board)&#123;</div><div class="line">    for(int i = 0; i &lt; board.length; i++)&#123;</div><div class="line">        for(int j = 0; j &lt; board[0].length; j++)&#123;</div><div class="line">            if(board[i][j] == &apos;.&apos;)&#123;</div><div class="line">                for(char c = &apos;1&apos;; c &lt;= &apos;9&apos;; c++)&#123;</div><div class="line">                    if(isValid(board, i, j, c))&#123;</div><div class="line">                        board[i][j] = c;</div><div class="line"></div><div class="line">                        if(solve(board))</div><div class="line">                            return true;</div><div class="line">                        else</div><div class="line">                            board[i][j] = &apos;.&apos;;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                return false;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return true;</div><div class="line">&#125;</div><div class="line">private boolean isValid(char[][] board, int row, int col, char c)&#123;</div><div class="line">    for(int i = 0; i &lt; 9; i++) &#123;</div><div class="line">        if(board[i][col] != &apos;.&apos; &amp;&amp; board[i][col] == c) return false;</div><div class="line">        if(board[row][i] != &apos;.&apos; &amp;&amp; board[row][i] == c) return false;</div><div class="line">        if(board[3 * (row / 3) + i / 3][ 3 * (col / 3) + i % 3] != &apos;.&apos; &amp;&amp;</div><div class="line">board[3 * (row / 3) + i / 3][3 * (col / 3) + i % 3] == c) return false;</div><div class="line">    &#125;</div><div class="line">    return true;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Write a program to solve a Sudoku puzzle by filling the empty cell
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Logistic Regression</title>
    <link href="http://www.mysry.com/2017/11/18/Logistic-Regression/"/>
    <id>http://www.mysry.com/2017/11/18/Logistic-Regression/</id>
    <published>2017-11-18T11:29:51.000Z</published>
    <updated>2017-11-19T09:55:44.364Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sigmoid-函数">Sigmoid 函数</h2><p>  在介绍逻辑回归前我们先引入sigmoid函数，其数学形式是<span class="math display">\[g(x) =\frac{1}{1+e^{-x}}\]</span>sigmoid函数是一个s型函数，取值在<span class="math inline">\([0,1]\)</span>之间，在原离0的地方函数的值会很快接近0/1。</p><h2 id="logistic-分布">Logistic 分布</h2><p>  设X是连续随机变量，X服从逻辑斯蒂分布是指X具有下列分布函数和密度函数：<span class="math display">\[F(x)=P(X\leq x)=\frac{1}{1+e^{-(x-\mu)/\gamma}}\]</span> <span class="math display">\[f(x)=F^\prime(x)=\frac{e^{-(x-\mu)/\gamma}}{\gamma (1+e^{-(x-\mu)/\gamma})^2}\]</span>其中，<span class="math inline">\(\mu\)</span>是位置参数，<span class="math inline">\(\gamma&gt;0\)</span>为形状参数。</p><h2 id="logistic-regression-模型">Logistic Regression 模型</h2><p>  二项Logistic Regression模型是如下条件概率分布:<span class="math display">\[P(Y=1|x)=\frac{exp(\omega\cdot x+b)}{1+exp(\omega\cdot x+b)}\]</span> <span class="math display">\[P(Y=0|x)=\frac{1}{1+exp(\omega\cdot x+b)}\]</span>其中，<span class="math inline">\(x\in R^n\)</span>是输入，<span class="math inline">\(Y\in\{0,1\}\)</span>是输出，<span class="math inline">\(\omega\in R^n\)</span>和<span class="math inline">\(b\in R\)</span>是参数，<span class="math inline">\(\omega\)</span>是权值向量，b称为偏置，<span class="math inline">\(\omega\cdot x\)</span>是内积。</p><h2 id="模型参数估计">模型参数估计</h2>  对于给定的训练数据集<span class="math inline">\(T=\{(x_1,y_1),(x_2,y_2),...,(x_N,y_N)\}\)</span>,其中<span class="math inline">\(x_i\in R^n\)</span>,<span class="math inline">\(y_i\in\{0,1\}\)</span>,用极大似然法来估计模型参数，设<span class="math display">\[P(Y=1|x)=\pi(x),  P(Y=0|x)=1-\pi(x)\]</span>则其似然函数为<span class="math display">\[\prod_{i=1}^N{[\pi(x_i)]^{y_i}}{[1-\pi(x_i)]^{1-y_i}}\]</span>对数似然函数为<span class="math display">\[\begin{align*}L(\omega)&amp;=\sum_{i=1}^N[y_i \log{\pi(x_i)}+(1-y_i)\log(1-\pi(x_i))]\\&amp;=\sum_{i=1}^N[y_i\log{\frac{\pi(x_i)}{1-\pi(x_i)}}+\log(1-\pi(x_i))]\\&amp;=\sum_{i=1}^N[y_i(\omega\cdot x_i)-\log(1+exp(\omega\cdot x_i))]\end{align*}\]</span><p>对<span class="math inline">\(L(\omega)\)</span>求极大值，得到，具体求法参考<a href="http://www.mysry.com/2017/11/11/%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E7%9A%84%E6%B1%82%E8%A7%A3%E6%97%A0%E7%BA%A6%E6%9D%9F%E6%9C%80%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98%E7%9A%84%E6%96%B9%E6%B3%95/">几种常见的求无约束最优化问题的方法</a></p><h2 id="多项logistic-regression">多项Logistic Regression</h2><p>  上面我们谈到的都是二项Logistic Regression，用于二分类，可以将其推广为多项回归模型，用于多分类，假设离散随机变量Y的取值集合为<span class="math inline">\(\{1,2,...,K\}\)</span>，那么多项Logistic Regression模型是:<span class="math display">\[P(Y=k|x)=\frac{exp(\omega_k\cdot x)}{1+\sum_{k=1}^{K-1}exp(\omega_k\cdot x)}, k=1,2,...,K-1\]</span> <span class="math display">\[P(Y=K|x)=\frac{1}{1+\sum_{k=1}^{K-1}exp(\omega\cdot x)}\]</span>这里<span class="math inline">\(x\in R^{n+1}\)</span>,<span class="math inline">\(\omega\in R^{n+1}\)</span>.</p><h2 id="logistic-regression是softmax回归k2时的特例更多内容请查阅softmax">Logistic Regression是Softmax回归<span class="math inline">\(K=2\)</span>时的特例，更多内容请查阅<a href="http://www.mysry.com/">Softmax</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sigmoid-函数&quot;&gt;Sigmoid 函数&lt;/h2&gt;
&lt;p&gt;  在介绍逻辑回归前我们先引入sigmoid函数，其数学形式是&lt;span class=&quot;math display&quot;&gt;\[g(x) =\frac{1}{1+e^{-x}}\]&lt;/span&gt;sigmoid函
      
    
    </summary>
    
    
      <category term="Machine learning" scheme="http://www.mysry.com/tags/Machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>36. Valid Sudoku</title>
    <link href="http://www.mysry.com/2017/11/17/36-Valid-Sudoku/"/>
    <id>http://www.mysry.com/2017/11/17/36-Valid-Sudoku/</id>
    <published>2017-11-17T01:42:01.000Z</published>
    <updated>2017-11-17T01:48:20.403Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Determine if a Sudoku is valid, and click <a href="http://sudoku.com.au/TheRules.aspx" target="_blank" rel="external">the Rules</a> to see more details. Note: A valid Sudoku board (partially filled) is not necessarily solvable. Only the filled cells need to be validated.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Collect the set of things we see, encoded as strings. For example:</p><ul><li>‘4’ in row 7 is encoded as “(4)7”.</li><li>‘4’ in column 7 is encoded as “7(4)”.</li><li>‘4’ in the top-right block is encoded as “0(4)2”.</li></ul><p> Scream false if we ever fail to add something because it was already added (i.e., seen before).</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public boolean isValidSudoku(char[][] board) &#123;</div><div class="line">       Set seen = new HashSet() ;</div><div class="line">        for (int i=0;i&lt;9;++i)&#123;</div><div class="line">            for (int j=0;j&lt;9;++j)&#123;</div><div class="line">                char number = board[i][j];</div><div class="line">                if(number!= &apos;.&apos;)</div><div class="line">                    if(!seen.add(number+&quot; in row &quot;+ i)||!seen.add(number +&quot; in colomn &quot;+j)||!seen.add(number+&quot; in block &quot;+i/3+&quot;-&quot;+j/3))</div><div class="line">                        return false;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return true;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Determine if a Sudoku is valid, and click &lt;a href=&quot;http://sudoku.c
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>34. Search for a Range</title>
    <link href="http://www.mysry.com/2017/11/17/34-Search-for-a-Range/"/>
    <id>http://www.mysry.com/2017/11/17/34-Search-for-a-Range/</id>
    <published>2017-11-17T01:33:33.000Z</published>
    <updated>2017-11-17T01:41:27.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an array of integers sorted in ascending order, find the starting and ending position of a given target value.</p></blockquote><blockquote><p>Your algorithm’s runtime complexity must be in the order of O(log n).</p></blockquote><blockquote><p>If the target is not found in the array, return [-1, -1].</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  The core idea is to find the where the array element which equals taeget begins and its end, return the head and tail index. In order to find the target number, we’d like to use a binary search.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int[] searchRange(int[] nums, int target) &#123;</div><div class="line">        int start = firstGreaterEqual(nums,target);</div><div class="line">        if(start == nums.length|| nums[start]!= target)</div><div class="line">            return new int[] &#123;-1,-1&#125;;</div><div class="line">        return new int[]&#123;start,Solution.firstGreaterEqual(nums,target+1)-1&#125;;</div><div class="line">    &#125;</div><div class="line">    public static int firstGreaterEqual(int[]nums,int target)&#123;</div><div class="line">        int low =0,high = nums.length;</div><div class="line">        while(low&lt;high)&#123;</div><div class="line">            int mid = low + ((high -low)&gt;&gt;1);</div><div class="line">            if(nums[mid] &lt;target)&#123;</div><div class="line">                low = mid+1;</div><div class="line">            &#125;</div><div class="line">            else &#123;</div><div class="line">                high =mid;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return low;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an array of integers sorted in ascending order, find the sta
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>33. Search in Rotated Sorted Array </title>
    <link href="http://www.mysry.com/2017/11/15/33-Search-in-Rotated-Sorted-Array/"/>
    <id>http://www.mysry.com/2017/11/15/33-Search-in-Rotated-Sorted-Array/</id>
    <published>2017-11-15T14:25:30.000Z</published>
    <updated>2017-11-15T14:28:13.530Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p></blockquote><blockquote><p>(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).</p></blockquote><blockquote><p>You are given a target value to search. If found in the array return its index, otherwise return -1.</p></blockquote><blockquote><p>You may assume no duplicate exists in the array.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Use the binary search.The idea is that when rotating the array, there must be one half of the array that is still in sorted order.For example, 6 7 1 2 3 4 5, the order is disrupted from the point between 7 and 1. So when doing binary search, we can make a judgement that which part is ordered and whether the target is in that range, if yes, continue the search in that half, if not continue in the other half.</p><h2 id="section"><font color="orange"></font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int search(int[] nums, int target) &#123;</div><div class="line">        int lo =0,hi =nums.length-1;</div><div class="line">while(lo&lt;hi) &#123;</div><div class="line">int mid = (lo+hi)/2;</div><div class="line">if((nums[0]&gt;target)^(nums[0]&gt;nums[mid])^(target&gt;nums[mid]))&#123;</div><div class="line">lo =mid+1;</div><div class="line">&#125;</div><div class="line">else</div><div class="line">hi = mid;</div><div class="line">&#125;</div><div class="line">return lo ==hi &amp;&amp; nums[lo] == target?lo:-1;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Suppose an array sorted in ascending order is rotated at some pivo
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>32. Longest Valid Parentheses</title>
    <link href="http://www.mysry.com/2017/11/15/32-Longest-Valid-Parentheses/"/>
    <id>http://www.mysry.com/2017/11/15/32-Longest-Valid-Parentheses/</id>
    <published>2017-11-15T14:19:25.000Z</published>
    <updated>2017-11-15T14:25:03.784Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="blakc">Problem:</font></h2><blockquote><p>Given a string containing just the characters ‘(’ and ‘)’, find the length of the longest valid (well-formed) parentheses substring.</p></blockquote><blockquote><p>For “(()”, the longest valid parentheses substring is “()”, which has length = 2.</p></blockquote><blockquote><p>Another example is “)()())”, where the longest valid parentheses substring is “()()”, which has length = 4.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Use a stack, if it is ‘)’, then push this into stack, or if it is empty, set left parameter to be j, otherwise pop the stack element and check aganin.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int longestValidParentheses(String s) &#123;</div><div class="line">        Stack&lt;Integer&gt; stack =new Stack&lt;Integer&gt;();</div><div class="line">int max=0, left =-1;</div><div class="line">for (int j=0;j&lt;s.length();j++) &#123;</div><div class="line">if(s.charAt(j)==&apos;(&apos;)stack.push(j);</div><div class="line">else &#123;</div><div class="line">if(stack.isEmpty()) left =j;</div><div class="line">else &#123;</div><div class="line">stack.pop();</div><div class="line">if(stack.isEmpty())max =Math.max(max, j-left);</div><div class="line">else max = Math.max(max, j-stack.peek());</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return max;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;blakc&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a string containing just the characters ‘(’ and ‘)’, find th
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>31. Next Permutation</title>
    <link href="http://www.mysry.com/2017/11/14/31-Next-Permutation/"/>
    <id>http://www.mysry.com/2017/11/14/31-Next-Permutation/</id>
    <published>2017-11-14T15:41:15.000Z</published>
    <updated>2017-11-14T15:49:00.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.</p></blockquote><blockquote><p>If such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).</p></blockquote><blockquote><p>The replacement must be in-place, do not allocate extra memory.</p></blockquote><blockquote><p>Here are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  If you understand what is say about the problem is to find a new permutation to make the number of this string is much bigger than its origin, otherwise rearrange it as the lowest possible order.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public void nextPermutation(int[] nums) &#123;</div><div class="line">        if(nums==null || nums.length&lt;=1) return;</div><div class="line">int i=nums.length-2;</div><div class="line">while (i&gt;=0&amp;&amp;nums[i]&gt;=nums[i+1]) i--;</div><div class="line">if(i&gt;=0) &#123;</div><div class="line">int j=nums.length-1;</div><div class="line">while(nums[j]&lt;=nums[i])j--;</div><div class="line">swap(nums,i,j);</div><div class="line">&#125;</div><div class="line">reverse(nums,i+1,nums.length-1);</div><div class="line">    &#125;</div><div class="line">    public void swap(int[]nums,int i,int j) &#123;</div><div class="line">int tmp =nums[i];</div><div class="line">nums[i]=nums[j];</div><div class="line">nums[j] = tmp;</div><div class="line">&#125;</div><div class="line">public void reverse(int[]nums,int i,int j) &#123;</div><div class="line">while(i&lt;j) swap(nums,i++,j--);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Implement next permutation, which rearranges numbers into the lexi
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>29. Divide Two Integers</title>
    <link href="http://www.mysry.com/2017/11/14/29-Divide-Two-Integers/"/>
    <id>http://www.mysry.com/2017/11/14/29-Divide-Two-Integers/</id>
    <published>2017-11-14T15:35:38.000Z</published>
    <updated>2017-11-14T15:40:47.121Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Divide two integers without using multiplication, division and mod operator.</p></blockquote><blockquote><p>If it is overflow, return MAX_INT.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  The core idea is use many divisors to approach dividend.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int divide(int dividend, int divisor) &#123;</div><div class="line">        int sign=1;</div><div class="line">if((dividend &gt;0&amp;&amp;divisor&lt;0)||(dividend&lt;0&amp;&amp;divisor&gt;0)) sign =-1;</div><div class="line">long ldividend = Math.abs(dividend);</div><div class="line">long ldivisor = Math.abs(divisor);</div><div class="line">if(ldivisor == 0) return Integer.MAX_VALUE;</div><div class="line">if((ldividend == 0)||(ldividend&lt;ldivisor)) return 0;</div><div class="line">long lans = ldivide(ldividend,ldivisor);</div><div class="line">int ans;</div><div class="line">if(lans&gt;Integer.MAX_VALUE) ans = (sign ==1)?Integer.MAX_VALUE:Integer.MIN_VALUE;</div><div class="line">else ans = (int) (sign *lans);</div><div class="line">return ans;</div><div class="line">    &#125;</div><div class="line">    private long ldivide(long ldividend, long ldivisor) &#123;</div><div class="line">if(ldividend &lt;ldivisor) return 0;</div><div class="line">long sum = ldivisor;</div><div class="line">long multiple =1;</div><div class="line">while((sum+sum)&lt;=ldividend) &#123;</div><div class="line">sum+=sum;</div><div class="line">multiple += multiple;</div><div class="line">&#125;</div><div class="line">return multiple+ldivide(ldividend -sum ,ldivisor);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Divide two integers without using multiplication, division and mod
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>25. Reverse Nodes in k-Group</title>
    <link href="http://www.mysry.com/2017/11/13/25-Reverse-Nodes-in-k-Group/"/>
    <id>http://www.mysry.com/2017/11/13/25-Reverse-Nodes-in-k-Group/</id>
    <published>2017-11-13T13:59:09.000Z</published>
    <updated>2017-11-13T14:03:35.877Z</updated>
    
    <content type="html"><![CDATA[<h2 id="peoblem"><font color="black">Peoblem:</font></h2><blockquote><p>Given a linked list, reverse the nodes of a linked list k at a time and return its modified list. k is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes in the end should remain as it is. You may not alter the values in the nodes, only nodes itself may be changed. Only constant memory is allowed.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> We use a recursion to find every k node, and if the tail of the last lists don’t have k nodes, just despite them.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * public class ListNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     ListNode next;</div><div class="line"> *     ListNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public ListNode reverseKGroup(ListNode head, int k) &#123;</div><div class="line">        ListNode curr = head;</div><div class="line">int count = 0;</div><div class="line">while(curr!= null&amp;&amp;count!= k) &#123;</div><div class="line">curr = curr.next;</div><div class="line">count++;</div><div class="line">&#125;</div><div class="line">if(count == k) &#123;</div><div class="line">curr = reverseKGroup(curr,k);</div><div class="line">while(count--&gt;0) &#123;</div><div class="line">ListNode tmp = head.next;</div><div class="line">head.next = curr;</div><div class="line">curr = head;</div><div class="line">head = tmp;</div><div class="line">&#125;</div><div class="line">head = curr;</div><div class="line">&#125;</div><div class="line">return head;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;peoblem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Peoblem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a linked list, reverse the nodes of a linked list k at a tim
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>10. Regular Expression Matching</title>
    <link href="http://www.mysry.com/2017/11/13/10-Regular-Expression-Matching/"/>
    <id>http://www.mysry.com/2017/11/13/10-Regular-Expression-Matching/</id>
    <published>2017-11-13T13:53:33.000Z</published>
    <updated>2017-11-13T14:07:21.571Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Implement regular expression matching with support for ‘.’ and ‘<em>’. ’.’ Matches any single character. ’</em>’ Matches zero or more of the preceding element. The matching should cover the entire input string (not partial). The function prototype should be: bool isMatch(const char <em>s, const char </em>p) Some examples: isMatch(“aa”,“a”) → false isMatch(“aa”,“aa”) → true isMatch(“aaa”,“aa”) → false isMatch(“aa”, “a<em>“) → true isMatch(”aa“,”.</em>”) → true isMatch(“ab”, “.<em>“) → true isMatch(”aab“,”c</em>a*b“) → true</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> This solution use a 2D DP, here are some conditions to figure out, then logic can be very straightforward. <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">1, If p.charAt(j) == s.charAt(i) :  dp[i][j] = dp[i-1][j-1];</div><div class="line">2, If p.charAt(j) == &apos;.&apos; : dp[i][j] = dp[i-1][j-1];</div><div class="line">3, If p.charAt(j) == &apos;*&apos;:</div><div class="line">   here are two sub conditions:</div><div class="line">               1   if p.charAt(j-1) != s.charAt(i) : dp[i][j] = dp[i][j-2]  //in this case, a* only counts as empty</div><div class="line">               2   if p.charAt(i-1) == s.charAt(i) or p.charAt(i-1) == &apos;.&apos;:</div><div class="line">                              dp[i][j] = dp[i-1][j]    //in this case, a* counts as multiple a</div><div class="line">                           or dp[i][j] = dp[i][j-1]   // in this case, a* counts as single a</div><div class="line">                           or dp[i][j] = dp[i][j-2]   // in this case, a* counts as empty.</div></pre></td></tr></table></figure></p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public boolean isMatch(String s, String p) &#123;</div><div class="line">     if(s==null||p==null)return false;</div><div class="line">boolean [][]dp = new boolean [s.length()+1][p.length()+1];</div><div class="line">dp[0][0] = true;</div><div class="line">for (int i =0;i&lt;p.length();i++) &#123;</div><div class="line">if(p.charAt(i) == &apos;*&apos;&amp;&amp;dp[0][i-1]) dp[0][i+1] = true;</div><div class="line">&#125;</div><div class="line">for(int i=0;i&lt;s.length();i++) &#123;</div><div class="line">for (int j=0;j&lt;p.length();j++) &#123;</div><div class="line">if(p.charAt(j)==&apos;.&apos;)</div><div class="line">dp[i+1][j+1]=dp[i][j];</div><div class="line">if(p.charAt(j)==s.charAt(i))</div><div class="line">dp[i+1][j+1]=dp[i][j];</div><div class="line">if(p.charAt(j)==&apos;*&apos;) &#123;</div><div class="line">if (p.charAt(j-1)!=s.charAt(i)&amp;&amp;p.charAt(j-1)!=&apos;.&apos;)</div><div class="line">dp[i+1][j+1] = dp[i+1][j-1];</div><div class="line">else</div><div class="line">dp[i+1][j+1] = (dp[i+1][j]||dp[i][j+1]||dp[i+1][j-1]);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return dp[s.length()][p.length()];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Implement regular expression matching with support for ‘.’ and ‘&lt;e
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
</feed>
