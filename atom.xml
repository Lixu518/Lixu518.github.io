<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mysry</title>
  
  <subtitle>Life is short, learn more!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.mysry.com/"/>
  <updated>2017-11-13T14:03:35.877Z</updated>
  <id>http://www.mysry.com/</id>
  
  <author>
    <name>Mysry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>25. Reverse Nodes in k-Group</title>
    <link href="http://www.mysry.com/2017/11/13/25-Reverse-Nodes-in-k-Group/"/>
    <id>http://www.mysry.com/2017/11/13/25-Reverse-Nodes-in-k-Group/</id>
    <published>2017-11-13T13:59:09.000Z</published>
    <updated>2017-11-13T14:03:35.877Z</updated>
    
    <content type="html"><![CDATA[<h2 id="peoblem"><font color="black">Peoblem:</font></h2><blockquote><p>Given a linked list, reverse the nodes of a linked list k at a time and return its modified list. k is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes in the end should remain as it is. You may not alter the values in the nodes, only nodes itself may be changed. Only constant memory is allowed.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> We use a recursion to find every k node, and if the tail of the last lists don’t have k nodes, just despite them.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * public class ListNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     ListNode next;</div><div class="line"> *     ListNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public ListNode reverseKGroup(ListNode head, int k) &#123;</div><div class="line">        ListNode curr = head;</div><div class="line">int count = 0;</div><div class="line">while(curr!= null&amp;&amp;count!= k) &#123;</div><div class="line">curr = curr.next;</div><div class="line">count++;</div><div class="line">&#125;</div><div class="line">if(count == k) &#123;</div><div class="line">curr = reverseKGroup(curr,k);</div><div class="line">while(count--&gt;0) &#123;</div><div class="line">ListNode tmp = head.next;</div><div class="line">head.next = curr;</div><div class="line">curr = head;</div><div class="line">head = tmp;</div><div class="line">&#125;</div><div class="line">head = curr;</div><div class="line">&#125;</div><div class="line">return head;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;peoblem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Peoblem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a linked list, reverse the nodes of a linked list k at a tim
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>10. Regular Expression Matching</title>
    <link href="http://www.mysry.com/2017/11/13/10-Regular-Expression-Matching/"/>
    <id>http://www.mysry.com/2017/11/13/10-Regular-Expression-Matching/</id>
    <published>2017-11-13T13:53:33.000Z</published>
    <updated>2017-11-13T13:58:46.187Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Implement regular expression matching with support for ‘.’ and ‘<em>’. ’.’ Matches any single character. ’</em>’ Matches zero or more of the preceding element. The matching should cover the entire input string (not partial). The function prototype should be: bool isMatch(const char <em>s, const char </em>p) Some examples: isMatch(“aa”,“a”) → false isMatch(“aa”,“aa”) → true isMatch(“aaa”,“aa”) → false isMatch(“aa”, “a<em>“) → true isMatch(”aa“,”.</em>”) → true isMatch(“ab”, “.<em>“) → true isMatch(”aab“,”c</em>a*b“) → true</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> This solution use a 2D DP, here are some conditions to figure out, then logic can be very straightforward. 1, If p.charAt(j) == s.charAt(i) : dp[i][j] = dp[i-1][j-1]; 2, If p.charAt(j) == ‘.’ : dp[i][j] = dp[i-1][j-1]; 3, If p.charAt(j) == ‘<em>’: here are two sub conditions: 1 if p.charAt(j-1) != s.charAt(i) : dp[i][j] = dp[i][j-2] //in this case, a</em> only counts as empty 2 if p.charAt(i-1) == s.charAt(i) or p.charAt(i-1) ==’.’: dp[i][j] = dp[i-1][j] //in this case, a* counts as multiple a or dp[i][j] = dp[i][j-1] // in this case, a* counts as single a or dp[i][j] = dp[i][j-2] // in this case, a* counts as empty.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public boolean isMatch(String s, String p) &#123;</div><div class="line">     if(s==null||p==null)return false;</div><div class="line">boolean [][]dp = new boolean [s.length()+1][p.length()+1];</div><div class="line">dp[0][0] = true;</div><div class="line">for (int i =0;i&lt;p.length();i++) &#123;</div><div class="line">if(p.charAt(i) == &apos;*&apos;&amp;&amp;dp[0][i-1]) dp[0][i+1] = true;</div><div class="line">&#125;</div><div class="line">for(int i=0;i&lt;s.length();i++) &#123;</div><div class="line">for (int j=0;j&lt;p.length();j++) &#123;</div><div class="line">if(p.charAt(j)==&apos;.&apos;)</div><div class="line">dp[i+1][j+1]=dp[i][j];</div><div class="line">if(p.charAt(j)==s.charAt(i))</div><div class="line">dp[i+1][j+1]=dp[i][j];</div><div class="line">if(p.charAt(j)==&apos;*&apos;) &#123;</div><div class="line">if (p.charAt(j-1)!=s.charAt(i)&amp;&amp;p.charAt(j-1)!=&apos;.&apos;)</div><div class="line">dp[i+1][j+1] = dp[i+1][j-1];</div><div class="line">else</div><div class="line">dp[i+1][j+1] = (dp[i+1][j]||dp[i][j+1]||dp[i+1][j-1]);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return dp[s.length()][p.length()];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Implement regular expression matching with support for ‘.’ and ‘&lt;e
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>My Personal Vim</title>
    <link href="http://www.mysry.com/2017/11/12/My-Personal-Vim/"/>
    <id>http://www.mysry.com/2017/11/12/My-Personal-Vim/</id>
    <published>2017-11-12T13:52:50.000Z</published>
    <updated>2017-11-12T14:05:03.834Z</updated>
    
    <content type="html"><![CDATA[<h2 id="why-do-this"><font color="black">Why do this?</font></h2><p>  Today, I make a update for my vim from 7.4 to 8.0, and accidentally overwritten my previous profile. So I am here to make a copy.</p><h2 id="vim-profile"><font color="" red="">Vim Profile</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line">runtime! debian.vim                                                                                                                            </div><div class="line">set background=dark                                                              </div><div class="line">syntax on                     &quot;语法高亮                                                   </div><div class="line">set cul                       &quot;    </div><div class="line">set ruler                     &quot;设置标尺                                                   </div><div class="line">set autoindent                &quot;自动缩进                                           </div><div class="line">set tabstop=4                 &quot;设置tab长度                                                   </div><div class="line">set softtabstop=4             &quot;                                                   </div><div class="line">set shiftwidth=4              &quot;                                                   </div><div class="line">set history=1000              &quot;                                        </div><div class="line">set hlsearch                  &quot;搜索高亮                                                   </div><div class="line">set expandtab                 &quot;用空格代替tab                                                   </div><div class="line">&quot;filetype indent on           &quot;                                         </div><div class="line">set cursorline                &quot;当前行高亮                                                </div><div class="line">set nobackup                  &quot;                                                   </div><div class="line">set encoding=utf-8            &quot;设置默认编码格式                                         </div><div class="line">set textwidth=80              &quot;文本宽度                                               </div><div class="line">set colorcolumn=81            &quot;80列提醒                                           </div><div class="line">                                                                                 </div><div class="line">nnoremap &lt;F2&gt; :set number!&lt;CR&gt;  &quot;&lt;F2&gt; 一键开关行号，便于复制                                         </div><div class="line">                                                                                                                                        </div><div class="line">                                                                                 </div><div class="line">&quot;set Vundle                    &quot;Vundle 插件管理                     </div><div class="line">                                                                                 </div><div class="line">set nocompatible                                                                 </div><div class="line">filetype off                                                                     </div><div class="line">&quot; set the runtime path to include Vundle and initialize                          </div><div class="line">set rtp+=~/.vim/bundle/Vundle.vim                                                </div><div class="line">call vundle#begin()                                                              </div><div class="line">&quot; alternatively, pass a path where Vundle should install plugins                 </div><div class="line">&quot;call vundle#begin(&apos;~/some/path/here&apos;)                                           </div><div class="line">                                                                                 </div><div class="line">&quot; let Vundle manage Vundle, required                                             </div><div class="line">Plugin &apos;VundleVim/Vundle.vim&apos;                                                    </div><div class="line">                                                                                 </div><div class="line">&quot; The following are examples of different formats supported.                     </div><div class="line">&quot; Keep Plugin commands between vundle#begin/end.                                 </div><div class="line">&quot; plugin on GitHub repo                                                          </div><div class="line">Plugin &apos;tpope/vim-fugitive&apos;                                                      </div><div class="line">&quot; plugin from http://vim-scripts.org/vim/scripts.html                            </div><div class="line">&quot; Plugin &apos;L9&apos;                                                                    </div><div class="line">&quot; Git plugin not hosted on GitHub                                                </div><div class="line">Plugin &apos;git://git.wincent.com/command-t.git&apos;                                     </div><div class="line">                                                                                 </div><div class="line">Plugin &apos;Valloric/YouCompleteMe&apos;      &quot;语法补全，超级厉害的插件                                  </div><div class="line">                                                                                 </div><div class="line">Plugin &apos;plasticboy/vim-markdown&apos;     &quot;Markdown插件                   </div><div class="line">                                                                                 </div><div class="line">Plugin &apos;Raimondi/delimitMate&apos;        &quot;括号补全                               </div><div class="line">Plugin &apos;wakatime/vim-wakatime&apos;       &quot;统计coding信息的插件                                                                 </div><div class="line">&quot; git repos on your local machine (i.e. when working on your own plugin)         </div><div class="line">&quot;Plugin &apos;file:///home/gmarik/path/to/plugin&apos;                                      </div><div class="line">&quot; The sparkup vim script is in a subdirectory of this repo called vim.           </div><div class="line">&quot; Pass the path to set the runtimepath properly.                                 </div><div class="line">&quot;Plugin &apos;rstacruz/sparkup&apos;, &#123;&apos;rtp&apos;: &apos;vim/&apos;&#125;                                       </div><div class="line">&quot; Install L9 and avoid a Naming conflict if you&apos;ve already installed a           </div><div class="line">&quot; different version somewhere else.                                              </div><div class="line">&quot; Plugin &apos;ascenator/L9&apos;, &#123;&apos;name&apos;: &apos;newL9&apos;&#125;                                       </div><div class="line">                                                                                 </div><div class="line">&quot; All of your Plugins must be added before the following line                    </div><div class="line">call vundle#end()            &quot; required                                          </div><div class="line">filetype plugin indent on    &quot; required                                          </div><div class="line">&quot; To ignore plugin indent changes, instead use:                                                                                                </div><div class="line">&quot;filetype plugin on                                                              </div><div class="line">&quot;                                                                                </div><div class="line">&quot; Brief help                                                                     </div><div class="line">&quot; :PluginList       - lists configured plugins                                   </div><div class="line">&quot; :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate</div><div class="line">&quot; :PluginSearch foo - searches for foo; append `!` to refresh local cache        </div><div class="line">&quot; :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal</div><div class="line">&quot;                                                                                </div><div class="line">&quot; see :h vundle for more details or wiki for FAQ                                 </div><div class="line">&quot; Put your non-Plugin stuff after this line</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;why-do-this&quot;&gt;&lt;font color=&quot;black&quot;&gt;Why do this?&lt;/font&gt;&lt;/h2&gt;
&lt;p&gt;  Today, I make a update for my vim from 7.4 to 8.0, and accidentally o
      
    
    </summary>
    
    
      <category term="skills" scheme="http://www.mysry.com/tags/skills/"/>
    
  </entry>
  
  <entry>
    <title>24. Swap Nodes in Pairs</title>
    <link href="http://www.mysry.com/2017/11/12/24-Swap-Nodes-in-Pairs/"/>
    <id>http://www.mysry.com/2017/11/12/24-Swap-Nodes-in-Pairs/</id>
    <published>2017-11-12T13:49:03.000Z</published>
    <updated>2017-11-12T13:52:13.866Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a linked list, swap every two adjacent nodes and return its head. Your algorithm should use only constant space. You may not modify the values in the list, only nodes itself can be changed.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Also a recursion to solve this problem.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * public class ListNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     ListNode next;</div><div class="line"> *     ListNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public ListNode swapPairs(ListNode head) &#123;</div><div class="line">     if(head==null||head.next==null) return head;</div><div class="line">ListNode n=head.next;</div><div class="line">head.next=swapPairs(head.next.next);</div><div class="line">n.next=head;</div><div class="line">return n;   </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a linked list, swap every two adjacent nodes and return its 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>23. Merge k Sorted Lists</title>
    <link href="http://www.mysry.com/2017/11/12/23-Merge-k-Sorted-Lists/"/>
    <id>http://www.mysry.com/2017/11/12/23-Merge-k-Sorted-Lists/</id>
    <published>2017-11-12T13:41:33.000Z</published>
    <updated>2017-11-12T13:48:32.942Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  This is a hard problem in leetcode, but wo could solve it in a easy way. We firstly make sure we can merge two sorted lists, it’s easy! Than what we think is how to make all this lists become pairs, we use a recursion to do this. So there are two auxiliary function. It’s not hard to understand, see the Java code.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * public class ListNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     ListNode next;</div><div class="line"> *     ListNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public ListNode mergeKLists(ListNode[] lists) &#123;</div><div class="line">     return partion(lists,0,lists.length-1);</div><div class="line">    &#125;</div><div class="line">    public static ListNode merge(ListNode l1,ListNode l2) &#123;</div><div class="line">if(l1 == null) return l2;</div><div class="line">if(l2 == null) return l1;</div><div class="line">if(l1.val&lt;l2.val) &#123;</div><div class="line">l1.next=merge(l1.next,l2);</div><div class="line">return l1;</div><div class="line">&#125;else &#123;</div><div class="line">l2.next=merge(l1,l2.next);</div><div class="line">return l2;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">public static ListNode partion(ListNode []lists,int s,int e) &#123;</div><div class="line">if(s==e)return lists[s];</div><div class="line">if(s&lt;e) &#123;</div><div class="line">int q=(s+e)/2;</div><div class="line">ListNode l1=partion(lists,s,q);</div><div class="line">ListNode l2=partion(lists,q+1,e);</div><div class="line">return merge(l1,l2);</div><div class="line">&#125;</div><div class="line">else return null;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Merge k sorted linked lists and return it as one sorted list. Anal
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>hexo + MathJax</title>
    <link href="http://www.mysry.com/2017/11/11/hexo-Mathjax/"/>
    <id>http://www.mysry.com/2017/11/11/hexo-Mathjax/</id>
    <published>2017-11-11T13:38:24.000Z</published>
    <updated>2017-11-11T14:04:25.127Z</updated>
    
    <content type="html"><![CDATA[<p>  最近写博客遇到了很多的数学公式，以前的想法是讲述学工是写出来后街图上传到sm.ms图床，获取html或markdown链接贴到博客里，后来发现实在繁琐，而且公式清晰度不够，排版也相对难看，于是便想到了Latex强大的数学公式编辑能力。</p><p>  对于MathJax，早有大神写好了hexo的Math插件，只需安装即可: <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-math --save</div><div class="line">hexo math install</div></pre></td></tr></table></figure></p><p>但是我的hexo的渲染并不成功，不断报错，经检查发现，改插件和hexo-inject冲突，狠心卸载inject，并没有什么影响，再更改<code>/node_modules/marked/lib</code>中: <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">escape: /^\\([\\`*&#123;&#125;\[\]()# +\-.!_&gt;])/</div></pre></td></tr></table></figure></p><p>替换成 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">escape: /^\\([`*\[\]()# +\-.!_&gt;])/</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">em: /^\b_((?:[^_]|__)+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</div></pre></td></tr></table></figure><p>替换成: <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">em:/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</div></pre></td></tr></table></figure></p><p>这样MathJax和marked.js就可以共存了。 更为详细的<a href="https://github.com/hexojs/hexo-math" target="_blank" rel="external">hexo-math</a>信息。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  最近写博客遇到了很多的数学公式，以前的想法是讲述学工是写出来后街图上传到sm.ms图床，获取html或markdown链接贴到博客里，后来发现实在繁琐，而且公式清晰度不够，排版也相对难看，于是便想到了Latex强大的数学公式编辑能力。&lt;/p&gt;
&lt;p&gt;  对于MathJa
      
    
    </summary>
    
    
      <category term="skills" scheme="http://www.mysry.com/tags/skills/"/>
    
  </entry>
  
  <entry>
    <title>4. Median of Two Sorted Arrays</title>
    <link href="http://www.mysry.com/2017/11/11/4-Median-of-Two-Sorted-Arrays/"/>
    <id>http://www.mysry.com/2017/11/11/4-Median-of-Two-Sorted-Arrays/</id>
    <published>2017-11-11T13:11:43.000Z</published>
    <updated>2017-11-11T13:27:16.292Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>There are two sorted arrays nums1 and nums2 of size m and n respectively.</p></blockquote><blockquote><p>Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  In order to make time complexity <span class="math inline">\(O(\log(m+n))\)</span>, we should ignore half part of A and B recursively by comparing the median of remaining A and B: <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">if (aMid &lt; bMid) Keep [aRight + bLeft]    </div><div class="line">else Keep [bRight + aLeft]</div></pre></td></tr></table></figure></p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public double findMedianSortedArrays(int[] nums1, int[] nums2) &#123;</div><div class="line">      int m=nums1.length,n=nums2.length;</div><div class="line">int left = (m+n+1)/2;</div><div class="line">int right = (m+n+2)/2;</div><div class="line">return (getkth(nums1,0,nums2,0,left)+getkth(nums1,0,nums2,0,right))/2.0;  </div><div class="line">    &#125;</div><div class="line">    public double getkth(int[]nums1,int aStart,int []nums2,int bStart,int k) &#123;</div><div class="line">if(aStart&gt;nums1.length-1) return nums2[bStart +k -1];</div><div class="line">if(bStart&gt;nums2.length-1) return nums1[aStart +k -1];</div><div class="line">if(k==1) return Math.min(nums1[aStart], nums2[bStart]);</div><div class="line"></div><div class="line">int aMid = Integer.MAX_VALUE,bMid=Integer.MAX_VALUE;</div><div class="line">if(aStart +k/2-1&lt;nums1.length) aMid = nums1[aStart + k/2-1];</div><div class="line">if(bStart +k/2-1&lt;nums2.length) bMid = nums2[bStart + k/2-1];</div><div class="line">if(aMid&lt;bMid) return getkth(nums1,aStart +k/2,nums2,bStart,k-k/2);</div><div class="line">else return getkth(nums1,aStart,nums2,bStart+k/2,k-k/2);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;There are two sorted arrays nums1 and nums2 of size m and n respec
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>22. Generate Parentheses</title>
    <link href="http://www.mysry.com/2017/11/11/22-Generate-Parentheses/"/>
    <id>http://www.mysry.com/2017/11/11/22-Generate-Parentheses/</id>
    <published>2017-11-11T13:01:15.000Z</published>
    <updated>2017-11-11T13:10:58.319Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Easy recurison. When left parenthesis’s number is smaller than n, we could creat new left parenthesis, when right parenthesis’s number is smaller than n, we could set new parenthesis.</p><h2 id="java-code"><font color="orange">Java Code:<font></font></font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public List&lt;String&gt; generateParenthesis(int n) &#123;</div><div class="line">       List&lt;String&gt; list= new ArrayList&lt;String&gt;();</div><div class="line">backtrack(list,&quot;&quot;,0,0,n);</div><div class="line">return list; </div><div class="line">    &#125;</div><div class="line">    public void backtrack(List&lt;String&gt;list,String str,int open,int close,int max) &#123;</div><div class="line">if(str.length()==max*2)&#123;</div><div class="line">        list.add(str);</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">if(open&lt;max)backtrack(list,str+&quot;(&quot;,open+1,close,max);</div><div class="line">if(close&lt;open) backtrack(list,str+&quot;)&quot;,open,close+1,max);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given n pairs of parentheses, write a function to generate all com
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>几种常见的求解无约束最优化问题的方法</title>
    <link href="http://www.mysry.com/2017/11/11/%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E7%9A%84%E6%B1%82%E8%A7%A3%E6%97%A0%E7%BA%A6%E6%9D%9F%E6%9C%80%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://www.mysry.com/2017/11/11/几种常见的求解无约束最优化问题的方法/</id>
    <published>2017-11-11T02:15:28.000Z</published>
    <updated>2017-11-11T09:42:18.026Z</updated>
    
    <content type="html"><![CDATA[<h2 id="梯度下降法">梯度下降法</h2><p>  梯度下降法是一种迭代算法，通过选取适当的初值<span class="math inline">\(\theta\)</span>，不断迭代,更新<span class="math inline">\(\theta\)</span>的值，进行目标函数的极小化，直到收敛，由于负梯度方向是使 函数值下降最快的方向，在迭代的每一步，以负的梯度方向更新<span class="math inline">\(\theta\)</span>，从而达到减小函数值的目的。算法流程如下:</p><ul><li>首先对<span class="math inline">\(\theta\)</span>进行赋值，这个值可以使随机的也可以让<span class="math inline">\(\theta\)</span>是一个全0的向量</li><li>改变<span class="math inline">\(\theta\)</span>的值，使得 <span class="math inline">\(J_\theta\)</span>按照梯度下降的方向进行减少:<span class="math display">\[\theta_j := \theta_j + \alpha(y^{(i)} - h_\theta(x^{(i)}))x_{j}^{x(i)}\]</span></li></ul><p>  迭代更新的方式有两种，一种是批梯度下降，即对全部的训练数据求得误差后在对，另外一中是增量梯度下降，没扫描一步都要 对，前一种方法能够不断收敛，后一种方法结果可能不断在收敛处徘徊。一般来说，梯度下降法的收敛速度还是比较慢的。</p><h2 id="最小二乘法">最小二乘法</h2><p>  将训练特征表示为X矩阵，结果表示为y向量，仍然是线性回归模型，误差函数不变，那么:<span class="math display">\[ \theta = ({X^T}X)^{-1}X^T{\vec y}\]</span>.</p><h2 id="牛顿法和拟牛顿法">牛顿法和拟牛顿法</h2><h3 id="牛顿法">牛顿法</h3><p>  考虑无约束最优化问题<span class="math display">\[\min_{x \in R^n}f(x)\]</span>其中<span class="math inline">\(x^*\)</span>为目标函数极小点。</p><p>  假设<span class="math inline">\(f(x)\)</span>具有二阶连续偏导数，若第k次迭代值为<span class="math inline">\(x^{(k)}\)</span>，则可将<span class="math inline">\(f(x)\)</span>在<span class="math inline">\(x^{(k)}\)</span>附近进行二阶泰勒展开:<span class="math display">\[ f(x)=f(x^{(k)}+{g_k^T}(x-x^{(k)}) + \frac{1}{2}{(x-x^{(k)})^T}H(x^{(k)})(x-x^{(k)})\]</span>其中<span class="math inline">\(g_k = g(x^{(k)}) = \nabla f(x^{(k)})\)</span>是<span class="math inline">\(f(x)\)</span>的梯度在点<span class="math inline">\(x^{(k)}\)</span>的值，<span class="math inline">\(H(x^{(k)})\)</span>是<span class="math inline">\(f(x)\)</span>的海赛矩阵(Hesse   matrix):<span class="math display">\[ H(x) = [\frac{\vartheta^2 f}{\vartheta x_i \vartheta x_j}]_{n \times n}\]</span>在点<span class="math inline">\(x^{(k)}\)</span>的值。</p><p>  牛顿法利用的极小点的必要条件<span class="math display">\[\nabla f(x) = 0\]</span>,每次迭代都是从点<span class="math inline">\(x^{(k)}\)</span>开始，求目标函数的极小点，作为第<span class="math inline">\(k+1\)</span>次迭代值<span class="math inline">\(x^{(k+1)}\)</span>,具体的，假设<span class="math inline">\(x^{(k+1)}\)</span>满足:<span class="math display">\[\nabla f(x^{(k+1)}) = 0\]</span>有<span class="math display">\[\nabla f(x) = g_k + H_k(x-x^{(k)})\]</span>其中<span class="math inline">\(H_k = H(x^{(k)})\)</span>，如此一来：<span class="math display">\[g_k + H_k(x^{(k+1)}-x^{(k)}) = 0\]</span>因而，<span class="math display">\[x^{(k+1)}=x^{(k)}+P_k\]</span>其中，<span class="math display">\[{H_k}{P_k} = -g_k\]</span>.</p><h4 id="算法牛顿法">算法(牛顿法）:</h4><ul><li>取初始值<span class="math inline">\(x^{(k)}\)</span>，置k = 0;</li><li>计算<span class="math inline">\(g_k = g(x^{(k)})\)</span>;</li><li>若<span class="math inline">\(\lVert g_k \lVert &lt; \varepsilon\)</span>，则停止计算，得近似解<span class="math inline">\(x^* = x^{(k)}\)</span>;</li><li>计算<span class="math inline">\(H_k=H(x^{(k)})\)</span>,并根据<span class="math inline">\(H_k P_k =-g_k\)</span>求解<span class="math inline">\(p_k\)</span>;</li><li>置<span class="math inline">\(x^{(k+1)} = x^{(k)} +p_k\)</span>;<br></li><li>置<span class="math inline">\(k=k+1\)</span>,转（2）.</li></ul><p>  步骤（4）求解<span class="math inline">\(p_k\)</span>，要求<span class="math inline">\(H_{k}^{-1}\)</span>,计算比较复杂，针对其提出改进，则有了下面的拟牛顿法.</p><h3 id="拟牛顿法">拟牛顿法</h3><p>  拟牛顿法的基本思路是考虑利用一个n阶矩阵<span class="math inline">\(G_k=G(x^{(i)})\)</span>来近似代替<span class="math inline">\(H_k^{-1}=H^{-1}(x^{(k)})\)</span>。</p><p>  先看牛顿法迭代中的海赛矩阵<span class="math inline">\(H_k\)</span>满足的条件，首先<span class="math inline">\(H_k\)</span>满足以下关系：<span class="math display">\[g_{k+1}-g_k=H_k(x^{(k+1)}-x^{(k)})\]</span>记<span class="math inline">\(y_k=g_{k+1} -g_k\)</span>,<span class="math inline">\(\delta_k=x^{(k+1)}-x^{(k)}\)</span>,则<span class="math display">\[y_k=H_k \delta_k\]</span>或<span class="math display">\[H_k^{-1}y_k=\delta_k\]</span>上述公式被称为拟牛顿条件。</p><p>  如果<span class="math inline">\(H_k\)</span>是正定的(<span class="math inline">\(H_k^{-1}\)</span>也是正定的),那么可以保证牛顿法的搜索方向 <span class="math inline">\(p_k\)</span>是下降方向，这是因为搜索方向是<span class="math inline">\(p_k=-H_k^{-1}g_k\)</span>, <span class="math display">\[x=x^{(k)}+\lambda p_k =x^{(k)}-\lambda H_k^{-1}g_k\]</span>所以<span class="math inline">\(f(x)\)</span>在<span class="math inline">\(x^{(k)}\)</span>的泰勒展开式可以近似写成:<span class="math display">\[f(x)=f(x^{(k)})-\lambda g_k^TH_k^{-1}g_k\]</span>因<span class="math inline">\(H_k^{-1}\)</span>正定，固有<span class="math inline">\(g_k^TH_k^{-1}g_k &gt; 0\)</span>.当<span class="math inline">\(\lambda\)</span>为一个充分小的正数时，总有<span class="math inline">\(f(x)&lt;f(x^{(k)})\)</span>,也即<span class="math inline">\(p_k\)</span>下降的方向。</p><p>  是将<span class="math inline">\(G_k\)</span>作为<span class="math inline">\(H_k^{-1}\)</span>的近似或选择<span class="math inline">\(B_k\)</span>作为<span class="math inline">\(H_k\)</span>的近似的算法称为拟牛顿法，参照拟牛顿法的条件，每次迭代可以选择更新矩阵<span class="math inline">\(G_{k+1}\)</span>:<span class="math display">\[G_{k+1}=G_k+\Delta G_k\]</span>先面介绍几种拟牛顿法：</p><h4 id="dfpdavidon-fletcher-powerii算法dfp-algorithm">DFP(Davidon-Fletcher-PowerII)算法（DFP algorithm）</h4><ul><li>取初始值<span class="math inline">\(x^{(k)}\)</span>，置k = 0,取<span class="math inline">\(G_0\)</span>为正定对称矩阵;<br></li><li>计算<span class="math inline">\(g_k = g(x^{(k)})\)</span>，若<span class="math inline">\(\lVert g_k \lVert &lt; \varepsilon\)</span>，则停止计算，得近似解<span class="math inline">\(x^* = x^{(k)}\)</span>，否则转下一步;<br></li><li>置<span class="math inline">\(p_k=-G_k g_k\)</span>;<br></li><li>一维搜索:求<span class="math inline">\(\lambda\)</span>使得<span class="math display">\[f(x^{(k)}+\lambda_k p_k)=\min_{\lambda\geq 0}f(x^{(k)}+\lambda p_k)\]</span></li><li>置<span class="math inline">\(x^{(k+1)}=x^{(k)}+\lambda_kp_k\)</span>;</li><li>计算<span class="math inline">\(g_{k+1}=g(x^{(k+1)})\)</span>,若<span class="math inline">\(\lVert g_{k+1}\lVert&lt;\epsilon\)</span>,则停止计算，得近似解<span class="math inline">\(x^*=x^{(k+1)}\)</span>,否则按照<span class="math display">\[G_{k+1}=G_k+\frac{\delta_k\delta_k^T}{\delta_k^T y_k}-\frac{G_k y_k y_K^T G_k}{y_k^T G_k y_k}\]</span></li><li>置<span class="math inline">\(k=k+1\)</span>,转（3）.</li></ul><h5 id="caution"><font color="red">Caution:</font></h5><ul><li>DFP算法是利用<span class="math inline">\(G_k\)</span>逼近海赛矩阵的逆矩阵<span class="math inline">\(H^{-1}\)</span>;</li><li>可以证明如果初始矩阵<span class="math inline">\(G_0\)</span>是正定的，则迭代过程中的每一个矩阵<span class="math inline">\(G_k\)</span>都是正定的。</li></ul><h4 id="bfgsbroyden-fletcher-goldfarb-shanno算法bfgs-algorithm">BFGS(Broyden-Fletcher-Goldfarb-Shanno)算法(BFGS algorithm):</h4><ul><li>BFGS算法大体流程和DFP算法相同，不过采用<span class="math inline">\(B_k\)</span>逼近海赛矩阵H;</li><li><span class="math display">\[B_{k+1}=B_k+\frac{\delta_k\delta_k^T}{\delta_k^T y_k}-\frac{B_k y_k y_K^T B_k}{y_k^T B_k y_k}\]</span>其中<span class="math inline">\(y_k=p_k \delta_k\)</span>;</li></ul><h4 id="broyden类算法broydens-algorithm">Broyden类算法(Broyden’s algorithm)</h4><p>  我们可以从BFGS算法矩阵<span class="math inline">\(B_k\)</span>的迭代公式中得到BFGS算法中的关于<span class="math inline">\(G_k\)</span>的迭代公式，事实上，若记<span class="math inline">\(G_k=B_k^{-1}\)</span>,<span class="math inline">\(G_{k+1}=B_{k+1}^{-1}\)</span>,那么对<span class="math inline">\(B_k\)</span>的计算公式两次应用Sherman-Morrison公式既得<span class="math display">\[G_{k+1}=(I-\frac{\delta_k y_k^{-1}}{\delta_k^T y_k})G_k(I-\frac{\delta_k y_k^T}{\delta_k^T y_k})^T+\frac{\delta_k \delta_k^T}{\delta_k^T y_k}\]</span>称为BFGS关于<span class="math inline">\(G_K\)</span>的迭代公式，上述两个算法还可以取其线性组合<span class="math display">\[G_{k+1}=\alpha G^{DFP}+(1-\alpha)G^{BFGS}\]</span>也是正定的，满足拟牛顿条件，其中<span class="math inline">\(0\leq \alpha \leq 1\)</span>,如此即可得到一类拟牛顿算法，称为Broyden类算法。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;梯度下降法&quot;&gt;梯度下降法&lt;/h2&gt;
&lt;p&gt;  梯度下降法是一种迭代算法，通过选取适当的初值&lt;span class=&quot;math inline&quot;&gt;\(\theta\)&lt;/span&gt;，不断迭代,更新&lt;span class=&quot;math inline&quot;&gt;\(\theta\)
      
    
    </summary>
    
    
      <category term="Machine learning" scheme="http://www.mysry.com/tags/Machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>Linear Regression</title>
    <link href="http://www.mysry.com/2017/11/11/Linear-Regression/"/>
    <id>http://www.mysry.com/2017/11/11/Linear-Regression/</id>
    <published>2017-11-11T01:23:57.000Z</published>
    <updated>2017-11-11T05:52:00.275Z</updated>
    
    <content type="html"><![CDATA[<h2 id="线性回归">线性回归</h2><p>  线性回归假设满足线性关系，每个特征对于结果的影响由其前面的参数决定，而且每个特征变量可以先映射到一个函数，在参与线性计算，如此一来即可表达特征与结果的的非线性关系。   我们用<span class="math inline">\(X_1\)</span>.<span class="math inline">\(X_2\)</span>,…,<span class="math inline">\(X_n\)</span>去描述feature中的分量，作出估计函数: <span class="math display">\[h(x)={h_\theta}(x)=\theta_0+{\theta_1}{x_1}+{\theta_2}{x_2}+\cdots+{\theta_n}{x_n}\]</span> 其中，意思是调整feature中的每次参数的影响，若我们<span class="math inline">\(X_0=1\)</span>,就可以把上述公式向量化:<span class="math display">\[{h_\theta}(x) = {\theta^T}X\]</span>   我们同样需要评估机制去评判我们的，所以需要对h函数进行评估，把评估函数称为损失函数(loss function)，认为损失函数如下:<span class="math display">\[J(\theta)={\frac{1}{2}}\sum_{i=1}^{n}({h_\theta}(x^{(i)})-y^{(i)})^2\]</span> <span class="math display">\[\min_{\theta}J_\theta\]</span>   损失函数是对<span class="math inline">\(x(i)\)</span>的估计值与真实值<span class="math inline">\(y(i)\)</span>差的平方和作为错误估计函数，那么如何调整<span class="math inline">\(\theta\)</span>以使得<span class="math inline">\(J(\theta)\)</span>取得最小值呢? 参考<a href="http://www.mysry.com/2017/11/11/%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E7%9A%84%E6%B1%82%E8%A7%A3%E6%97%A0%E7%BA%A6%E6%9D%9F%E6%9C%80%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98%E7%9A%84%E6%96%B9%E6%B3%95/">几种常见的求解无约束最优化问题的方法</a></p><h2 id="误差函数为什么要选用平方和函数">误差函数为什么要选用平方和函数？</h2><p>  假设根据特征的预测结果与实际结果有误差<span class="math inline">\(\varepsilon^{(i)}\)</span>,那么预测结果<span class="math inline">\(\theta^T x^{(i)}\)</span>和真实结果<span class="math inline">\(y^{(i)}\)</span>满足下式：<span class="math display">\[y^{(i)}=\theta^T x^{(i)} + \varepsilon^{(i)}\]</span>一般来将，误差满足平均值为0的高斯分布，也即正态分布。那么x和y的条件概率也就是：<span class="math display">\[p(y^{(i)}|x^{(i)};\theta)=\frac{1}{\sqrt{2\pi}\sigma}exp(-\frac{(y^{(i)}-\theta^T x^{(i)})^2}{2\sigma^2})\]</span></p><p>  这里就估计了一条样本的结果概率，然而我们期待的模型能够在全部样本上预测最准，也就是概率积最大，这个概率积称为最大死然估计，我们希望在最大似然估计得到最大值时确定<span class="math inline">\(\theta\)</span>，那么需要对最大似然估计公式求导：<span class="math display">\[\frac{1}{2}\sum_{i=1}^{m}(y^{(i)}-\theta^T x^{(i)})^2\]</span>这就解释了为什么误差函数要使用平方和，在推导过程中也有一些前提条件，这里不在展开。</p><h2 id="带权重的线性回归">带权重的线性回归</h2><p>  前面提到的线性回归的误差函数里系统都是1，没有权重。带权重的线性回归加入了权重信息：</p><ul><li>Fit <span class="math inline">\(\theta\)</span> to <span class="math inline">\(minimize\sum_i \omega^{(i)}(y^{(i)} - \theta^T x^{(i)})^2\)</span></li><li>Output <span class="math inline">\(\theta^T x\)</span></li></ul><p>其中假设<span class="math inline">\(\omega^{(i)}\)</span>符合公式<span class="math display">\[\omega^{(i)} = exp (-\frac{(x^{(i)}-x)^2}{2\tau^2})\]</span>其中x是要预测的特征，这样假设的道理是离x越近的样本权重越大，越远的影响越小，这个公式与高斯分布不同，因为<span class="math inline">\(\omega^{(i)}\)</span>不是随机变量。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;线性回归&quot;&gt;线性回归&lt;/h2&gt;
&lt;p&gt;  线性回归假设满足线性关系，每个特征对于结果的影响由其前面的参数决定，而且每个特征变量可以先映射到一个函数，在参与线性计算，如此一来即可表达特征与结果的的非线性关系。   我们用&lt;span class=&quot;math inlin
      
    
    </summary>
    
    
      <category term="Machine learning" scheme="http://www.mysry.com/tags/Machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>19. Remove Nth Node From End of List</title>
    <link href="http://www.mysry.com/2017/11/10/19-Remove-Nth-Node-From-End-of-List/"/>
    <id>http://www.mysry.com/2017/11/10/19-Remove-Nth-Node-From-End-of-List/</id>
    <published>2017-11-10T13:50:35.000Z</published>
    <updated>2017-11-10T13:56:38.503Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a linked list, remove the nth node from the end of list and return its head.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  We create two pointers, one is faster another is slower, locate the faster one to n+1, then contineously move fast pointer and slower pointer, when faster equals 0, skip slower pointer to next.next.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><pre><code>/** * Definition for singly-linked list. * public class ListNode { *     int val; *     ListNode next; *     ListNode(int x) { val = x; } * } */class Solution {    public ListNode removeNthFromEnd(ListNode head, int n) {        ListNode start = new ListNode(0);    ListNode slow = start,fast = start;    slow.next = head;    for (int i=1;i&lt;=n+1;i++) {        fast = fast.next;    }    while (fast != null) {        slow = slow.next;        fast = fast.next;    }    slow.next = slow.next.next;    return start.next;    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a linked list, remove the nth node from the end of list and 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>18. 4Sum</title>
    <link href="http://www.mysry.com/2017/11/10/18-4Sum/"/>
    <id>http://www.mysry.com/2017/11/10/18-4Sum/</id>
    <published>2017-11-10T13:39:55.000Z</published>
    <updated>2017-11-10T13:49:58.494Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> I separate this problem to three pieces to simplify 4sum to 3sum, 2sumuntil find the solution. It’s a litter complicated.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">   public List&lt;List&lt;Integer&gt;&gt; fourSum(int[]nums,int target)&#123;</div><div class="line">ArrayList&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;List&lt;Integer&gt;&gt;();</div><div class="line">int len = nums.length;</div><div class="line">if(nums==null|| len&lt; 4) return res;</div><div class="line">Arrays.sort(nums);</div><div class="line">int max = nums[len-1];</div><div class="line">if(4*nums[0]&gt;target || 4*max&lt;target)return res;</div><div class="line">int i,z;</div><div class="line">for(i=0;i&lt;len;i++) &#123;</div><div class="line">z = nums[i];</div><div class="line">if(i&gt;0 &amp;&amp; z==nums[i-1]) continue;</div><div class="line">if(z + 3*max &lt;target) continue;</div><div class="line">if (4*z &gt; target ) break;</div><div class="line">if(4*z == target ) &#123;</div><div class="line">if(i+3&lt;len &amp;&amp; nums[i+3]==z)res.add(Arrays.asList(z,z,z,z));</div><div class="line">break;</div><div class="line">&#125;</div><div class="line">threeSumForFourSum(nums,target-z,i+1,len-1,res,z);</div><div class="line">&#125;</div><div class="line">return res;</div><div class="line">&#125;</div><div class="line">public void threeSumForFourSum(int[]nums,int target,int low,int high,ArrayList&lt;List&lt;Integer&gt;&gt;fourSumList,int z1) &#123;</div><div class="line">if(low+1&gt;=high)return;</div><div class="line">int max= nums[high];</div><div class="line">if(3*nums[low]&gt;target||3*max&lt;target) return;</div><div class="line">int i,z;</div><div class="line">for ( i=low;i&lt;high-1;i++) &#123;</div><div class="line">z = nums[i];</div><div class="line">if(i&gt;low&amp;&amp; z==nums[i-1]) continue;</div><div class="line">if(z+2*max&lt;target) continue;</div><div class="line">if(3*z&gt;target) break;</div><div class="line">if(3*z==target) &#123;</div><div class="line">if(i+1&lt;high&amp;&amp;nums[i+2]==z) fourSumList.add(Arrays.asList(z1,z,z,z));</div><div class="line">break;</div><div class="line">&#125;</div><div class="line">twoSumForFourSum(nums,target-z,i+1,high,fourSumList,z1,z);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">public void twoSumForFourSum(int[]nums,int target, int low,int high,ArrayList&lt;List&lt;Integer&gt;&gt;fourSumList,int z1,int z2) &#123;</div><div class="line">if(low&gt;=high) return;</div><div class="line">if(2*nums[low]&gt;target||2*nums[high]&lt;target)return;</div><div class="line">int i=low,j=high,sum,x;</div><div class="line">while(i&lt;j) &#123;</div><div class="line">sum = nums[i]+nums[j];</div><div class="line">if(sum == target) &#123;</div><div class="line">fourSumList.add(Arrays.asList(z1,z2,nums[i],nums[j]));</div><div class="line"></div><div class="line">x=nums[i];</div><div class="line">while(++i&lt;j &amp;&amp; x==nums[i]);</div><div class="line">x=nums[j];</div><div class="line">while(i&lt;--j &amp;&amp; x== nums[j]);</div><div class="line">&#125;</div><div class="line">if(sum&lt;target) i++;</div><div class="line">if(sum&gt;target) j--;</div><div class="line">&#125;</div><div class="line">return;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an array S of n integers, are there elements a, b, c, and d 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>17. Letter Combinations of a Phone Number</title>
    <link href="http://www.mysry.com/2017/11/09/17-Letter-Combinations-of-a-Phone-Number/"/>
    <id>http://www.mysry.com/2017/11/09/17-Letter-Combinations-of-a-Phone-Number/</id>
    <published>2017-11-09T15:17:51.000Z</published>
    <updated>2017-11-09T15:26:53.823Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a digit string, return all possible letter combinations that the number could represent.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> We use a FIFO queue.See the code:</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public List&lt;String&gt; letterCombinations(String digits) &#123;</div><div class="line"> LinkedList&lt;String&gt; ans = new LinkedList&lt;String&gt;();</div><div class="line">        if(digits==null||digits.length() ==0) return ans;</div><div class="line">    String[] mapping = new String[] &#123;&quot;0&quot;, &quot;1&quot;, &quot;abc&quot;, &quot;def&quot;, &quot;ghi&quot;, &quot;jkl&quot;, &quot;mno&quot;, &quot;pqrs&quot;, &quot;tuv&quot;, &quot;wxyz&quot;&#125;;</div><div class="line">    ans.add(&quot;&quot;);</div><div class="line">    for(int i =0; i&lt;digits.length();i++)&#123;</div><div class="line">        int x = Character.getNumericValue(digits.charAt(i));</div><div class="line">        while(ans.peek().length()==i)&#123;</div><div class="line">            String t = ans.remove();</div><div class="line">            for(char s : mapping[x].toCharArray())</div><div class="line">                ans.add(t+s);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return ans;  </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a digit string, return all possible letter combinations that
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>16. 3Sum Closest</title>
    <link href="http://www.mysry.com/2017/11/09/16-3Sum-Closest/"/>
    <id>http://www.mysry.com/2017/11/09/16-3Sum-Closest/</id>
    <published>2017-11-09T15:08:41.000Z</published>
    <updated>2017-11-09T15:17:16.433Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> If we want to solve this problem in o(n^2) space, we need to approach the target number both from the head and tail of this array, and the inner loop begin from i+1.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int threeSumClosest(int[] nums, int target) &#123;</div><div class="line">        // if(nums==null||nums.length&lt;=2) return 0;    </div><div class="line">        int result = nums[0] +nums[1]+nums[nums.length-1];    </div><div class="line">        Arrays.sort(nums);    </div><div class="line">        for (int i = 0; i&lt;nums.length-2;i++)&#123;    </div><div class="line">            int start = i+1,end = nums.length-1;    </div><div class="line">            while(start&lt;end)&#123;    </div><div class="line">                int sum = nums[i] + nums[start] + nums[end];    </div><div class="line">                if(sum&gt;target) end--;    </div><div class="line">                else start++;    </div><div class="line">                if (Math.abs(sum - target) &lt; Math.abs(result - target))    </div><div class="line">                    result = sum;    </div><div class="line">            &#125;    </div><div class="line">        &#125;    </div><div class="line">        return result; </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an array S of n integers, find three integers in S such that
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>15. 3Sum</title>
    <link href="http://www.mysry.com/2017/11/08/15-3Sum/"/>
    <id>http://www.mysry.com/2017/11/08/15-3Sum/</id>
    <published>2017-11-08T13:57:56.000Z</published>
    <updated>2017-11-08T14:01:13.032Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> The idea is to sort an input array and then run through all indices of a possible first element of a triplet. For each possible first element we make a standard bi-directional 2Sum sweep of the remaining part of the array. Also we want to skip equal elements to avoid duplicates in the answer without making a set or smth like that.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">        public List&lt;List&lt;Integer&gt;&gt; threeSum(int[] nums) &#123;</div><div class="line">     Arrays.sort(nums);</div><div class="line">    List&lt;List&lt;Integer&gt;&gt; res = new LinkedList&lt;&gt;(); </div><div class="line">    for (int i = 0; i &lt; nums.length-2; i++) &#123;</div><div class="line">        if (i == 0 || (i &gt; 0 &amp;&amp; nums[i] != nums[i-1])) &#123;</div><div class="line">            int lo = i+1, hi = nums.length-1, sum = 0 - nums[i];</div><div class="line">            while (lo &lt; hi) &#123;</div><div class="line">                if (nums[lo] + nums[hi] == sum) &#123;</div><div class="line">                    res.add(Arrays.asList(nums[i], nums[lo], nums[hi]));</div><div class="line">                    while (lo &lt; hi &amp;&amp; nums[lo] == nums[lo+1]) lo++;</div><div class="line">                    while (lo &lt; hi &amp;&amp; nums[hi] == nums[hi-1]) hi--;</div><div class="line">                    lo++; hi--;</div><div class="line">                &#125; else if (nums[lo] + nums[hi] &lt; sum) lo++;</div><div class="line">                else hi--;</div><div class="line">           &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return res;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an array S of n integers, are there elements a, b, c in S su
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>12. Integer to Roman</title>
    <link href="http://www.mysry.com/2017/11/08/12-Integer-to-Roman/"/>
    <id>http://www.mysry.com/2017/11/08/12-Integer-to-Roman/</id>
    <published>2017-11-08T13:41:54.000Z</published>
    <updated>2017-11-08T13:57:20.451Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an integer, convert it to a roman numeral. Input is guaranteed to be within the range from 1 to 3999.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> We need to understand corresponding relationship for integer and Roman number, than create an int array and a string array to store integer and Roman number respectively. From the bigger Roman number to substract the nums to zero.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public String intToRoman(int num) &#123;</div><div class="line">        int[] values= &#123;1000,900,500,400,100,90,50,40,10,9,5,4,1&#125;;</div><div class="line">String[]str= &#123;&quot;M&quot;,&quot;CM&quot;,&quot;D&quot;,&quot;CD&quot;,&quot;C&quot;,&quot;XC&quot;,&quot;L&quot;,&quot;XL&quot;,&quot;X&quot;,&quot;IX&quot;,&quot;V&quot;,&quot;IV&quot;,&quot;I&quot;&#125;;</div><div class="line">StringBuilder sb = new StringBuilder();</div><div class="line">for (int i=0;i&lt;values.length;i++) &#123;</div><div class="line">while(num&gt;=values[i]) &#123;</div><div class="line">num-=values[i];</div><div class="line">sb.append(str[i]);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return sb.toString();</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an integer, convert it to a roman numeral. Input is guarante
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Machine Learning Q&amp;A 1</title>
    <link href="http://www.mysry.com/2017/11/07/Machine-Learning-Q-A-1/"/>
    <id>http://www.mysry.com/2017/11/07/Machine-Learning-Q-A-1/</id>
    <published>2017-11-07T14:34:02.000Z</published>
    <updated>2017-11-11T04:53:31.272Z</updated>
    
    <content type="html"><![CDATA[<h2 id="请简要介绍svm"><font color="black">请简要介绍SVM？</font></h2><p>  SVM,全称是surpport vector machine(支持向量机),SVM是一个面向数据的分类算法，其目标是确定一个分类超平面，从而将不同的数据集分开。 扩展：<a href="http://www.mysry.com/">SVM</a></p><h2 id="简要介绍tensorflow的计算图"><font color="black">简要介绍tensorflow的计算图？</font></h2><p>  Tensorflow是一个通过计算图的形式来表述计算的编程系统，计算图也叫数据流图，可以把计算图看成是一种有向图，Tensorflow中的每一个计算都是计算图上的一个节点，二节点之间的边描述了计算之间的依赖关系。</p><blockquote><p>Tensorflow一般可分为两部分 - 构造部分，包含计算流图 - 执行部分，通过session来执行图中的计算 构建图 - 创建源节点(source op) - 源节点输出传递给其他节点做运算 Tensorflow默认图 - Tensorflow python 库有一个默认图(default graph) - 节点构造器(op构造器)可以增加节点</p></blockquote><h2 id="在knn或k-means我们常用欧式距离来计算最近邻之间的距离有时也用曼哈顿距离请对比两者的差别"><font color="black">在kNN或k-means，我们常用欧式距离来计算最近邻之间的距离，有时也用曼哈顿距离，请对比两者的差别：</font></h2><p> 欧式距离，最常见的两点之间或多点之间的距离表示法，定义于欧几里德空间;  曼哈顿距离，l1距离或城市区块儿距离，即欧几里德空间的固定直角坐标系上两点形成的线段对轴产生的投影的距离综合。</p><h2 id="关于linear-regression"><font color="black">关于Linear Regression</font></h2><p> <a href="http://www.mysry.com/2017/11/11/Linear-Regression/">Linear Regression</a></p><h2 id="overfitting过拟合的解决方法"><font color="black">overfitting(过拟合)的解决方法</font></h2><p> Dropout、Regularization、Batch normalization。</p><h2 id="lr和svm的联系于区别"><font color="black">LR和SVM的联系于区别</font></h2><h3 id="联系"><font color="black">联系：</font></h3><ul><li>LR和SVM都可以处理分类问题，而且一般都用于处理线性二分类问题（再改进的情况下可以处理多分类问题）。</li><li>两个方法都可以增加不同规则的正则化项，所以在很多实验中，两种算法结果接近。</li></ul><h3 id="区别"><font color="black">区别</font></h3><ul><li>LR是参数模型，SVM是非参数模型。</li><li>从目标函数看，区别在于逻辑回归采用的是logistical loss，SVM采用的是hinge loss。这两个损失函数的目的都是增加对分类影响较大的数据点的权重，减少分类关系较小的数据点的权重。</li><li>SVM的处理方法是只考虑Support Vectors，也就是和分类最相关的少数点，去学习分类器。而LR通过非线性映射，大大减小了距离分类平面较远的点的权重，提升了与分类最相关的数据点的权重。</li><li>LR相对来说模型更为简单，好理解，特别是大规模线性分类时比较方便。而SVM的理解和优化相对来说更为复杂一点，转化为对偶问题后分类只需要计算与少数几个支持向量的距离，在计算复杂核函数时优势明显，能够大大简化模型和计算。</li><li>LR能做的SVM能做，但可能在准确率稍弱，但是有些SVM能做的LR不能做。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;请简要介绍svm&quot;&gt;&lt;font color=&quot;black&quot;&gt;请简要介绍SVM？&lt;/font&gt;&lt;/h2&gt;
&lt;p&gt;  SVM,全称是surpport vector machine(支持向量机),SVM是一个面向数据的分类算法，其目标是确定一个分类超平面，从而将不同的数
      
    
    </summary>
    
    
      <category term="Machine learning" scheme="http://www.mysry.com/tags/Machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>11. Container With Most Water</title>
    <link href="http://www.mysry.com/2017/11/07/11-Container-With-Most-Water/"/>
    <id>http://www.mysry.com/2017/11/07/11-Container-With-Most-Water/</id>
    <published>2017-11-07T14:27:44.000Z</published>
    <updated>2017-11-07T14:32:38.154Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given n non-negative integers a1, a2, …, an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.</p></blockquote><h2 id="idea"><font color="red"> Idea:</font></h2><p> General idea to find some max is to go through all cases where max value can possibly occur and keep updating the max value.The efficiency of the scan depends on the size of cases you plan to scan.</p><p> To increase efficiency, all we need to do is to find a smart way of scan to cut off the useless cases and meanwhile 100% guarantee the max value can be reached through the rest of cases.</p><p> In this problem, the smart scan way is to set two pointers initialized at both ends of the array. Every time move the smaller value pointer to inner array. Then after the two pointers meet, all possible max cases have been scanned and the max situation is 100% reached somewhere in the scan. Following is a brief prove of this.</p><p> Given a1,a2,a3…..an as input array. Lets assume a10 and a20 are the max area situation. We need to prove that a10 can be reached by left pointer and during the time left pointer stays at a10, a20 can be reached by right pointer. That is to say, the core problem is to prove: when left pointer is at a10 and right pointer is at a21, the next move must be right pointer to a20.  Since we are always moving the pointer with the smaller value, i.e. if a10 &gt; a21, we should move pointer at a21 to a20, as we hope. Why a10 &gt;a21? Because if a21&gt;a10, then area of a10 and a20 must be less than area of a10 and a21. Because the area of a10 and a21 is at least height[a10] * (21-10) while the area of a10 and a20 is at most height[a10] * (20-10). So there is a contradiction of assumption a10 and a20 has the max area. So, a10 must be greater than a21, then next move a21 has to be move to a20. The max cases must be reached.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">  public int maxArea(int[] height) &#123;</div><div class="line">    int left = 0, right = height.length - 1;</div><div class="line">int maxArea = 0;</div><div class="line"></div><div class="line">while (left &lt; right) &#123;</div><div class="line">maxArea = Math.max(maxArea, Math.min(height[left], height[right])</div><div class="line">* (right - left));</div><div class="line">if (height[left] &lt; height[right])</div><div class="line">left++;</div><div class="line">else</div><div class="line">right--;</div><div class="line">&#125;</div><div class="line"></div><div class="line">return maxArea;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given n non-negative integers a1, a2, …, an, where each represents
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>8. String to Integer (atoi)</title>
    <link href="http://www.mysry.com/2017/11/07/8-String-to-Integer-atoi/"/>
    <id>http://www.mysry.com/2017/11/07/8-String-to-Integer-atoi/</id>
    <published>2017-11-07T14:07:40.000Z</published>
    <updated>2017-11-07T14:27:16.500Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Implement atoi to convert a string to an integer. Hint: Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases. Notes: It is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front. Requirements for atoi: The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value. The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function. If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed. If no valid conversion could be performed, a zero value is returned. If the correct value is out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> This question is a litter strange. What we need to do: - Discard the space before the string - Record sign information - A string can contain characters other than 0-9. If a non-numeric character is encountered, only the portion before the character, such as “-00123a66”, is returned as “-123” - Exceeds the int range, returning the boundary value(Integer.MaxValue or Integer.MinValue)</p><h2 id="java-code"><font color="orange">Java Code: </font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int myAtoi(String str) &#123;</div><div class="line">        if (str==null||str.length()==0) return 0;</div><div class="line">str = str.trim();</div><div class="line">char firstChar = str.charAt(0);</div><div class="line">int sign = 1, start = 0,len = str.length();</div><div class="line">long sum = 0;</div><div class="line">if (firstChar == &apos;+&apos;) &#123;</div><div class="line">sign = 1;</div><div class="line">start++;</div><div class="line">&#125;else if (firstChar == &apos;-&apos;) &#123;</div><div class="line">sign = -1;</div><div class="line">start++;</div><div class="line">&#125;</div><div class="line">for (int i=start;i&lt;len;i++) &#123;</div><div class="line">if (!Character.isDigit(str.charAt(i)))</div><div class="line">return (int) sum*sign;</div><div class="line">sum = sum*10+str.charAt(i)-&apos;0&apos;;</div><div class="line">if(sign==1&amp;&amp;sum&gt;Integer.MAX_VALUE)</div><div class="line">return Integer.MAX_VALUE;</div><div class="line">if(sign ==-1&amp;&amp;(-1*sum)&lt;Integer.MIN_VALUE)</div><div class="line">return Integer.MIN_VALUE;</div><div class="line">&#125;</div><div class="line">return (int)sum*sign;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Implement atoi to convert a string to an integer. Hint: Carefully 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>6. ZigZag Conversion</title>
    <link href="http://www.mysry.com/2017/11/06/6-ZigZag-Conversion/"/>
    <id>http://www.mysry.com/2017/11/06/6-ZigZag-Conversion/</id>
    <published>2017-11-06T13:34:15.000Z</published>
    <updated>2017-11-06T13:49:35.750Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>The string “PAYPALISHIRING” is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility) P A H N A P L S I I G Y I R And then read line by line: “PAHNAPLSIIGYIR” Write the code that will take a string and make this conversion given a number of rows: string convert(string text, int nRows); convert(“PAYPALISHIRING”, 3) should return “PAHNAPLSIIGYIR”</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> First, Convert string s to a char array,than create a StringBuffer and init it. Now we need add char with the rules. At last, convert it back to a String and outpt.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public String convert(String s, int numRows) &#123;</div><div class="line">        char[] c= s.toCharArray();</div><div class="line"> int len = s.length();</div><div class="line"> StringBuffer[] sb= new StringBuffer[numRows];</div><div class="line"> for (int i=0;i&lt;sb.length;i++) &#123;</div><div class="line"> sb[i]= new StringBuffer();</div><div class="line"> &#125;</div><div class="line"> int i=0;</div><div class="line"> while(i&lt;len) &#123;</div><div class="line"> for (int idx = 0;idx&lt;numRows&amp;&amp;i&lt;len;idx++) &#123;</div><div class="line"> sb[idx].append(c[i++]);</div><div class="line"> &#125;</div><div class="line"> for (int idx = numRows-2;idx&gt;=1&amp;&amp;i&lt;len;idx--) &#123;</div><div class="line"> sb[idx].append(c[i++]);</div><div class="line"> &#125;</div><div class="line"> &#125;</div><div class="line"> for(int idx=1;idx&lt;sb.length;idx++) &#123;</div><div class="line"> sb[0].append(sb[idx]);</div><div class="line"> &#125;</div><div class="line"> return sb[0].toString();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The string “PAYPALISHIRING” is written in a zigzag pattern on a gi
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
</feed>
