<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mysry</title>
  
  <subtitle>Life is short, play more!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.mysry.com/"/>
  <updated>2017-11-02T12:36:20.250Z</updated>
  <id>http://www.mysry.com/</id>
  
  <author>
    <name>Mysry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>107.Binary Tree Level Order Traversal II</title>
    <link href="http://www.mysry.com/2017/11/02/107-Binary-Tree-Level-Order-Traversal-II/"/>
    <id>http://www.mysry.com/2017/11/02/107-Binary-Tree-Level-Order-Traversal-II/</id>
    <published>2017-11-02T12:25:09.000Z</published>
    <updated>2017-11-02T12:36:20.250Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a binary tree, return the bottom-up level order traversal of its nodes’ values. (ie, from left to right, level by level from leaf to root).</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  I am puzzled of this question even if I have seen the answer. If you have very clear understand of this problem, could you email to me? Thank you very much!</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public List&lt;List&lt;Integer&gt;&gt; levelOrderBottom(TreeNode root) &#123;</div><div class="line">        List&lt;List&lt;Integer&gt;&gt; result=new ArrayList&lt;&gt;();</div><div class="line">       if(root==null) return result;</div><div class="line">       Queue&lt;TreeNode&gt;q= new LinkedList&lt;&gt;();</div><div class="line">       q.add(root);</div><div class="line">       while(q.size()&gt;0) &#123;</div><div class="line">       List&lt;Integer&gt; list=new ArrayList&lt;&gt;();</div><div class="line">       int size= q.size();</div><div class="line">       for(int i=0;i&lt;size;i++) &#123;</div><div class="line">       TreeNode node=q.poll();</div><div class="line">       list.add(node.val);</div><div class="line">       if (node.left!=null) q.add(node.left);</div><div class="line">       if(node.right!=null) q.add(node.right);</div><div class="line">       &#125;</div><div class="line">       result.add(0,list);</div><div class="line">       &#125;</div><div class="line">       return result;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree, return the bottom-up level order traversal of
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>104. Maximum Depth of Binary Tree</title>
    <link href="http://www.mysry.com/2017/11/02/104-Maximum-Depth-of-Binary-Tree/"/>
    <id>http://www.mysry.com/2017/11/02/104-Maximum-Depth-of-Binary-Tree/</id>
    <published>2017-11-02T12:17:13.000Z</published>
    <updated>2017-11-02T12:24:38.024Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problems"><font color="black">Problems:</font></h2><blockquote><p>Given a binary tree, find its maximum depth.</p></blockquote><blockquote><p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use recursive to find the most depth child tree by search if its left or right node is null.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public int maxDepth(TreeNode root) &#123;</div><div class="line">        if(root==null) return 0;</div><div class="line">return 1+Math.max(maxDepth(root.left), maxDepth(root.right));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problems&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problems:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree, find its maximum depth.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>101. Symmetric Tree</title>
    <link href="http://www.mysry.com/2017/11/02/101-Symmetric-Tree/"/>
    <id>http://www.mysry.com/2017/11/02/101-Symmetric-Tree/</id>
    <published>2017-11-02T12:11:46.000Z</published>
    <updated>2017-11-02T12:16:46.890Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use recursive to costantly compare its left node with its right node. We will find that recursive is frequently occurred in solving tree ploblems.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public boolean isSymmetric(TreeNode root) &#123;</div><div class="line">        if (root==null) return true;</div><div class="line">return isMirror(root.left,root.right);</div><div class="line">    &#125;</div><div class="line">    public boolean isMirror(TreeNode p,TreeNode q) &#123;</div><div class="line">if (p==null&amp;&amp;q==null)return true;</div><div class="line">if (p==null||q==null)return false;</div><div class="line">return (p.val==q.val)&amp;&amp; isMirror(p.left,q.right)&amp;&amp; isMirror(p.right,q.left);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree, check whether it is a mirror of itself (ie, s
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>100. Same Tree</title>
    <link href="http://www.mysry.com/2017/11/02/100-Same-Tree/"/>
    <id>http://www.mysry.com/2017/11/02/100-Same-Tree/</id>
    <published>2017-11-02T12:05:29.000Z</published>
    <updated>2017-11-02T12:11:15.469Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given two binary trees, write a function to check if they are equal or not.</p></blockquote><blockquote><p>Two binary trees are considered equal if they are structurally identical and the nodes have the same value.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use recursive to constantly compare their left and right child bode.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Definition for a binary tree node.</div><div class="line"> public class TreeNode &#123;</div><div class="line">     int val;</div><div class="line">     TreeNode left;</div><div class="line">     TreeNode right;</div><div class="line">     TreeNode(int x) &#123; val = x; &#125;</div><div class="line">&#125;</div><div class="line">class Solution &#123;</div><div class="line">    public boolean isSameTree(TreeNode p, TreeNode q) &#123;</div><div class="line">        if (p==null &amp;&amp; q==null) return true;</div><div class="line">    if (p==null || q==null) return false;</div><div class="line">    if (p.val==q.val)   return isSameTree(p.left,q.left) &amp;&amp; isSameTree(p.right,q.right);</div><div class="line">return false;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given two binary trees, write a function to check if they are equa
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>88. Merge Sorted Array</title>
    <link href="http://www.mysry.com/2017/11/01/88-Merge-Sorted-Array/"/>
    <id>http://www.mysry.com/2017/11/01/88-Merge-Sorted-Array/</id>
    <published>2017-11-01T04:31:04.000Z</published>
    <updated>2017-11-01T04:36:32.854Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.</p></blockquote><blockquote><p>Note: You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2. The number of elements initialized in nums1 and nums2 are m and n respectively.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use ‘?:’ to judge what will be the next element of nums1(after merged), so all we should to do is to find the boundary conditions.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public void merge(int[] nums1, int m, int[] nums2, int n) &#123;</div><div class="line">     while(n&gt;0)&#123; </div><div class="line">         nums1[m+n-1] = (m==0||nums2[n-1] &gt; nums1[m-1]) ? nums2[--n] : nums1[--m];</div><div class="line">     &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given two sorted integer arrays nums1 and nums2, merge nums2 into 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>83. Remove Duplicates from Sorted List</title>
    <link href="http://www.mysry.com/2017/11/01/83-Remove-Duplicates-from-Sorted-List/"/>
    <id>http://www.mysry.com/2017/11/01/83-Remove-Duplicates-from-Sorted-List/</id>
    <published>2017-11-01T04:24:39.000Z</published>
    <updated>2017-11-01T04:30:09.684Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a sorted linked list, delete all duplicates such that each element appear only once.</p></blockquote><blockquote><p>For example, Given 1-&gt;1-&gt;2, return 1-&gt;2. Given 1-&gt;1-&gt;2-&gt;3-&gt;3, return 1-&gt;2-&gt;3</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  This is a similar problem with the last one! It don’t need to wholely remove the dups and the original elements. We use a Recursive function to remove the dups.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><pre><code>/** * Definition for singly-linked list. * public class ListNode { *     int val; *     ListNode next; *     ListNode(int x) { val = x; } * } */class Solution {    public ListNode deleteDuplicates(ListNode head) {        if(head == null || head.next == null)return head;        head.next = deleteDuplicates(head.next);        return (head.val == head.next.val) ? head.next : head;    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a sorted linked list, delete all duplicates such that each e
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>82. Remove Duplicates from Sorted List II</title>
    <link href="http://www.mysry.com/2017/11/01/82-Remove-Duplicates-from-Sorted-List-II/"/>
    <id>http://www.mysry.com/2017/11/01/82-Remove-Duplicates-from-Sorted-List-II/</id>
    <published>2017-11-01T04:18:03.000Z</published>
    <updated>2017-11-01T04:24:05.305Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.</p></blockquote><blockquote><p>For example, Given 1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5, return 1-&gt;2-&gt;5. Given 1-&gt;1-&gt;1-&gt;2-&gt;3, return 2-&gt;3.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  We use two pointer, slow is to track the node before the dup nodes, fast is to fine the last nodes of dups. A while loop to find the last nodes of the dups, and than detect the dups and remove them.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * public class ListNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     ListNode next;</div><div class="line"> *     ListNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public ListNode deleteDuplicates(ListNode head) &#123;</div><div class="line">        ListNode a=new ListNode(0),fast=head,slow=a;</div><div class="line">    slow.next=fast;</div><div class="line">while(fast!=null) &#123;</div><div class="line">while(fast.next!=null&amp;&amp;fast.val==fast.next.val) &#123;</div><div class="line">fast=fast.next;</div><div class="line">&#125;</div><div class="line">if (slow.next!=fast) &#123;</div><div class="line">slow.next=fast.next;</div><div class="line">fast=slow.next;</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">slow=slow.next;</div><div class="line">fast=fast.next;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return a.next;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a sorted linked list, delete all nodes that have duplicate n
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>70. Climbing Stairs</title>
    <link href="http://www.mysry.com/2017/11/01/70-Climbing-Stairs/"/>
    <id>http://www.mysry.com/2017/11/01/70-Climbing-Stairs/</id>
    <published>2017-11-01T04:13:55.000Z</published>
    <updated>2017-11-01T04:17:31.827Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>You are climbing a stair case. It takes n steps to reach to the top.</p></blockquote><blockquote><p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?</p></blockquote><blockquote><p>Note: Given n will be a positive integer.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  This is basic use of fibonacci.The key intuition to solve the problem is that given a number of stairs n, if we know the number ways to get to the points [n-1] and [n-2] respectively, denoted as n1 and n2 , then the total ways to get to the point [n] is n1 + n2. Because from the [n-1] point, we can take one single step to reach [n]. And from the [n-2] point, we could take two steps to get there. There is NO overlapping between these two solution sets, because we differ in the final step.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int climbStairs(int n) &#123;</div><div class="line">        if (n==0) return 0;</div><div class="line">if (n==1) return 1;</div><div class="line">if (n==2) return 2;</div><div class="line">int oneStepBefore=2;</div><div class="line">int twoStepBefore=1;</div><div class="line">int allways=0;</div><div class="line">for (int i=2;i&lt;n;i++) &#123;</div><div class="line">allways=oneStepBefore+twoStepBefore;</div><div class="line">twoStepBefore=oneStepBefore;</div><div class="line">oneStepBefore=allways;</div><div class="line">&#125;</div><div class="line">return allways;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;You are climbing a stair case. It takes n steps to reach to the to
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>67. Add Binary</title>
    <link href="http://www.mysry.com/2017/11/01/67-Add-Binary/"/>
    <id>http://www.mysry.com/2017/11/01/67-Add-Binary/</id>
    <published>2017-11-01T03:42:52.000Z</published>
    <updated>2017-11-01T04:12:11.529Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problems"><font color="black">Problems:</font></h2><blockquote><p>Given two binary strings, return their sum (also a binary string).</p></blockquote><blockquote><p>For example, a = “11” b = “1” Return “100”.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  So we need to fill the shorter array, and than the sum of the number of positions corresponding to the array and determine whether there is a carry.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public String addBinary(String a, String b) &#123;</div><div class="line">        StringBuilder sb = new StringBuilder();</div><div class="line">        int i = a.length() - 1, j = b.length() -1, carry = 0;</div><div class="line">        while (i &gt;= 0 || j &gt;= 0) &#123;</div><div class="line">            int sum = carry;</div><div class="line">            if (j &gt;= 0) sum += b.charAt(j--) - &apos;0&apos;;</div><div class="line">            if (i &gt;= 0) sum += a.charAt(i--) - &apos;0&apos;;</div><div class="line">            sb.append(sum % 2);</div><div class="line">            carry = sum / 2;</div><div class="line">        &#125;</div><div class="line">        if (carry != 0) sb.append(carry);</div><div class="line">        return sb.reverse().toString();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problems&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problems:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given two binary strings, return their sum (also a binary string
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>69. Sqrt(x)</title>
    <link href="http://www.mysry.com/2017/10/31/69-Sqrt-x/"/>
    <id>http://www.mysry.com/2017/10/31/69-Sqrt-x/</id>
    <published>2017-10-31T12:15:17.000Z</published>
    <updated>2017-10-31T12:36:41.330Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problems"><font color="black">Problems:</font></h2><blockquote><p>Implement int sqrt(int x).</p></blockquote><blockquote><p>Compute and return the square root of x.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Approximately the square root by least squares method.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">public int returnSqrtRootx(int x) &#123;</div><div class="line">long r=x;</div><div class="line">while(r*r&gt;x) &#123;</div><div class="line">r=(r+x/r)/2;</div><div class="line">&#125;</div><div class="line">return (int) r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problems&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problems:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Implement int sqrt(int x).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Com
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>66. Plus One</title>
    <link href="http://www.mysry.com/2017/10/31/66-Plus-One/"/>
    <id>http://www.mysry.com/2017/10/31/66-Plus-One/</id>
    <published>2017-10-31T12:06:08.000Z</published>
    <updated>2017-10-31T12:14:50.135Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problems"><font color="black">Problems:</font></h2><blockquote><p>Given a non-negative integer represented as a non-empty array of digits, plus one to the integer.</p></blockquote><blockquote><p>You may assume the integer do not contain any leading zero, except the number 0 itself.</p></blockquote><blockquote><p>The digits are stored such that the most significant digit is at the head of the list.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  It’s important for us to find the 9 element in this array set it to be 0,so if we find the first element of array is nine, we need append the array, so we define a new array and set the first element 0,return this and return the the initial processed array.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int[] plusOne(int[] digits) &#123;</div><div class="line">        int n = digits.length;</div><div class="line">    for(int i=n-1; i&gt;=0; i--) &#123;</div><div class="line">        if(digits[i] &lt; 9) &#123;</div><div class="line">            digits[i]++;</div><div class="line">            return digits;</div><div class="line">        &#125;  </div><div class="line">        digits[i] = 0;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    int[] newNumber = new int [n+1];</div><div class="line">    newNumber[0] = 1;</div><div class="line">    </div><div class="line">    return newNumber;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problems&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problems:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a non-negative integer represented as a non-empty array of
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>58. Length of Last Word</title>
    <link href="http://www.mysry.com/2017/10/31/58-Length-of-Last-Word/"/>
    <id>http://www.mysry.com/2017/10/31/58-Length-of-Last-Word/</id>
    <published>2017-10-31T11:56:56.000Z</published>
    <updated>2017-10-31T12:05:35.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problems"><font color="black">Problems:</font></h2><blockquote><p>Given a string s consists of upper/lower-case alphabets and empty space characters ‘’, return the length of last word in the string.</p></blockquote><blockquote><p>If the last word does not exist, return 0.</p></blockquote><blockquote><p>Note: A word is defined as a character sequence consists of non-space characters only.</p></blockquote><blockquote><p>For example, Given s = “Hello World”, return 5.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Easy problem,isn’t it? If you have know that function trim() is to delete the ‘’ of the beginning and end of the string and that the function lastIndexOf() the to return the index of the last occurrence of character such as ‘’.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int lengthOfLastWord(String s) &#123;</div><div class="line">        String t=s.trim();</div><div class="line">return t.length()-t.lastIndexOf(&apos; &apos;)-1;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problems&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problems:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a string s consists of upper/lower-case alphabets and empt
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>53. Maximum Subarray</title>
    <link href="http://www.mysry.com/2017/10/31/53-Maximum-Subarray/"/>
    <id>http://www.mysry.com/2017/10/31/53-Maximum-Subarray/</id>
    <published>2017-10-31T11:41:54.000Z</published>
    <updated>2017-10-31T11:56:18.084Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problems"><font color="black">Problems:</font></h2><blockquote><p>Find the contiguous subarray within an array (containing at least one number) which has the largest sum.</p></blockquote><blockquote><p>For example, given the array [-2,1,-3,4,-1,2,1,-5,4], the contiguous subarray [4,-1,2,1] has the largest sum = 6.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  We create two int array maxEnding and maxSofar, maxEnding is constantly update and other is to put the biggest sum subarray. MaEnding is the bigger one in maxEnding plus nums[i] and the maxSofar,and then compare maxEnding with maxSofar put maxSofar as the bigger one until we have traverse all the elements.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><pre><code>public class Solution {     public int maximumSubarray(int []nums) {         int maxSofar=nums[0];         int maxEnding=nums[0];         for (int i=1;i&lt;nums.length;i++) {             maxEnding = Math.max(maxEnding+nums[i],maxSofar);             maxSofar=Math.max(maxEnding,maxSofar);         }         return maxEnding;     }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problems&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problems:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Find the contiguous subarray within an array (containing at leas
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>38. Count and Say</title>
    <link href="http://www.mysry.com/2017/10/29/38-Count-and-Say/"/>
    <id>http://www.mysry.com/2017/10/29/38-Count-and-Say/</id>
    <published>2017-10-29T05:00:30.000Z</published>
    <updated>2017-10-29T05:11:43.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>The count-and-say sequence is the sequence of integers with the first five terms as following:</p></blockquote><blockquote><ol style="list-style-type: decimal"><li>1</li><li>11</li><li>21</li><li>1211</li><li>111221</li></ol></blockquote><blockquote><p>1 is read off as “one 1” or 11. 11 is read off as “two 1s” or 21. 21 is read off as “one 2, then one 1” or 1211.</p></blockquote><blockquote><p>Given an integer n, generate the nth term of the count-and-say sequence.</p></blockquote><blockquote><p>Note: Each term of the sequence of integers will be represented as a string.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  This problem is a litter longer than before, so it take a few seconds to understand the problem. Don’t be afraid of the complicated desription. I construct a StringBuilder to store the characters to be added and its number, and then add it by law.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public String countAndSay(int n) &#123;</div><div class="line">        StringBuilder builder=new StringBuilder(&quot;1&quot;);</div><div class="line">  StringBuilder prev;</div><div class="line">  int count;</div><div class="line">  char say;</div><div class="line">  for (int i=1;i&lt;n;i++) &#123;</div><div class="line">  prev=builder;</div><div class="line">  builder=new StringBuilder();</div><div class="line">  count=1;</div><div class="line">  say=prev.charAt(0);</div><div class="line">  for (int j=1,len=prev.length();j&lt;len;j++) &#123;</div><div class="line">  if (prev.charAt(j)!=say) &#123;</div><div class="line">  builder.append(count).append(say);</div><div class="line">  count=1;</div><div class="line">  say=prev.charAt(j);</div><div class="line">  &#125;</div><div class="line">  else count++;</div><div class="line">  &#125;</div><div class="line">builder.append(count).append(say);</div><div class="line">  &#125;</div><div class="line">  return builder.toString();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The count-and-say sequence is the sequence of integers with the fi
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>35. Search Insert Position</title>
    <link href="http://www.mysry.com/2017/10/29/35-Search-Insert-Position/"/>
    <id>http://www.mysry.com/2017/10/29/35-Search-Insert-Position/</id>
    <published>2017-10-29T04:52:55.000Z</published>
    <updated>2017-10-29T04:59:53.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p></blockquote><blockquote><p>You may assume no duplicates in the array.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  This problem is very easy if we use binary search, just constantly compare the target number with the mid of the remain array!</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int searchInsert(int[] nums, int target) &#123;</div><div class="line">        int head =0;</div><div class="line">int tail=nums.length-1;</div><div class="line">while (head &lt;=tail) &#123;</div><div class="line">int mid =(head+tail)/2;</div><div class="line">if (nums[mid]==target)</div><div class="line">return mid;</div><div class="line">else if (nums[mid]&gt;target) tail=mid-1;</div><div class="line">else head=mid+1;</div><div class="line">&#125;</div><div class="line">return head;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a sorted array and a target value, return the index if the t
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>28. Implement strStr()</title>
    <link href="http://www.mysry.com/2017/10/29/28-Implement-strStr/"/>
    <id>http://www.mysry.com/2017/10/29/28-Implement-strStr/</id>
    <published>2017-10-29T04:44:37.000Z</published>
    <updated>2017-10-29T04:52:17.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Returns the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  This question requires the return of the target string in the haystack string the first occurrence of the index of the location, just compare the target string and the substring of haystack with the length of target string!</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int strStr(String haystack, String needle) &#123;</div><div class="line">        if (needle.length()==0) return 0;</div><div class="line">    if (needle.length()==0&amp;&amp;haystack.length()==0||(needle.length()&gt;haystack.length()))</div><div class="line">    return -1;</div><div class="line">    for (int i=0;i&lt;(haystack.length());i++)&#123;</div><div class="line">    int x=i;</div><div class="line">    int y=needle.length();</div><div class="line">    if (y&lt;=haystack.length()) &#123;</div><div class="line">    y=y+i;</div><div class="line">    if (y&gt;haystack.length())</div><div class="line">    return -1;</div><div class="line">    String c=haystack.substring(x,y);</div><div class="line">    if (needle.equals(c)) &#123;</div><div class="line">    return i;</div><div class="line">    &#125;</div><div class="line">    &#125;</div><div class="line">    &#125;</div><div class="line">    return -1;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Returns the index of the first occurrence of needle in haystack, o
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>27. Remove Element</title>
    <link href="http://www.mysry.com/2017/10/28/27-Remove-Element/"/>
    <id>http://www.mysry.com/2017/10/28/27-Remove-Element/</id>
    <published>2017-10-28T03:35:56.000Z</published>
    <updated>2017-10-29T05:19:32.802Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an array and a value, remove all instances of that value in place and return the new length.</p></blockquote><blockquote><p>Do not allocate extra space for another array, you must do this in place with constant memory.</p></blockquote><blockquote><p>The order of elements can be changed. It doesn’t matter what you leave beyond the new length.</p></blockquote><blockquote><p>Example: Given input array nums = [3,2,2,3], val = 3</p></blockquote><blockquote><p>Your function should return length = 2, with the first two elements of nums being 2.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  This topic is handled in a manner similar to the previous article said, except that the compared element becomes a constant.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line"></div><div class="line">public static void main(String[] args) &#123;</div><div class="line">// TODO Auto-generated method stub</div><div class="line">         int [] nums = &#123;3,2,2,3&#125;;</div><div class="line">         int val=3;</div><div class="line">         int a =removeElement(nums,val);</div><div class="line">         System.out.println(a);</div><div class="line">         for (int i=0;i&lt;nums.length;i++) &#123;</div><div class="line">         System.out.println(nums[i]);</div><div class="line">         &#125;</div><div class="line">&#125;</div><div class="line">public static int removeElement(int[]nums,int val) &#123;</div><div class="line">if (nums.length==0) return 0;</div><div class="line">int j=0;</div><div class="line">for (int i=0;i&lt;nums.length;i++) &#123;</div><div class="line">if (nums[i]!=val) &#123;</div><div class="line">   nums[j]=nums[i];</div><div class="line">   j++;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return j;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an array and a value, remove all instances of that value in 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>26. Remove Duplicates from Sorted Array</title>
    <link href="http://www.mysry.com/2017/10/28/26-Remove-Duplicates-from-Sorted-Array/"/>
    <id>http://www.mysry.com/2017/10/28/26-Remove-Duplicates-from-Sorted-Array/</id>
    <published>2017-10-28T03:26:26.000Z</published>
    <updated>2017-10-28T03:35:13.866Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.</p></blockquote><blockquote><p>Do not allocate extra space for another array, you must do this in place with constant memory.</p></blockquote><blockquote><p>For example, Given input array nums = [1,1,2],</p></blockquote><blockquote><p>Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn’t matter what you leave beyond the new length.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Because it is a sorted array, so you can directly compare the neighboring elements, if they are equal, then they were repeated the element, the element can be assigned to the subsequent elements.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line"></div><div class="line">public static void main(String[] args) &#123;</div><div class="line">// TODO Auto-generated method stub</div><div class="line">      int []nums= &#123;1,2,2,3,3,3,4&#125;;</div><div class="line">      int a=removeDuplicates(nums);</div><div class="line">      System.out.println(a);</div><div class="line">      for (int i=0;i&lt;nums.length;i++) &#123;</div><div class="line">      System.out.println(nums[i]);</div><div class="line">      &#125;</div><div class="line">&#125;</div><div class="line">public static int removeDuplicates(int []nums) &#123;</div><div class="line">if (nums.length==0)return 0;</div><div class="line">int j=0;</div><div class="line">for (int i=0;i&lt;nums.length;i++) &#123;</div><div class="line">if (nums[i]!=nums[j])nums[++j]=nums[i];</div><div class="line"></div><div class="line">&#125;</div><div class="line">return ++j;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a sorted array, remove the duplicates in place such that eac
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>21. Merge Two Sorted Lists</title>
    <link href="http://www.mysry.com/2017/10/28/21-Merge-Two-Sorted-Lists/"/>
    <id>http://www.mysry.com/2017/10/28/21-Merge-Two-Sorted-Lists/</id>
    <published>2017-10-28T03:18:54.000Z</published>
    <updated>2017-10-28T03:25:40.319Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  This is a question of recursive call merge function, find one of the sorted single list of the head, and then link the second list.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">public class ListNode &#123;</div><div class="line">int val;</div><div class="line">     ListNode next;</div><div class="line">     ListNode(int x) &#123; val = x; &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">public class Solution &#123;</div><div class="line"></div><div class="line">public static void main(String[] args) &#123;</div><div class="line">// TODO Auto-generated method stub</div><div class="line"></div><div class="line">&#125;</div><div class="line">public ListNode mergeTwoList(ListNode l1,ListNode l2) &#123;</div><div class="line">if (l1==null) return l2;</div><div class="line">if (l2==null) return l1;</div><div class="line">ListNode mergeHead;</div><div class="line">if (l1.val&lt;l2.val) &#123;</div><div class="line">mergeHead=l1;</div><div class="line">mergeHead.next=mergeTwoList(l1.next,l2);</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">mergeHead=l2;</div><div class="line">mergeHead.next=mergeTwoList(l1,l2.next);</div><div class="line">&#125;</div><div class="line">return mergeHead;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Merge two sorted linked lists and return it as a new list. The new
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>14. Longest Common Prefix</title>
    <link href="http://www.mysry.com/2017/10/27/14-Longest-Common-Prefix/"/>
    <id>http://www.mysry.com/2017/10/27/14-Longest-Common-Prefix/</id>
    <published>2017-10-27T02:33:57.000Z</published>
    <updated>2017-10-27T02:41:09.104Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><font color="black">题目</font></h2><blockquote><p>Write a function to find the longest common prefix string amongst an array of strings.</p></blockquote><h2 id="题解"><font color="red">题解</font></h2><p>  本体要求寻找所有字符串的共同的最长子字符串。把字符串数组的第一个字符串初始化为子字符串，将其不断于其他的字符串作对比，若不相同则缩短该字符串，和其他所有的字符串都匹配为止。</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">import java.util.Scanner;</div><div class="line"></div><div class="line">public class Solution &#123;</div><div class="line"></div><div class="line">public static void main(String[] args) &#123;</div><div class="line">// TODO Auto-generated method stub</div><div class="line">       @SuppressWarnings(&quot;resource&quot;)</div><div class="line">Scanner scanner = new Scanner(System.in);</div><div class="line">       System.out.println(&quot;Please input the String array: &quot;);</div><div class="line">       String[] strs= new String[10];</div><div class="line">       for (int i=0;i&lt;10;i++)</div><div class="line">       &#123;</div><div class="line">       strs[i]=(scanner.next());</div><div class="line">       &#125;</div><div class="line">       String str= longestCommonPrefix(strs);</div><div class="line">       System.out.println(str);</div><div class="line">&#125;</div><div class="line">public static String longestCommonPrefix(String[] strs) &#123;</div><div class="line">if (strs==null||strs.length==0) return &quot;&quot;;</div><div class="line">String pre=strs[0];</div><div class="line">for (int i=1;i&lt;strs.length;i++) &#123;</div><div class="line">while (strs[i].indexOf(pre)!=0) &#123;</div><div class="line">pre=pre.substring(0,pre.length()-1);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return pre;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目&quot;&gt;&lt;font color=&quot;black&quot;&gt;题目&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Write a function to find the longest common prefix string amongst an array of
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
</feed>
