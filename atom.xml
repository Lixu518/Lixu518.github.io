<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mysry</title>
  
  <subtitle>Life is short, play more!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.mysry.com/"/>
  <updated>2017-11-03T07:45:19.284Z</updated>
  <id>http://www.mysry.com/</id>
  
  <author>
    <name>Mysry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>119. Pascal&#39;s Triangle II</title>
    <link href="http://www.mysry.com/2017/11/03/119-Pascal-s-Triangle-II/"/>
    <id>http://www.mysry.com/2017/11/03/119-Pascal-s-Triangle-II/</id>
    <published>2017-11-03T07:39:37.000Z</published>
    <updated>2017-11-03T07:45:19.284Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an index k, return the kth row of the Pascal’s triangle.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Use 2 layer for loop to get the k row of the Pascla’s triangle.</p><h2 id="java-code"><font color="black">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public List&lt;Integer&gt; getRow(int rowIndex) &#123;</div><div class="line">        List&lt;Integer&gt; res = new ArrayList&lt;Integer&gt;();</div><div class="line">    for(int i=0;i&lt;rowIndex+1;i++) &#123;</div><div class="line">        res.add(1);</div><div class="line">        for (int j=i-1;j&gt;0;j--)</div><div class="line">            res.set(j,res.get(j-1)+res.get(j));</div><div class="line">    &#125;</div><div class="line">    return res;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an index k, return the kth row of the Pascal’s triangle.&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>118. Pascal&#39;s Triangle</title>
    <link href="http://www.mysry.com/2017/11/03/118-Pascal-s-Triangle/"/>
    <id>http://www.mysry.com/2017/11/03/118-Pascal-s-Triangle/</id>
    <published>2017-11-03T07:17:27.000Z</published>
    <updated>2017-11-03T07:38:56.635Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given numRows, generate the first numRows of Pascal’s triangle.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Pascal’s triangle is a triangular array of the binomial coefficients, every num is equal to the sum of its shoudlers(one or two numbers’ sum).</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public List&lt;List&lt;Integer&gt;&gt; generate(int numRows) &#123;</div><div class="line">       List&lt;List&lt;Integer&gt;&gt; allrows = new ArrayList&lt;List&lt;Integer&gt;&gt;();</div><div class="line">    ArrayList&lt;Integer&gt; row = new ArrayList&lt;Integer&gt;();</div><div class="line">    for (int i=0;i&lt;numRows;i++) &#123;</div><div class="line">        row.add(0,1);</div><div class="line">        for(int j=1;j&lt;row.size()-1;j++)</div><div class="line">            row.set(j, row.get(j)+row.get(j+1));</div><div class="line">        allrows.add(new ArrayList&lt;Integer&gt;(row));</div><div class="line">    &#125;</div><div class="line">    return allrows; </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given numRows, generate the first numRows of Pascal’s triangle.&lt;/p
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>112. Path Sum</title>
    <link href="http://www.mysry.com/2017/11/03/112-Path-Sum/"/>
    <id>http://www.mysry.com/2017/11/03/112-Path-Sum/</id>
    <published>2017-11-03T07:09:38.000Z</published>
    <updated>2017-11-03T07:15:05.304Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use the recursion to traversal its path, every level has two choice, and reduce the sum with node.val(left.val or right.val).</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public boolean hasPathSum(TreeNode root, int sum) &#123;</div><div class="line">        if (root==null)return false;</div><div class="line">    if(root.left==null&amp;&amp;root.right==null&amp;&amp;sum-root.val==0)</div><div class="line">        return true;</div><div class="line">    return hasPathSum(root.left,sum-root.val)||hasPathSum(root.right,sum-root.val);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree and a sum, determine if the tree has a root-to
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>111. Minimum Depth of Binary Tree</title>
    <link href="http://www.mysry.com/2017/11/03/111-Minimum-Depth-of-Binary-Tree/"/>
    <id>http://www.mysry.com/2017/11/03/111-Minimum-Depth-of-Binary-Tree/</id>
    <published>2017-11-03T07:03:09.000Z</published>
    <updated>2017-11-03T07:16:34.921Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a binary tree, find its minimum depth.</p></blockquote><blockquote><p>The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use a recursion, constantly return the shallow children subtree, until the child node equals null.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public int minDepth(TreeNode root) &#123;</div><div class="line">        if(root==null)return 0;</div><div class="line">    int  left =minDepth(root.left);</div><div class="line">    int  right=minDepth(root.right);</div><div class="line">    return (left==0||right==0)?left+right+1:Math.min(left,right)+1;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree, find its minimum depth.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;bl
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>110. Balanced Binary Tree</title>
    <link href="http://www.mysry.com/2017/11/03/110-Balanced-Binary-Tree/"/>
    <id>http://www.mysry.com/2017/11/03/110-Balanced-Binary-Tree/</id>
    <published>2017-11-03T06:55:54.000Z</published>
    <updated>2017-11-03T07:02:40.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a binary tree, determine if it is height-balanced.</p></blockquote><blockquote><p>For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use recursion to traverse the left and right nodes at the same time, if node depth between the left and right is no more than 1, we consider it as a balanced binary tree.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public boolean isBalanced(TreeNode root) &#123;</div><div class="line">    if (root==null) return true;</div><div class="line">    return height(root)!=-1;    </div><div class="line">&#125;</div><div class="line">public int height(TreeNode node) &#123;</div><div class="line">    if(node==null) &#123;</div><div class="line">        return 0;</div><div class="line">    &#125;</div><div class="line">    int lH=height(node.left);</div><div class="line">    if(lH==-1) return -1;</div><div class="line">    int rH =height(node.right);</div><div class="line">    if (rH==-1) return -1;</div><div class="line">    if(lH-rH&lt;-1||lH-rH&gt;1) return -1;</div><div class="line">    return Math.max(lH, rH)+1;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree, determine if it is height-balanced.&lt;/p&gt;
&lt;/blo
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>108. Convert Sorted Array to Binary Search Tree</title>
    <link href="http://www.mysry.com/2017/11/03/108-Convert-Sorted-Array-to-Binary-Search-Tree/"/>
    <id>http://www.mysry.com/2017/11/03/108-Convert-Sorted-Array-to-Binary-Search-Tree/</id>
    <published>2017-11-03T06:47:33.000Z</published>
    <updated>2017-11-03T06:54:58.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an array where elements are sorted in ascending order, convert it to a height balanced BST.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Fisrt, find the middle number of the array, and than put the smaller number to be the left tree node, the larger be the right tree node.Also to use a recursive to solve this problem.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public TreeNode sortedArrayToBST(int[] nums) &#123;</div><div class="line">        if (nums.length==0)return null;</div><div class="line">    TreeNode head=helper(nums,0,nums.length-1);</div><div class="line">    return head;</div><div class="line">    &#125;</div><div class="line">    public TreeNode helper(int []nums,int low,int high) &#123;</div><div class="line">    if(low&gt;high)return null;</div><div class="line">    int mid=(low+high)/2;</div><div class="line">    TreeNode node=new TreeNode(nums[mid]);</div><div class="line">    node.left=helper(nums,low,mid-1);</div><div class="line">    node.right=helper(nums,mid+1,high);</div><div class="line">    return node;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an array where elements are sorted in ascending order, conve
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>107.Binary Tree Level Order Traversal II</title>
    <link href="http://www.mysry.com/2017/11/02/107-Binary-Tree-Level-Order-Traversal-II/"/>
    <id>http://www.mysry.com/2017/11/02/107-Binary-Tree-Level-Order-Traversal-II/</id>
    <published>2017-11-02T12:25:09.000Z</published>
    <updated>2017-11-02T12:36:20.250Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a binary tree, return the bottom-up level order traversal of its nodes’ values. (ie, from left to right, level by level from leaf to root).</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  I am puzzled of this question even if I have seen the answer. If you have very clear understand of this problem, could you email to me? Thank you very much!</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public List&lt;List&lt;Integer&gt;&gt; levelOrderBottom(TreeNode root) &#123;</div><div class="line">        List&lt;List&lt;Integer&gt;&gt; result=new ArrayList&lt;&gt;();</div><div class="line">       if(root==null) return result;</div><div class="line">       Queue&lt;TreeNode&gt;q= new LinkedList&lt;&gt;();</div><div class="line">       q.add(root);</div><div class="line">       while(q.size()&gt;0) &#123;</div><div class="line">       List&lt;Integer&gt; list=new ArrayList&lt;&gt;();</div><div class="line">       int size= q.size();</div><div class="line">       for(int i=0;i&lt;size;i++) &#123;</div><div class="line">       TreeNode node=q.poll();</div><div class="line">       list.add(node.val);</div><div class="line">       if (node.left!=null) q.add(node.left);</div><div class="line">       if(node.right!=null) q.add(node.right);</div><div class="line">       &#125;</div><div class="line">       result.add(0,list);</div><div class="line">       &#125;</div><div class="line">       return result;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree, return the bottom-up level order traversal of
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>104. Maximum Depth of Binary Tree</title>
    <link href="http://www.mysry.com/2017/11/02/104-Maximum-Depth-of-Binary-Tree/"/>
    <id>http://www.mysry.com/2017/11/02/104-Maximum-Depth-of-Binary-Tree/</id>
    <published>2017-11-02T12:17:13.000Z</published>
    <updated>2017-11-02T12:24:38.024Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problems"><font color="black">Problems:</font></h2><blockquote><p>Given a binary tree, find its maximum depth.</p></blockquote><blockquote><p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use recursive to find the most depth child tree by search if its left or right node is null.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public int maxDepth(TreeNode root) &#123;</div><div class="line">        if(root==null) return 0;</div><div class="line">return 1+Math.max(maxDepth(root.left), maxDepth(root.right));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problems&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problems:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree, find its maximum depth.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>101. Symmetric Tree</title>
    <link href="http://www.mysry.com/2017/11/02/101-Symmetric-Tree/"/>
    <id>http://www.mysry.com/2017/11/02/101-Symmetric-Tree/</id>
    <published>2017-11-02T12:11:46.000Z</published>
    <updated>2017-11-02T12:16:46.890Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use recursive to costantly compare its left node with its right node. We will find that recursive is frequently occurred in solving tree ploblems.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public boolean isSymmetric(TreeNode root) &#123;</div><div class="line">        if (root==null) return true;</div><div class="line">return isMirror(root.left,root.right);</div><div class="line">    &#125;</div><div class="line">    public boolean isMirror(TreeNode p,TreeNode q) &#123;</div><div class="line">if (p==null&amp;&amp;q==null)return true;</div><div class="line">if (p==null||q==null)return false;</div><div class="line">return (p.val==q.val)&amp;&amp; isMirror(p.left,q.right)&amp;&amp; isMirror(p.right,q.left);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree, check whether it is a mirror of itself (ie, s
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>100. Same Tree</title>
    <link href="http://www.mysry.com/2017/11/02/100-Same-Tree/"/>
    <id>http://www.mysry.com/2017/11/02/100-Same-Tree/</id>
    <published>2017-11-02T12:05:29.000Z</published>
    <updated>2017-11-02T12:11:15.469Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given two binary trees, write a function to check if they are equal or not.</p></blockquote><blockquote><p>Two binary trees are considered equal if they are structurally identical and the nodes have the same value.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use recursive to constantly compare their left and right child bode.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Definition for a binary tree node.</div><div class="line"> public class TreeNode &#123;</div><div class="line">     int val;</div><div class="line">     TreeNode left;</div><div class="line">     TreeNode right;</div><div class="line">     TreeNode(int x) &#123; val = x; &#125;</div><div class="line">&#125;</div><div class="line">class Solution &#123;</div><div class="line">    public boolean isSameTree(TreeNode p, TreeNode q) &#123;</div><div class="line">        if (p==null &amp;&amp; q==null) return true;</div><div class="line">    if (p==null || q==null) return false;</div><div class="line">    if (p.val==q.val)   return isSameTree(p.left,q.left) &amp;&amp; isSameTree(p.right,q.right);</div><div class="line">return false;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given two binary trees, write a function to check if they are equa
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>88. Merge Sorted Array</title>
    <link href="http://www.mysry.com/2017/11/01/88-Merge-Sorted-Array/"/>
    <id>http://www.mysry.com/2017/11/01/88-Merge-Sorted-Array/</id>
    <published>2017-11-01T04:31:04.000Z</published>
    <updated>2017-11-01T04:36:32.854Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.</p></blockquote><blockquote><p>Note: You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2. The number of elements initialized in nums1 and nums2 are m and n respectively.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use ‘?:’ to judge what will be the next element of nums1(after merged), so all we should to do is to find the boundary conditions.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public void merge(int[] nums1, int m, int[] nums2, int n) &#123;</div><div class="line">     while(n&gt;0)&#123; </div><div class="line">         nums1[m+n-1] = (m==0||nums2[n-1] &gt; nums1[m-1]) ? nums2[--n] : nums1[--m];</div><div class="line">     &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given two sorted integer arrays nums1 and nums2, merge nums2 into 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>83. Remove Duplicates from Sorted List</title>
    <link href="http://www.mysry.com/2017/11/01/83-Remove-Duplicates-from-Sorted-List/"/>
    <id>http://www.mysry.com/2017/11/01/83-Remove-Duplicates-from-Sorted-List/</id>
    <published>2017-11-01T04:24:39.000Z</published>
    <updated>2017-11-01T04:30:09.684Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a sorted linked list, delete all duplicates such that each element appear only once.</p></blockquote><blockquote><p>For example, Given 1-&gt;1-&gt;2, return 1-&gt;2. Given 1-&gt;1-&gt;2-&gt;3-&gt;3, return 1-&gt;2-&gt;3</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  This is a similar problem with the last one! It don’t need to wholely remove the dups and the original elements. We use a Recursive function to remove the dups.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><pre><code>/** * Definition for singly-linked list. * public class ListNode { *     int val; *     ListNode next; *     ListNode(int x) { val = x; } * } */class Solution {    public ListNode deleteDuplicates(ListNode head) {        if(head == null || head.next == null)return head;        head.next = deleteDuplicates(head.next);        return (head.val == head.next.val) ? head.next : head;    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a sorted linked list, delete all duplicates such that each e
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>82. Remove Duplicates from Sorted List II</title>
    <link href="http://www.mysry.com/2017/11/01/82-Remove-Duplicates-from-Sorted-List-II/"/>
    <id>http://www.mysry.com/2017/11/01/82-Remove-Duplicates-from-Sorted-List-II/</id>
    <published>2017-11-01T04:18:03.000Z</published>
    <updated>2017-11-01T04:24:05.305Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.</p></blockquote><blockquote><p>For example, Given 1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5, return 1-&gt;2-&gt;5. Given 1-&gt;1-&gt;1-&gt;2-&gt;3, return 2-&gt;3.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  We use two pointer, slow is to track the node before the dup nodes, fast is to fine the last nodes of dups. A while loop to find the last nodes of the dups, and than detect the dups and remove them.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * public class ListNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     ListNode next;</div><div class="line"> *     ListNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public ListNode deleteDuplicates(ListNode head) &#123;</div><div class="line">        ListNode a=new ListNode(0),fast=head,slow=a;</div><div class="line">    slow.next=fast;</div><div class="line">while(fast!=null) &#123;</div><div class="line">while(fast.next!=null&amp;&amp;fast.val==fast.next.val) &#123;</div><div class="line">fast=fast.next;</div><div class="line">&#125;</div><div class="line">if (slow.next!=fast) &#123;</div><div class="line">slow.next=fast.next;</div><div class="line">fast=slow.next;</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">slow=slow.next;</div><div class="line">fast=fast.next;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return a.next;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a sorted linked list, delete all nodes that have duplicate n
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>70. Climbing Stairs</title>
    <link href="http://www.mysry.com/2017/11/01/70-Climbing-Stairs/"/>
    <id>http://www.mysry.com/2017/11/01/70-Climbing-Stairs/</id>
    <published>2017-11-01T04:13:55.000Z</published>
    <updated>2017-11-01T04:17:31.827Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>You are climbing a stair case. It takes n steps to reach to the top.</p></blockquote><blockquote><p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?</p></blockquote><blockquote><p>Note: Given n will be a positive integer.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  This is basic use of fibonacci.The key intuition to solve the problem is that given a number of stairs n, if we know the number ways to get to the points [n-1] and [n-2] respectively, denoted as n1 and n2 , then the total ways to get to the point [n] is n1 + n2. Because from the [n-1] point, we can take one single step to reach [n]. And from the [n-2] point, we could take two steps to get there. There is NO overlapping between these two solution sets, because we differ in the final step.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int climbStairs(int n) &#123;</div><div class="line">        if (n==0) return 0;</div><div class="line">if (n==1) return 1;</div><div class="line">if (n==2) return 2;</div><div class="line">int oneStepBefore=2;</div><div class="line">int twoStepBefore=1;</div><div class="line">int allways=0;</div><div class="line">for (int i=2;i&lt;n;i++) &#123;</div><div class="line">allways=oneStepBefore+twoStepBefore;</div><div class="line">twoStepBefore=oneStepBefore;</div><div class="line">oneStepBefore=allways;</div><div class="line">&#125;</div><div class="line">return allways;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;You are climbing a stair case. It takes n steps to reach to the to
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>67. Add Binary</title>
    <link href="http://www.mysry.com/2017/11/01/67-Add-Binary/"/>
    <id>http://www.mysry.com/2017/11/01/67-Add-Binary/</id>
    <published>2017-11-01T03:42:52.000Z</published>
    <updated>2017-11-01T04:12:11.529Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problems"><font color="black">Problems:</font></h2><blockquote><p>Given two binary strings, return their sum (also a binary string).</p></blockquote><blockquote><p>For example, a = “11” b = “1” Return “100”.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  So we need to fill the shorter array, and than the sum of the number of positions corresponding to the array and determine whether there is a carry.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public String addBinary(String a, String b) &#123;</div><div class="line">        StringBuilder sb = new StringBuilder();</div><div class="line">        int i = a.length() - 1, j = b.length() -1, carry = 0;</div><div class="line">        while (i &gt;= 0 || j &gt;= 0) &#123;</div><div class="line">            int sum = carry;</div><div class="line">            if (j &gt;= 0) sum += b.charAt(j--) - &apos;0&apos;;</div><div class="line">            if (i &gt;= 0) sum += a.charAt(i--) - &apos;0&apos;;</div><div class="line">            sb.append(sum % 2);</div><div class="line">            carry = sum / 2;</div><div class="line">        &#125;</div><div class="line">        if (carry != 0) sb.append(carry);</div><div class="line">        return sb.reverse().toString();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problems&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problems:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given two binary strings, return their sum (also a binary string
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>69. Sqrt(x)</title>
    <link href="http://www.mysry.com/2017/10/31/69-Sqrt-x/"/>
    <id>http://www.mysry.com/2017/10/31/69-Sqrt-x/</id>
    <published>2017-10-31T12:15:17.000Z</published>
    <updated>2017-10-31T12:36:41.330Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problems"><font color="black">Problems:</font></h2><blockquote><p>Implement int sqrt(int x).</p></blockquote><blockquote><p>Compute and return the square root of x.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Approximately the square root by least squares method.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">public int returnSqrtRootx(int x) &#123;</div><div class="line">long r=x;</div><div class="line">while(r*r&gt;x) &#123;</div><div class="line">r=(r+x/r)/2;</div><div class="line">&#125;</div><div class="line">return (int) r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problems&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problems:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Implement int sqrt(int x).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Com
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>66. Plus One</title>
    <link href="http://www.mysry.com/2017/10/31/66-Plus-One/"/>
    <id>http://www.mysry.com/2017/10/31/66-Plus-One/</id>
    <published>2017-10-31T12:06:08.000Z</published>
    <updated>2017-10-31T12:14:50.135Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problems"><font color="black">Problems:</font></h2><blockquote><p>Given a non-negative integer represented as a non-empty array of digits, plus one to the integer.</p></blockquote><blockquote><p>You may assume the integer do not contain any leading zero, except the number 0 itself.</p></blockquote><blockquote><p>The digits are stored such that the most significant digit is at the head of the list.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  It’s important for us to find the 9 element in this array set it to be 0,so if we find the first element of array is nine, we need append the array, so we define a new array and set the first element 0,return this and return the the initial processed array.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int[] plusOne(int[] digits) &#123;</div><div class="line">        int n = digits.length;</div><div class="line">    for(int i=n-1; i&gt;=0; i--) &#123;</div><div class="line">        if(digits[i] &lt; 9) &#123;</div><div class="line">            digits[i]++;</div><div class="line">            return digits;</div><div class="line">        &#125;  </div><div class="line">        digits[i] = 0;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    int[] newNumber = new int [n+1];</div><div class="line">    newNumber[0] = 1;</div><div class="line">    </div><div class="line">    return newNumber;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problems&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problems:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a non-negative integer represented as a non-empty array of
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>58. Length of Last Word</title>
    <link href="http://www.mysry.com/2017/10/31/58-Length-of-Last-Word/"/>
    <id>http://www.mysry.com/2017/10/31/58-Length-of-Last-Word/</id>
    <published>2017-10-31T11:56:56.000Z</published>
    <updated>2017-10-31T12:05:35.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problems"><font color="black">Problems:</font></h2><blockquote><p>Given a string s consists of upper/lower-case alphabets and empty space characters ‘’, return the length of last word in the string.</p></blockquote><blockquote><p>If the last word does not exist, return 0.</p></blockquote><blockquote><p>Note: A word is defined as a character sequence consists of non-space characters only.</p></blockquote><blockquote><p>For example, Given s = “Hello World”, return 5.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Easy problem,isn’t it? If you have know that function trim() is to delete the ‘’ of the beginning and end of the string and that the function lastIndexOf() the to return the index of the last occurrence of character such as ‘’.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int lengthOfLastWord(String s) &#123;</div><div class="line">        String t=s.trim();</div><div class="line">return t.length()-t.lastIndexOf(&apos; &apos;)-1;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problems&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problems:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a string s consists of upper/lower-case alphabets and empt
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>53. Maximum Subarray</title>
    <link href="http://www.mysry.com/2017/10/31/53-Maximum-Subarray/"/>
    <id>http://www.mysry.com/2017/10/31/53-Maximum-Subarray/</id>
    <published>2017-10-31T11:41:54.000Z</published>
    <updated>2017-10-31T11:56:18.084Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problems"><font color="black">Problems:</font></h2><blockquote><p>Find the contiguous subarray within an array (containing at least one number) which has the largest sum.</p></blockquote><blockquote><p>For example, given the array [-2,1,-3,4,-1,2,1,-5,4], the contiguous subarray [4,-1,2,1] has the largest sum = 6.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  We create two int array maxEnding and maxSofar, maxEnding is constantly update and other is to put the biggest sum subarray. MaEnding is the bigger one in maxEnding plus nums[i] and the maxSofar,and then compare maxEnding with maxSofar put maxSofar as the bigger one until we have traverse all the elements.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><pre><code>public class Solution {     public int maximumSubarray(int []nums) {         int maxSofar=nums[0];         int maxEnding=nums[0];         for (int i=1;i&lt;nums.length;i++) {             maxEnding = Math.max(maxEnding+nums[i],maxSofar);             maxSofar=Math.max(maxEnding,maxSofar);         }         return maxEnding;     }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problems&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problems:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Find the contiguous subarray within an array (containing at leas
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>38. Count and Say</title>
    <link href="http://www.mysry.com/2017/10/29/38-Count-and-Say/"/>
    <id>http://www.mysry.com/2017/10/29/38-Count-and-Say/</id>
    <published>2017-10-29T05:00:30.000Z</published>
    <updated>2017-10-29T05:11:43.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>The count-and-say sequence is the sequence of integers with the first five terms as following:</p></blockquote><blockquote><ol style="list-style-type: decimal"><li>1</li><li>11</li><li>21</li><li>1211</li><li>111221</li></ol></blockquote><blockquote><p>1 is read off as “one 1” or 11. 11 is read off as “two 1s” or 21. 21 is read off as “one 2, then one 1” or 1211.</p></blockquote><blockquote><p>Given an integer n, generate the nth term of the count-and-say sequence.</p></blockquote><blockquote><p>Note: Each term of the sequence of integers will be represented as a string.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  This problem is a litter longer than before, so it take a few seconds to understand the problem. Don’t be afraid of the complicated desription. I construct a StringBuilder to store the characters to be added and its number, and then add it by law.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public String countAndSay(int n) &#123;</div><div class="line">        StringBuilder builder=new StringBuilder(&quot;1&quot;);</div><div class="line">  StringBuilder prev;</div><div class="line">  int count;</div><div class="line">  char say;</div><div class="line">  for (int i=1;i&lt;n;i++) &#123;</div><div class="line">  prev=builder;</div><div class="line">  builder=new StringBuilder();</div><div class="line">  count=1;</div><div class="line">  say=prev.charAt(0);</div><div class="line">  for (int j=1,len=prev.length();j&lt;len;j++) &#123;</div><div class="line">  if (prev.charAt(j)!=say) &#123;</div><div class="line">  builder.append(count).append(say);</div><div class="line">  count=1;</div><div class="line">  say=prev.charAt(j);</div><div class="line">  &#125;</div><div class="line">  else count++;</div><div class="line">  &#125;</div><div class="line">builder.append(count).append(say);</div><div class="line">  &#125;</div><div class="line">  return builder.toString();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The count-and-say sequence is the sequence of integers with the fi
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
</feed>
