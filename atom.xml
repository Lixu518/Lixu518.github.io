<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mysry</title>
  
  <subtitle>Life is short, learn more!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.mysry.com/"/>
  <updated>2017-12-15T14:16:42.948Z</updated>
  <id>http://www.mysry.com/</id>
  
  <author>
    <name>Mysry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>86. Partition List</title>
    <link href="http://www.mysry.com/2017/12/15/86-Partition-List/"/>
    <id>http://www.mysry.com/2017/12/15/86-Partition-List/</id>
    <published>2017-12-15T14:10:59.000Z</published>
    <updated>2017-12-15T14:16:42.948Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x. You should preserve the original relative order of the nodes in each of the two partitions.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Keep two List to store the nodes which is bigger than x and smaller than x respectively. Add curr2 to the tail of curr1.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * public class ListNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     ListNode next;</div><div class="line"> *     ListNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public ListNode partition(ListNode head, int x) &#123;</div><div class="line">        ListNode dummy1 = new ListNode(0);</div><div class="line">        ListNode dummy2 = new ListNode(0);</div><div class="line">        ListNode curr1 = dummy,curr2 = dummy2;</div><div class="line">        while(head != null)&#123;</div><div class="line">            if(head.val&lt;x)&#123;</div><div class="line">                curr1.next = head;</div><div class="line">                curr1 = curr1.next;</div><div class="line">            &#125;else&#123;</div><div class="line">                curr2.next = head;</div><div class="line">                curr2 = curr2.next;</div><div class="line">            &#125;</div><div class="line">            head = head.next;</div><div class="line">        &#125;</div><div class="line">        curr2.next = null;</div><div class="line">        curr1.next = dummy2.next;</div><div class="line">        return dummy1.next;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * struct ListNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     ListNode *next;</div><div class="line"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</div><div class="line"> * &#125;;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    ListNode* partition(ListNode* head, int x) &#123;</div><div class="line">        ListNode node1(0), node2(0);</div><div class="line">        ListNode *p1 = &amp;node1,*p2 = &amp;node2;</div><div class="line">        while(head)&#123;</div><div class="line">            if(head-&gt;val&lt;x)</div><div class="line">                p1 = p1-&gt;next = head;</div><div class="line">            else</div><div class="line">                p2 = p2-&gt;next = head;</div><div class="line">            head = head-&gt;next;</div><div class="line">        &#125;</div><div class="line">        p2-&gt;next = NULL;</div><div class="line">        p1-&gt;next = node2.next;</div><div class="line">        return node1.next;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a linked list and a value x, partition it such that all node
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>85. Maximal Rectangle </title>
    <link href="http://www.mysry.com/2017/12/13/85-Maximal-Rectangle/"/>
    <id>http://www.mysry.com/2017/12/13/85-Maximal-Rectangle/</id>
    <published>2017-12-13T14:31:53.000Z</published>
    <updated>2017-12-13T14:39:41.743Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a 2D binary matrix filled with 0’s and 1’s, find the largest rectangle containing only 1’s and return its area.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Based on previous problem, set every row’s reachable height as the input height. Input the heights array and update the maxArea gobally.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int maximalRectangle(char[][] matrix) &#123;</div><div class="line">         if (matrix==null||matrix.length==0||matrix[0].length==0)</div><div class="line">            return 0;</div><div class="line">        int cLen = matrix[0].length;</div><div class="line">        int rLen = matrix.length;</div><div class="line">        int[] h = new int[cLen+1];</div><div class="line">        h[cLen]=0;</div><div class="line">        int max = 0;</div><div class="line">        for (int row=0;row&lt;rLen;row++) &#123;</div><div class="line">            Stack&lt;Integer&gt; s = new Stack&lt;Integer&gt;();</div><div class="line">            for (int i=0;i&lt;cLen+1;i++) &#123;</div><div class="line">                if (i&lt;cLen)</div><div class="line">                    if(matrix[row][i]==&apos;1&apos;)</div><div class="line">                        h[i]+=1;</div><div class="line">                    else h[i]=0;</div><div class="line"></div><div class="line">                if (s.isEmpty()||h[s.peek()]&lt;=h[i])</div><div class="line">                    s.push(i);</div><div class="line">                else &#123;</div><div class="line">                    while(!s.isEmpty()&amp;&amp;h[i]&lt;h[s.peek()])&#123;</div><div class="line">                        int top = s.pop();</div><div class="line">                        int area = h[top]*(s.isEmpty()?i:(i-s.peek()-1));</div><div class="line">                        if (area&gt;max)</div><div class="line">                            max = area;</div><div class="line">                    &#125;</div><div class="line">                    s.push(i);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return max;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    int maximalRectangle(vector&lt;vector&lt;char&gt;&gt;&amp; matrix) &#123;</div><div class="line">        int res = 0;</div><div class="line">        vector&lt;int&gt; height;</div><div class="line">        for (int i = 0; i &lt; matrix.size(); ++i) &#123;</div><div class="line">            height.resize(matrix[i].size());</div><div class="line">            for (int j = 0; j &lt; matrix[i].size(); ++j) &#123;</div><div class="line">                height[j] = matrix[i][j] == &apos;0&apos; ? 0 : (1 + height[j]);</div><div class="line">            &#125;</div><div class="line">            res = max(res, largestRectangleArea(height));</div><div class="line">        &#125;</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line">    int largestRectangleArea(vector&lt;int&gt; &amp;height) &#123;</div><div class="line">        int res = 0;</div><div class="line">        stack&lt;int&gt; s;</div><div class="line">        height.push_back(0);</div><div class="line">        for (int i = 0; i &lt; height.size(); ++i) &#123;</div><div class="line">            if (s.empty() || height[s.top()] &lt;= height[i]) s.push(i);</div><div class="line">            else &#123;</div><div class="line">                int tmp = s.top();</div><div class="line">                s.pop();</div><div class="line">                res = max(res, height[tmp] * (s.empty() ? i : (i - s.top() - 1)));</div><div class="line">                --i;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a 2D binary matrix filled with 0’s and 1’s, find the largest
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>84. Largest Rectangle in Histogram</title>
    <link href="http://www.mysry.com/2017/12/13/84-Largest-Rectangle-in-Histogram/"/>
    <id>http://www.mysry.com/2017/12/13/84-Largest-Rectangle-in-Histogram/</id>
    <published>2017-12-13T13:00:25.000Z</published>
    <updated>2017-12-13T13:16:16.041Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given n non-negative integers representing the histogram’s bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Travel through all the heights, find the area of height[i], and use a stack to store the unreachable boundary of height[i]’s rectangular. For the reachable boundary heights[i], caculate the area, update the max area and push it(delete it).</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int largestRectangleArea(int[] heights) &#123;</div><div class="line">        if(heights==null||heights.length==0)</div><div class="line">            return 0;</div><div class="line">        Stack&lt;Integer&gt; st = new Stack&lt;Integer&gt;();</div><div class="line">        int maxArea = 0;</div><div class="line">        for(int i=0;i&lt;=heights.length;i++)&#123;</div><div class="line">            int curt = (i == heights.length)?-1:heights[i];</div><div class="line">            while(!st.isEmpty()&amp;&amp;curt &lt;= heights[st.peek()])&#123;</div><div class="line">                int h = heights[st.pop()];</div><div class="line">                int w = st.isEmpty()?i:i-(st.peek()+1);</div><div class="line">                maxArea = Math.max(maxArea,h*w);</div><div class="line">            &#125;</div><div class="line">            st.push(i);</div><div class="line">        &#125;</div><div class="line">        return maxArea;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    int largestRectangleArea(vector&lt;int&gt;&amp; heights) &#123;</div><div class="line">        int ret = 0;</div><div class="line">        heights.push_back(0);</div><div class="line">        vector&lt;int&gt; index;</div><div class="line">        for (int i=0;i&lt;heights.size();i++)&#123;</div><div class="line">            while(index.size()&gt;0&amp;&amp; heights[index.back()]&gt;=heights[i])&#123;</div><div class="line">                int h = heights[index.back()];</div><div class="line">                index.pop_back();</div><div class="line">                int idx = index.size()&gt;0?index.back():-1;</div><div class="line">                if(h*(i-idx-1)&gt;ret)</div><div class="line">                    ret = h*(i-idx-1);</div><div class="line">            &#125;</div><div class="line">            index.push_back(i);</div><div class="line">        &#125;</div><div class="line">        return ret;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given n non-negative integers representing the histogram’s bar hei
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>81. Search in Rotated Sorted Array II </title>
    <link href="http://www.mysry.com/2017/12/11/81-Search-in-Rotated-Sorted-Array-II/"/>
    <id>http://www.mysry.com/2017/12/11/81-Search-in-Rotated-Sorted-Array-II/</id>
    <published>2017-12-11T14:12:26.000Z</published>
    <updated>2017-12-11T14:20:27.274Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand. (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2). Write a function to determine if a given target is in the array. The array may contain duplicates.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Binary search!</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public boolean search(int[] nums, int target) &#123;</div><div class="line">        int left =0, right = nums.length,mid;</div><div class="line">        while(left&lt;=right)&#123;</div><div class="line">            mid = (left+right)/2;</div><div class="line">            if(nums[mid]==target)</div><div class="line">                return true;</div><div class="line">            if(nums[mid]==nums[left]&amp;&amp;nums[left]==nums[mid])&#123;</div><div class="line">                ++left;</div><div class="line">                --right;</div><div class="line">            &#125;else if(nums[left]&lt;=nums[mid])&#123;</div><div class="line">                if(nums[mid]&gt;target&amp;&amp;nums[left]&lt;=target)</div><div class="line">                    right=mid-1;</div><div class="line">                else</div><div class="line">                    left=mid+1;</div><div class="line">            &#125;else&#123;</div><div class="line">                if(nums[mid]&lt;target&amp;&amp;nums[right]&gt;=target)</div><div class="line">                    left = mid+1;</div><div class="line">                else</div><div class="line">                    right = mid-1;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    bool search(vector&lt;int&gt;&amp; nums, int target) &#123;</div><div class="line">        int left = 0,right = nums.size()-1,mid;</div><div class="line">        while(left&lt;=right)</div><div class="line">        &#123;</div><div class="line">            mid = (left+right)&gt;&gt;1;</div><div class="line">            if(nums[mid]==target)</div><div class="line">                return true;</div><div class="line">            if((nums[left]==nums[mid])&amp;&amp;(nums[right]==nums[mid]))</div><div class="line">               &#123;</div><div class="line">                ++left;</div><div class="line">                --right;</div><div class="line">            &#125;</div><div class="line">            else if(nums[left]&lt;=nums[mid])</div><div class="line">            &#123;</div><div class="line">                if((nums[left]&lt;=target)&amp;&amp; (nums[mid]&gt;target))</div><div class="line">                    right = mid-1;</div><div class="line">                else</div><div class="line">                    left = mid+1;</div><div class="line">            &#125;</div><div class="line">            else</div><div class="line">            &#123;</div><div class="line">                if((nums[mid]&lt;target)&amp;&amp;(nums[right]&gt;=target))</div><div class="line">                    left = mid+1;</div><div class="line">                else</div><div class="line">                    right = mid-1;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Suppose an array sorted in ascending order is rotated at some pivo
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>79. Word Search </title>
    <link href="http://www.mysry.com/2017/12/10/79-Word-Search/"/>
    <id>http://www.mysry.com/2017/12/10/79-Word-Search/</id>
    <published>2017-12-10T02:23:14.000Z</published>
    <updated>2017-12-10T02:26:50.200Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a 2D board and a word, find if the word exists in the grid. The word can be constructed from letters of sequentially adjacent cell, where “adjacent” cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> bfs+dfs+backtracking.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public boolean exist(char[][] board, String word) &#123;</div><div class="line">        char[] w= word.toCharArray();</div><div class="line">        for(int i=0;i&lt;board.length;i++)&#123;</div><div class="line">            for(int j=0;j&lt;board[0].length;j++)&#123;</div><div class="line">                if(isfound(board,w,i,j,0))</div><div class="line">                    return true;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">    public boolean isfound(char[][] board,char[] w,int i,int j,int m)&#123;</div><div class="line">        if(m==w.length) return true;</div><div class="line">        if(i&lt;0||j&lt;0||i==board.length||j==board[i].length)</div><div class="line">            return false;</div><div class="line">        if(board[i][j]!=w[m]) return false;</div><div class="line">        board[i][j]^=256;</div><div class="line">        if(isfound(board,w,i-1,j,m+1)||isfound(board,w,i+1,j,m+1)||isfound(board,w,i,j-1,m+1)||isfound(board,w,i,j+1,m+1))</div><div class="line">            return true;</div><div class="line">        board[i][j]^=256;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    bool exist(vector&lt;vector&lt;char&gt;&gt;&amp; board, string word) &#123;</div><div class="line">        m = board.size();</div><div class="line">        n = board[0].size();</div><div class="line">        for(int i=0;i&lt;m;i++)</div><div class="line">            for(int j=0;j&lt;n;j++)&#123;</div><div class="line">                if(isfound(board,word.c_str(),i,j))</div><div class="line">                    return true;</div><div class="line">            &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">    private:</div><div class="line">        int m;</div><div class="line">        int n;</div><div class="line">        bool isfound(vector&lt;vector&lt;char&gt;&gt;&amp; board ,const char* w, int i,int j)</div><div class="line">        &#123;</div><div class="line">            if(i&lt;0||j&lt;0||i&gt;=m||j&gt;=n||board[i][j]==&apos;\0&apos;|| *w != board[i][j])</div><div class="line">                return false;</div><div class="line">            if(*(w+1)==&apos;\0&apos;)</div><div class="line">                return true;</div><div class="line">            char t = board[i][j];</div><div class="line">            board[i][j]=&apos;\0&apos;;</div><div class="line">            if(isfound(board,w+1,i-1,j)||isfound(board,w+1,i+1,j)||isfound(board,w+1,i,j-1)||isfound(board,w+1,i,j+1))</div><div class="line">                return true;</div><div class="line">            board[i][j]=t;</div><div class="line">            return false;</div><div class="line">        &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a 2D board and a word, find if the word exists in the grid. 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>80. Remove Duplicates from Sorted Array II </title>
    <link href="http://www.mysry.com/2017/12/10/80-Remove-Duplicates-from-Sorted-Array-II/"/>
    <id>http://www.mysry.com/2017/12/10/80-Remove-Duplicates-from-Sorted-Array-II/</id>
    <published>2017-12-10T02:18:47.000Z</published>
    <updated>2017-12-10T02:22:19.610Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Follow up for “Remove Duplicates”: What if duplicates are allowed at most twice?</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Just go through the numbers and include those in the result that haven’t been included twice already.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int removeDuplicates(int[] nums) &#123;</div><div class="line">        int i=0;</div><div class="line">        for(int n:nums)&#123;</div><div class="line">            if(i&lt;2||n&gt;nums[i-2])</div><div class="line">                nums[i++]=n;</div><div class="line">        &#125;</div><div class="line">        return i;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    int removeDuplicates(vector&lt;int&gt;&amp; nums) &#123;</div><div class="line">        int i=0;</div><div class="line">        for(int n:nums)&#123;</div><div class="line">            if(i&lt;2||n&gt;nums[i-2])</div><div class="line">                nums[i++]=n;</div><div class="line">        &#125;</div><div class="line">        return i;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Follow up for “Remove Duplicates”: What if duplicates are allowed 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Naive Bayes</title>
    <link href="http://www.mysry.com/2017/12/09/Naive-Bayes/"/>
    <id>http://www.mysry.com/2017/12/09/Naive-Bayes/</id>
    <published>2017-12-09T06:52:47.000Z</published>
    <updated>2017-12-09T10:45:21.977Z</updated>
    
    <content type="html"><![CDATA[<h2 id="贝叶斯定理">贝叶斯定理</h2><p>  贝叶斯定理:<span class="math display">\[P(A|B)=\frac{P(B|A)P(A)}{P(B)}\]</span>事件B发生的条件下事件A发生的概率可以由时间A发生的A和B的联合分布<span class="math display">\[(P(A,B)=P(B|A)P(A)=P(A|B)P(B))\]</span>除以事件B发生的概率求得。</p><h2 id="朴素贝叶斯分类器">朴素贝叶斯分类器</h2>  假设训练数据集<span class="math display">\[T = \{(x_1,y_1),(x_2,y_2),...,(x_N,y_N)\}\]</span>是由<span class="math inline">\(P(X,Y)\)</span>独立同分布产生，先验概率分布<span class="math display">\[P(Y=c_k), k=1,2,...,K\]</span>条件概率分布<span class="math display">\[P(X=x|Y=c_k)=P(X^{(1)}=x^{(1)},...,X^{(n)}=x^{(n)}|Y=c_k),k=1,2,...,K\]</span>在进行如下条件独立性假设下<span class="math display">\[\begin{align}P(X=x|Y=c_k)&amp;=P(X^{(1)}=x^{(1)},...,X^{(n)}=x^{(n)}|Y=c_k)\\&amp;=\prod_{j=1}^n P(X^{(j)}=x^{(j)}|Y=c_k)\end{align}\]</span><p>那么根据贝叶斯定理计算后验概率为<span class="math display">\[P(Y=c_k|X=x)=\frac{P(X=x|Y=c_k)P(Y=c_k)}{\sum_k P(X=x|Y=c_k)P(Y=c_k)}\]</span>我们将上面的条件独立性假设带入公式可以得到<span class="math display">\[P(Y=c_k|X=x)=\frac{P(Y=c_k)\prod_j P(X^{(j)}=Y=c_k)}{\sum_k P(Y=c_k)\prod_j P(X^(j)=x^{(j)}|Y=c_k)} , k=1,2,...,K\]</span>这是朴素贝叶斯分类的基本形式，由这个公式我们可以得到朴素贝叶斯分类器<span class="math display">\[y=f(x)=argmax_{c_k} \frac{P(Y=c_k)\prod_j P(X^{(j)}=Y=c_k)}{\sum_k P(Y=c_k)\prod_j P(X^(j)=x^{(j)}|Y=c_k)}\]</span>上式中的分母对于所有的<span class="math inline">\(c_k\)</span>都是相同的，所以我们有<span class="math display">\[y=argmax_{c_k} P(Y=c_k) \prod_j P(X^{(j)}=x^{(j)}|y=c_k)\]</span></p><h2 id="用极大似然法估计朴素贝叶斯参数">用极大似然法估计朴素贝叶斯参数</h2><p>  先验概率<span class="math inline">\(P(Y=c_k)\)</span>的极大似然估计为:<span class="math display">\[ P(Y=c_k)=\frac{\sum_{i=1}^N I(y_i=c_k)}{N},k=1,2,...,K\]</span>设第j个特征<span class="math inline">\(x^(j)\)</span>可能取值的集合为<span class="math inline">\(\{a_{j1},a_{j2},...,a_{js}\}\)</span>,条件概率<span class="math inline">\(P(X^{(j)}=a_{ij}|Y=c_k)\)</span>的极大似然估计为:<span class="math display">\[P(X^{(j)}=a_{ij}|Y=c_k)=\frac{\sum_{i=1}^N I(x_i^{(j)}=a_{ij},y_i=c_k)}{\sum_i^N I(y_i=c_k)}\]</span> <span class="math display">\[j=1,2,...,n; l=1,2,...,S_j; k=1,2,...,K\]</span></p><h2 id="贝叶斯算法流程">贝叶斯算法流程</h2><p><font color="red">输入</font>:训练数据集<span class="math inline">\(T = \{(x_1,y_1),(x_2,y_2),...,(x_N,y_N)\}\)</span>，其中<span class="math inline">\(x_i=(x_i^{(1)}\)</span>,<span class="math inline">\(x_i^{(2)},...,x_i^{(n)})^T\)</span>,<span class="math inline">\(x_i^{(j)}\)</span>是第i个样本的第j个特征，<span class="math inline">\(x_i^{(j)}\in\{a_{j1},a_{j2},...,a_{js}\}\)</span>,<span class="math inline">\(a_{jl}\)</span>是第j个特征的第l个取值，<span class="math inline">\(j=1,2,...,n,l=1,2,...,S_j, y\in\{c_1,c_2,...,c_k\}\)</span>:实例x;<br> <font color="red">输出</font>:实例x的分类。<br>   (1)计算先验概率和条件概率:<span class="math display">\[P(Y=c_k)=\frac{\sum_{i=1}^N I(y_i=c_k)}{N},k=1,2,...,K\]</span> <span class="math display">\[P(X^{(j)}=a_{ij}|Y=c_k)=\frac{\sum_{i=1}^N I(x_i^{(j)}=a_{ij},y_i=c_k)}{\sum_i^N I(y_i=c_k)}\]</span> <span class="math display">\[j=1,2,...,n; l=1,2,...,S_j; k=1,2,...,K\]</span><br>   (2)对于给定的实例<span class="math inline">\(x_i=(x_i^{(1)},x_i^{(2)},...,x_i^{(n)})^T\)</span>,<span class="math inline">\(x_i^{(j)}\)</span>,计算:<span class="math display">\[P(Y=c_k)\prod_j P(X^{(j)}=x^{(j)}|y=c_k), k=1,2,...,K\]</span><br>   (3)确定实例x的类<span class="math display">\[y=argmax_{c_k} P(Y=c_k) \prod_j P(X^{(j)}=x^{(j)}|y=c_k)\]</span><br></p><h2 id="贝叶斯估计">贝叶斯估计</h2><p>  极大似然估计可能会存在所要估计值的概率为0的情况，影响后验概率的计算结果，使分类产生偏差，为了矫正这一可能的偏差，我们在随机变量的各个取值的频数上赋予一个正数<span class="math inline">\(\lambda\)</span>:<span class="math display">\[P_\lambda (X^{(j)}=a_{jl}|Y=c_k)=\frac{\sum_{i=1}^N I(X_i^{(j)}=a_{jl},y=c_k)+\lambda}{\sum_{i=1}^N I(y_i=c_k) +S_j \lambda}\]</span></p><h2 id="后验概率最大化的含义">后验概率最大化的含义</h2>  朴素贝叶斯算法将x分类为使得后验概率最大化等价于期望风险最小化，对于此类分类问题，我们假其0-1损失函数:<span class="math display">\[L(Y,f(X))=1*I(Y\neq f(X))\]</span>上式<span class="math inline">\(f(X)\)</span>是决策函数，则期望风险函数为<span class="math display">\[\begin{align}R_{exp} (f)&amp;=E[L(Y,f(X))]\\&amp;=E_X \sum_{k=1}^K [L(c_k,f(X))]P(c_k|X)\end{align}\]</span>为了使得上述风险期望取得最小值，只需对于每个X=x极小化，则:<span class="math display">\[\begin{align}f(x)&amp;=argmin_{y\in Y}\sum_{k=1}^K L(c_k,y)P(c_k|X=x) \\&amp;=argmin_{y\in Y} \sum_{k=1}^K P(y\neq c_k|X=x)\\&amp;=argmin_{y\in Y}(1-P(y=c_k|X=x)) \\&amp;=argmax_{y\in Y}P(Y=c_k|X=x)\end{align}\]</span><p>那么根据上述推理，由期望风险最小化可以得到后验概率最大化，即:<span class="math display">\[f(x)=argmax_{y\in Y}P(Y=c_k|X=x)\]</span></p><center color="red">To be continued…</center>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;贝叶斯定理&quot;&gt;贝叶斯定理&lt;/h2&gt;
&lt;p&gt;  贝叶斯定理:&lt;span class=&quot;math display&quot;&gt;\[P(A|B)=\frac{P(B|A)P(A)}{P(B)}\]&lt;/span&gt;事件B发生的条件下事件A发生的概率可以由时间A发生的A和B的联合分布&lt;
      
    
    </summary>
    
    
      <category term="Machine learning" scheme="http://www.mysry.com/tags/Machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>78. Subsets </title>
    <link href="http://www.mysry.com/2017/12/08/78-Subsets/"/>
    <id>http://www.mysry.com/2017/12/08/78-Subsets/</id>
    <published>2017-12-08T13:47:14.000Z</published>
    <updated>2017-12-08T13:50:53.875Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a set of distinct integers, nums, return all possible subsets (the power set).</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Just solve as the previous problem!</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">package Subsets;</div><div class="line"></div><div class="line">import java.util.ArrayList;</div><div class="line">import java.util.List;</div><div class="line"></div><div class="line">public class Solution &#123;</div><div class="line">public List&lt;List&lt;Integer&gt;&gt; subsets(int[] nums) &#123;</div><div class="line">List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;List&lt;Integer&gt;&gt;();</div><div class="line">List&lt;Integer&gt; tmp = new ArrayList&lt;Integer&gt;();</div><div class="line">dfs(res, tmp, nums, 0);</div><div class="line">return res;</div><div class="line">&#125;</div><div class="line"></div><div class="line">public void dfs(List&lt;List&lt;Integer&gt;&gt; res, List&lt;Integer&gt; tmp, int[] nums, int m) &#123;</div><div class="line">res.add(new ArrayList&lt;Integer&gt;(tmp));</div><div class="line">for (int i = m; i &lt; nums.length; i++) &#123;</div><div class="line">tmp.add(nums[i]);</div><div class="line">dfs(res, tmp, nums, i + 1);</div><div class="line">tmp.remove(tmp.size() - 1);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    vector&lt;vector&lt;int&gt;&gt; subsets(vector&lt;int&gt;&amp; nums) &#123;</div><div class="line">        vector&lt;vector&lt;int&gt;&gt; res;</div><div class="line">        vector&lt;int&gt; tmp;</div><div class="line">        dfs(res,tmp,nums,0);</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line">    void dfs(vector&lt;vector&lt;int&gt;&gt;&amp; res, vector&lt;int&gt;&amp; tmp,vector&lt;int&gt;&amp; nums,int m)&#123;</div><div class="line">        res.push_back(tmp);</div><div class="line">        for (int i=m;i&lt;nums.size();i++)&#123;</div><div class="line">            tmp.push_back(nums[i]);</div><div class="line">            dfs(res,tmp,nums,i+1);</div><div class="line">            tmp.pop_back();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a set of distinct integers, nums, return all possible subset
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>77. Combinations</title>
    <link href="http://www.mysry.com/2017/12/08/77-Combinations/"/>
    <id>http://www.mysry.com/2017/12/08/77-Combinations/</id>
    <published>2017-12-08T13:02:32.000Z</published>
    <updated>2017-12-08T13:08:07.278Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given two integers n and k, return all possible combinations of k numbers out of 1 … n.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Typical backtracking problem!</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public List&lt;List&lt;Integer&gt;&gt; combine(int n, int k) &#123;</div><div class="line">        List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;List&lt;Integer&gt;&gt;();</div><div class="line">        List&lt;Integer&gt; tmp = new ArrayList&lt;&gt;();</div><div class="line">        combination(res,tmp,n,k,1);</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line">    public void combination(List&lt;List&lt;Integer&gt;&gt; res,List&lt;Integer&gt; tmp,int n, int  k,int m)&#123;</div><div class="line">        if(k==0)&#123;</div><div class="line">            res.add(new ArrayList&lt;Integer&gt;(tmp));</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        for (int i = m;i&lt;=n;i++)&#123;</div><div class="line">            tmp.add(i);</div><div class="line">            combination(res,tmp,n,k-1,i+1);</div><div class="line">            tmp.remove(tmp.size()-1);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    vector&lt;vector&lt;int&gt;&gt; combine(int n, int k) &#123;</div><div class="line">        vector&lt;vector&lt;int&gt;&gt; res;</div><div class="line">        int i=0;</div><div class="line">        vector&lt;int&gt;p(k,0);</div><div class="line">        while(i&gt;=0)&#123;</div><div class="line">            p[i]++;</div><div class="line">            if(p[i]&gt;n) --i;</div><div class="line">            else if(i==k-1)</div><div class="line">                res.push_back(p);</div><div class="line">            else&#123;</div><div class="line">                ++i;</div><div class="line">                p[i]=p[i-1];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given two integers n and k, return all possible combinations of k 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>76. Minimum Window Substring</title>
    <link href="http://www.mysry.com/2017/12/06/76-Minimum-Window-Substring/"/>
    <id>http://www.mysry.com/2017/12/06/76-Minimum-Window-Substring/</id>
    <published>2017-12-06T15:27:05.000Z</published>
    <updated>2017-12-06T15:47:06.881Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a string S and a string T, find the minimum window in S which will contain all the characters in T in complexity O(n).</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Use the Hashmap to indicate where the characters and how many characters in t. And traverse the string s, contineously decrease len to the min.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public String minWindow(String s, String t) &#123;</div><div class="line">        int [] srcHash = new int[255];</div><div class="line">        for (int i=0;i&lt;t.length();i++)</div><div class="line">            srcHash[t.charAt(i)]++;</div><div class="line">        int start = 0, i=0;</div><div class="line">        int[] destHash = new int[255];</div><div class="line">        int found = 0;</div><div class="line">        int begin =-1, end = s.length(),minLength = s.length();</div><div class="line">        for (start =i=0;i&lt;s.length();i++)&#123;</div><div class="line">            destHash[s.charAt(i)]++;</div><div class="line">            if(destHash[s.charAt(i)]&lt;=srcHash[s.charAt(i)]) found++;</div><div class="line">            if(found == t.length())&#123;</div><div class="line">                while(start&lt;i&amp;&amp;destHash[s.charAt(start)]&gt;srcHash[s.charAt(start)])&#123;</div><div class="line">                    destHash[s.charAt(start)]--;</div><div class="line">                    start++;</div><div class="line">                &#125;</div><div class="line">                if(i-start&lt;minLength)&#123;</div><div class="line">                    minLength = i-start;</div><div class="line">                    begin = start;</div><div class="line">                    end = i;</div><div class="line">                &#125;</div><div class="line">                destHash [s.charAt(start)]--;</div><div class="line">                found--;</div><div class="line">                start++;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return begin == -1?&quot;&quot;:s.substring(begin,end+1);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    string minWindow(string s, string t) &#123;</div><div class="line">        unordered_map&lt;char,int&gt;hash;</div><div class="line">        int num = t.size(),len=INT_MAX,start=0,left = 0;</div><div class="line">        for (auto val:t) hash[val]++;</div><div class="line">        for(int i=0;i&lt;s.size();i++)&#123;</div><div class="line">            if(hash[s[i]]-- &gt; 0) num--;</div><div class="line">            while(num==0)&#123;</div><div class="line">                len=(i-left+1)&lt;len?(i-(start=left)+1):len;</div><div class="line">                if(hash[s[left++]]++ ==0) num++;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return len==INT_MAX?&quot;&quot;:s.substr(start,len);</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a string S and a string T, find the minimum window in S whic
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>75. Sort Colors </title>
    <link href="http://www.mysry.com/2017/12/05/75-Sort-Colors/"/>
    <id>http://www.mysry.com/2017/12/05/75-Sort-Colors/</id>
    <published>2017-12-05T14:13:37.000Z</published>
    <updated>2017-12-05T14:21:07.860Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue. Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively. Note: You are not suppose to use the library’s sort function for this problem. Follow up: A rather straight forward solution is a two-pass algorithm using counting sort. First, iterate the array counting number of 0’s, 1’s, and 2’s, then overwrite array with total number of 0’s, then 1’s and followed by 2’s. Could you come up with an one-pass algorithm using only constant space?</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> We use three pointers–low, mid and high, and as for mid, there are there situation ‘0’, ‘1’ and ‘2’.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public void sortColors(int[] nums) &#123;</div><div class="line">        int low = 0, mid = 0, tmp = 0, high = nums.length-1;</div><div class="line">        while(mid&lt;=high)&#123;</div><div class="line">            if (nums[mid]==0)&#123;</div><div class="line">                tmp = nums[mid];</div><div class="line">                nums[mid] = nums[low];</div><div class="line">                nums[low] = tmp;</div><div class="line">                low++;</div><div class="line">                mid++;</div><div class="line">            &#125;else if (nums[mid]==1)&#123;</div><div class="line">                mid++;   </div><div class="line">            &#125;else&#123;</div><div class="line">                tmp = nums[mid];</div><div class="line">                nums[mid] = nums[high];</div><div class="line">                nums[high] = tmp;</div><div class="line">                high--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    void sortColors(vector&lt;int&gt;&amp; nums) &#123;</div><div class="line">        int low = 0, mid = 0, tmp = 0, high = nums.size()-1;</div><div class="line">        while(mid&lt;=high)&#123;</div><div class="line">            if(nums[mid]==0)&#123;</div><div class="line">                tmp = nums[mid];</div><div class="line">                nums[mid]= nums[low];</div><div class="line">                nums[low] = tmp;</div><div class="line">                low++;</div><div class="line">                mid++;</div><div class="line">            &#125;else if (nums[mid]==2)&#123;</div><div class="line">                tmp = nums[mid];</div><div class="line">                nums[mid] = nums[high];</div><div class="line">                nums[high] = tmp;</div><div class="line">                high--;</div><div class="line">            &#125;else</div><div class="line">                mid++;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an array with n objects colored red, white or blue, sort the
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>74. Search a 2D Matrix </title>
    <link href="http://www.mysry.com/2017/12/05/74-Search-a-2D-Matrix/"/>
    <id>http://www.mysry.com/2017/12/05/74-Search-a-2D-Matrix/</id>
    <published>2017-12-05T13:33:54.000Z</published>
    <updated>2017-12-05T13:38:35.533Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Search a sorted matrix.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Just treat the sorted matrix as a sorted array and use the binary search!</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public boolean searchMatrix(int[][] matrix, int target) &#123;</div><div class="line">        if(matrix.length==0||matrix[0].length==0)</div><div class="line">            return false;</div><div class="line">        int m = matrix.length, n = matrix[0].length;</div><div class="line">        int l=0, r = m*n-1;</div><div class="line">        while(l!=r)&#123;</div><div class="line">            int mid = (l+r-1)/2;</div><div class="line">            if (matrix[mid/n][mid%n]&lt;target)</div><div class="line">                l= mid +1;</div><div class="line">            else </div><div class="line">                r = mid;</div><div class="line">        &#125;</div><div class="line">        return matrix[r/n][r%n] == target;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    bool searchMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) &#123;</div><div class="line">        int m = matrix.size();</div><div class="line">        if(m==0) return false;</div><div class="line">        int n = matrix[0].size();</div><div class="line">        if(n==0) return false;</div><div class="line">        int l = 0, r = m*n-1;</div><div class="line">        while(l!=r)&#123;</div><div class="line">            int mid = (l+r-1)&gt;&gt;1;</div><div class="line">            if(matrix[mid/n][mid%n]&lt;target)</div><div class="line">                l=mid+1;</div><div class="line">            else</div><div class="line">                r = mid;</div><div class="line">        &#125;</div><div class="line">        return matrix[r/n][r%n] == target;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Search a sorted matrix.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;idea&quot;&gt;&lt;font colo
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>73. Set Matrix Zeroes</title>
    <link href="http://www.mysry.com/2017/12/04/73-Set-Matrix-Zeroes/"/>
    <id>http://www.mysry.com/2017/12/04/73-Set-Matrix-Zeroes/</id>
    <published>2017-12-04T14:01:32.000Z</published>
    <updated>2017-12-04T14:06:14.321Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> It’s better to set it in O(1) space. So we need to store the loaction of o element.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public void setZeroes(int[][] matrix) &#123;</div><div class="line">        if(matrix==null||matrix.length==0) return; </div><div class="line">        int row = matrix.length;</div><div class="line">        int col = matrix[0].length;</div><div class="line">        int[] recordrow =new int[row];</div><div class="line">        int[] recordcol = new int[col];</div><div class="line">        for(int i=0;i&lt;row;i++)&#123;</div><div class="line">            for(int j=0;j&lt;col;j++)&#123;</div><div class="line">                if(matrix[i][j]==0)&#123;</div><div class="line">                    recordrow[i]=1;</div><div class="line">                    recordcol[j]=1;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        for (int i=0;i&lt;row;i++)&#123;</div><div class="line">            if(recordrow[i]==1)&#123;</div><div class="line">                for (int j=0;j&lt;col;j++)</div><div class="line">                    matrix[i][j]=0;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        for (int j=0;j&lt;col;j++)&#123;</div><div class="line">            if(recordcol[j]==1)&#123;</div><div class="line">                for(int i=0;i&lt;row;i++)</div><div class="line">                    matrix[i][j]=0;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    void setZeroes(vector&lt;vector&lt;int&gt;&gt;&amp; matrix) &#123;</div><div class="line">        int row = matrix.size();</div><div class="line">        int col = matrix[0].size();</div><div class="line">        vector&lt;int&gt; recordrow(row,0);</div><div class="line">        vector&lt;int&gt; recordcol(col,0);</div><div class="line">        for (int i=0;i&lt;row;i++)&#123;</div><div class="line">            for (int j=0;j&lt;col;j++)&#123;</div><div class="line">                if(matrix[i][j]==0)&#123;</div><div class="line">                    recordrow[i]=1;</div><div class="line">                    recordcol[j]=1;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        for (int i=0;i&lt;row;i++)&#123;</div><div class="line">            if(recordrow[i]==1)&#123;</div><div class="line">                for(int j=0;j&lt;col;j++)</div><div class="line">                    matrix[i][j]=0;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        for (int j=0;j&lt;col;j++)&#123;</div><div class="line">            if(recordcol[j]==1)&#123;</div><div class="line">                for (int i=0;i&lt;row;i++)</div><div class="line">                    matrix[i][j]=0;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a m x n matrix, if an element is 0, set its entire row and c
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>72. Edit Distance</title>
    <link href="http://www.mysry.com/2017/12/04/72-Edit-Distance/"/>
    <id>http://www.mysry.com/2017/12/04/72-Edit-Distance/</id>
    <published>2017-12-04T13:12:00.000Z</published>
    <updated>2017-12-04T14:01:42.034Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given two words word1 and word2, find the minimum number of steps required to convert word1 to word2. (each operation is counted as 1 step.) You have the following 3 operations permitted on a word: a) Insert a character b) Delete a character c) Replace a character</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Use the DP solution, if word1[i]==word2[j], than dp[i][j] doesn’t change, otherwise we’d like to choose the minDistance way.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">package EditDistance;</div><div class="line"></div><div class="line">public class Solution &#123;</div><div class="line">public int minDistance(String word1, String word2) &#123;</div><div class="line">int m = word1.length(), n = word2.length();</div><div class="line">int[][] cost = new int[m + 1][n + 1];</div><div class="line">for (int i = 0; i &lt;= m; i++)</div><div class="line">cost[i][0] = i;</div><div class="line">for (int i = 0; i &lt;= n; i++)</div><div class="line">cost[0][i] = i;</div><div class="line">for (int i = 0; i &lt; m; i++) &#123;</div><div class="line">for (int j = 0; j &lt; n; j++) &#123;</div><div class="line">if (word1.charAt(i) == word2.charAt(j))</div><div class="line">cost[i + 1][j + 1] = cost[i][j];</div><div class="line">else &#123;</div><div class="line">int a = cost[i][j];</div><div class="line">int b = cost[i][j + 1];</div><div class="line">int c = cost[i + 1][j];</div><div class="line">cost[i + 1][j + 1] = a &lt; b ? (a &lt; c ? a : c) : (b &lt; c ? b : c);</div><div class="line">cost[i + 1][j + 1]++;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return cost[m][n];</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">package EditDistance;</div><div class="line"></div><div class="line">public class Solution &#123;</div><div class="line">public int minDistance(String word1, String word2) &#123;</div><div class="line">int m = word1.length(), n = word2.length();</div><div class="line">int[][] cost = new int[m + 1][n + 1];</div><div class="line">for (int i = 0; i &lt;= m; i++)</div><div class="line">cost[i][0] = i;</div><div class="line">for (int i = 0; i &lt;= n; i++)</div><div class="line">cost[0][i] = i;</div><div class="line">for (int i = 0; i &lt; m; i++) &#123;</div><div class="line">for (int j = 0; j &lt; n; j++) &#123;</div><div class="line">if (word1.charAt(i) == word2.charAt(j))</div><div class="line">cost[i + 1][j + 1] = cost[i][j];</div><div class="line">else &#123;</div><div class="line">int a = cost[i][j];</div><div class="line">int b = cost[i][j + 1];</div><div class="line">int c = cost[i + 1][j];</div><div class="line">cost[i + 1][j + 1] = a &lt; b ? (a &lt; c ? a : c) : (b &lt; c ? b : c);</div><div class="line">cost[i + 1][j + 1]++;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return cost[m][n];</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given two words word1 and word2, find the minimum number of steps 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>65. Valid Number</title>
    <link href="http://www.mysry.com/2017/12/04/65-Valid-Number/"/>
    <id>http://www.mysry.com/2017/12/04/65-Valid-Number/</id>
    <published>2017-12-04T12:11:41.000Z</published>
    <updated>2017-12-04T12:15:40.817Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Validate if a given string is numeric.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Verification as the rule and don’t miss any possiable situation.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">package ValidNumber;</div><div class="line"></div><div class="line">public class Solution &#123;</div><div class="line">public boolean isNumber(String s) &#123;</div><div class="line">s = s.trim();</div><div class="line">boolean pointSeen = false;</div><div class="line">boolean eSeen = false;</div><div class="line">boolean numberSeen = false;</div><div class="line">boolean numberAfterE = true;</div><div class="line">for (int i = 0; i &lt; s.length(); i++) &#123;</div><div class="line">if (&apos;0&apos; &lt;= s.charAt(i) &amp;&amp; s.charAt(i) &lt;= &apos;9&apos;) &#123;</div><div class="line">numberSeen = true;</div><div class="line">numberAfterE = true;</div><div class="line">&#125; else if (s.charAt(i) == &apos;.&apos;) &#123;</div><div class="line">if (eSeen || pointSeen) &#123;</div><div class="line">return false;</div><div class="line">&#125;</div><div class="line">pointSeen = true;</div><div class="line">&#125; else if (s.charAt(i) == &apos;e&apos;) &#123;</div><div class="line">if (eSeen || !numberSeen) &#123;</div><div class="line">return false;</div><div class="line">&#125;</div><div class="line">numberAfterE = false;</div><div class="line">eSeen = true;</div><div class="line">&#125; else if (s.charAt(i) == &apos;-&apos; || s.charAt(i) == &apos;+&apos;) &#123;</div><div class="line">if (i != 0 &amp;&amp; s.charAt(i - 1) != &apos;e&apos;) &#123;</div><div class="line">return false;</div><div class="line">&#125;</div><div class="line">&#125; else &#123;</div><div class="line">return false;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">return numberSeen &amp;&amp; numberAfterE;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    bool isNumber(string s) &#123;</div><div class="line">        int n = s.size();</div><div class="line">        if(n==0) return false;</div><div class="line">        int i=0,count_point = 0,count_num = 0;</div><div class="line">        while(s[i]==&apos; &apos;) i++;</div><div class="line">        if(s[i]==&apos;-&apos;||s[i]==&apos;+&apos;)i++;</div><div class="line">        while(isdigit(s[i])||s[i]==&apos;.&apos;)</div><div class="line">            s[i++]==&apos;.&apos;?count_point++:count_num++;</div><div class="line">        if(count_point&gt;1||count_num&lt;1)</div><div class="line">            return false;</div><div class="line">        if(s[i]==&apos;e&apos;)&#123;</div><div class="line">            i++;</div><div class="line">            count_point=0,count_num=0;</div><div class="line">            if(s[i]==&apos;-&apos;||s[i]==&apos;+&apos;)</div><div class="line">                i++;</div><div class="line">            while(isdigit(s[i])||s[i]==&apos;.&apos;)</div><div class="line">                s[i++]==&apos;.&apos;?count_point++:count_num++;</div><div class="line">            if(count_point&gt;0||count_num&lt;1)</div><div class="line">                return false;</div><div class="line">        &#125;</div><div class="line">        while(s[i]==&apos; &apos;)</div><div class="line">            i++;</div><div class="line">        return i==n;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Validate if a given string is numeric.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;i
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>71. Simplify Path</title>
    <link href="http://www.mysry.com/2017/12/03/71-Simplify-Path/"/>
    <id>http://www.mysry.com/2017/12/03/71-Simplify-Path/</id>
    <published>2017-12-03T14:11:35.000Z</published>
    <updated>2017-12-03T14:18:39.511Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an absolute path for a file (Unix-style), simplify it. For example, path = “/home/”, =&gt; “/home” path = “/a/./b/../../c/”, =&gt; “/c”</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> We split the path by “/”, and then judge the every section of the path. If the dir is “.”, just delete it and if the dir is “..”, delete it and its previous dir, other dirs will be stored int the stack.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public String simplifyPath(String path) &#123;</div><div class="line">        Deque&lt;String&gt; stack = new LinkedList&lt;&gt;();</div><div class="line">        Set&lt;String&gt; skip = new HashSet&lt;&gt;(Arrays.asList(&quot;..&quot;,&quot;.&quot;,&quot;&quot;));</div><div class="line">        for (String dir : path.split(&quot;/&quot;)) &#123;</div><div class="line">            if (dir.equals(&quot;..&quot;) &amp;&amp; !stack.isEmpty()) </div><div class="line">                stack.pop();</div><div class="line">            else if (!skip.contains(dir)) </div><div class="line">                stack.push(dir);</div><div class="line">        &#125;</div><div class="line">        String res = &quot;&quot;;</div><div class="line">        for (String dir : stack) res = &quot;/&quot; + dir + res;</div><div class="line">        return res.isEmpty() ? &quot;/&quot; : res;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    string simplifyPath(string path) &#123;</div><div class="line">        string res, tmp;</div><div class="line">    vector&lt;string&gt; stk;</div><div class="line">    stringstream ss(path);</div><div class="line">    while(getline(ss,tmp,&apos;/&apos;)) &#123;</div><div class="line">        if (tmp == &quot;&quot; or tmp == &quot;.&quot;) continue;</div><div class="line">        if (tmp == &quot;..&quot; and !stk.empty()) stk.pop_back();</div><div class="line">        else if (tmp != &quot;..&quot;) stk.push_back(tmp);</div><div class="line">    &#125;</div><div class="line">    for(auto str : stk) res += &quot;/&quot;+str;</div><div class="line">    return res.empty() ? &quot;/&quot; : res;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an absolute path for a file (Unix-style), simplify it. For e
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>68. Text Justification</title>
    <link href="http://www.mysry.com/2017/12/02/68-Text-Justification/"/>
    <id>http://www.mysry.com/2017/12/02/68-Text-Justification/</id>
    <published>2017-12-02T12:10:40.000Z</published>
    <updated>2017-12-03T02:39:38.229Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an array of words and a length L, format the text such that each line has exactly L characters and is fully (left and right) justified. You should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces ‘’ when necessary so that each line has exactly L characters. Extra spaces between words should be distributed as evenly as possible. If the number of spaces on a line do not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right. For the last line of text, it should be left justified and no extra space is inserted between words.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Travel through the String array to find how many words it is needed to suit the maxWidth and for the most situation the words length can’t be maxWidth, we need add extra space, such and to keep the space is generally similar, the last line is special because of we’d like to keep the extra space all set to be right.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public List&lt;String&gt; fullJustify(String[] words, int maxWidth) &#123;</div><div class="line">        List&lt;String&gt; res = new ArrayList&lt;&gt;();</div><div class="line">        int cur = 0;</div><div class="line">        while(cur&lt;words.length)&#123;</div><div class="line">            int last = cur +1;</div><div class="line">            int cnt = words[cur].length();</div><div class="line">            while(last&lt;words.length)&#123;</div><div class="line">                if(words[last].length()+cnt+1&gt;maxWidth)</div><div class="line">                    break;</div><div class="line">                cnt += words[last].length()+1;</div><div class="line">                last++;</div><div class="line">            &#125;</div><div class="line">            int gap = last -cur -1;</div><div class="line">            StringBuilder sb = new StringBuilder();</div><div class="line">            if(last == words.length||gap==0)&#123;</div><div class="line">                for (int i=cur;i&lt;last;i++)</div><div class="line">                    sb.append(words[i]+&quot; &quot;);</div><div class="line">                sb.deleteCharAt(sb.length()-1);</div><div class="line">                for (int i = sb.length();i&lt;maxWidth;i++)</div><div class="line">                    sb.append(&quot; &quot;);</div><div class="line">            &#125;</div><div class="line">            else&#123;</div><div class="line">                int spaces = (maxWidth - cnt) / gap;</div><div class="line">                int rem = (maxWidth - cnt) % gap;</div><div class="line">                for ( int i = cur; i&lt;last;i++)&#123;</div><div class="line">                    sb.append(words[i]);</div><div class="line">                    if(i&lt;last-1)&#123;</div><div class="line">                        for (int j=0;j&lt;=(spaces + (i-cur&lt;rem?1:0));j++)</div><div class="line">                            sb.append(&quot; &quot;);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            res.add(sb.toString());</div><div class="line">            cur = last;</div><div class="line">        &#125;</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="c-code"><font color="gold">C++ Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    vector&lt;string&gt; fullJustify(vector&lt;string&gt;&amp; words, int maxWidth)</div><div class="line">    &#123;</div><div class="line">        vector&lt;string&gt; res ;</div><div class="line">        for (int i=0,k,l;i&lt;words.size();i+=k)</div><div class="line">        &#123;</div><div class="line">            for (k=l=0;i+k&lt;words.size() and l+words[i+k].size()&lt;=maxWidth-k;k++)</div><div class="line">            &#123;</div><div class="line">                l += words[i+k].size();</div><div class="line">            &#125;</div><div class="line">            string tmp = words[i];</div><div class="line">            for (int j=0;j&lt;k-1;j++)</div><div class="line">            &#123;</div><div class="line">                if(i+k&gt;=words.size())</div><div class="line">                    tmp += &quot; &quot;;</div><div class="line">                else</div><div class="line">                    tmp += string((maxWidth - l) / (k - 1) + (j &lt; (maxWidth - l) % (k - 1)), &apos; &apos;);</div><div class="line">                tmp+=words[i+j+1];</div><div class="line">            &#125;</div><div class="line">            tmp += string(maxWidth-tmp.size(),&apos; &apos;);</div><div class="line">            res.push_back(tmp);</div><div class="line">        &#125;</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an array of words and a length L, format the text such that 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Decision tree</title>
    <link href="http://www.mysry.com/2017/12/02/Decision-tree/"/>
    <id>http://www.mysry.com/2017/12/02/Decision-tree/</id>
    <published>2017-12-02T06:57:27.000Z</published>
    <updated>2017-12-02T09:42:01.716Z</updated>
    
    <content type="html"><![CDATA[<h2 id="决策树">决策树</h2><p>  决策树是一种基本的分类和回归算法。分类决策树是一种描述对实例进行分类的树形结构。决策树是由节点和有向边组成，节点分为内部节点和叶节点。内部节点表示一个特征或属性，叶节点表示一个类。<br>   用决策树分类，从根节点开始，对实例的某一个特征进行测试，根据测试结果将实例分配给子节点，这时，每个子结点对应着改特征的一个取值，这样递归的进行分配测试，直到达到叶节点，把实例归为叶节点的类。<br></p><h2 id="特征的选择">特征的选择</h2><p>  特征选择在于选择对数据分类能力较强的特征作为结点。通常的特征选择准则是信息增益或信息增益比。<br></p><h3 id="信息熵">信息熵</h3><p>  对于概率分布为<span class="math display">\[P(X=x_i)=p_i, i=1,2,...,n\]</span>的随机变量X，其信息熵定义为<span class="math display">\[H(p)=-\sum_{i=1}^n p_i \log p_i\]</span>若<span class="math inline">\(p_i=0\)</span>定义<span class="math inline">\(0\log0=0\)</span>熵越大，随机变量的不确定性也就越大。假设由随机变量(X,Y)，其联合概率分布为<span class="math display">\[P(X=x_i,Y=y_i)=p_{ij},i=1,2,...,n; j=1,2,...,m\]</span>条件熵<span class="math inline">\(H(Y|X)\)</span>表示在已知随机变量X的条件下随机变量Y的不确定性，随机变量X给定的条件下随机变量Y的条件熵<span class="math inline">\(H(Y|X)\)</span>，定义为X再给定条件Y的条件概率分布的熵对X的数学期望<span class="math display">\[H(Y|X)=\sum_{i=1}^n p_i H(Y|X=x_i)\]</span>其中<span class="math inline">\(p_i=P(X=x_i), i=1,2,...,n\)</span>.<br></p><h3 id="信息增益">信息增益</h3><p>  信息增益表示在已知条件X的信息而使得类Y的信息不确定度减少的程度。特征A对训练数据集D的信息增益g(D,A),定义为集合D的经验熵H(D)与特征A在给定的条件下D的经验条件熵之差，即<span class="math display">\[g(D,A)=H(D)-H(D|A)\]</span>决策树中的信息增益等价于训练数据集中类与特征的互信息。<br>   设训练数据集D，|D|表示样本容量，假设有k个子类<span class="math inline">\(C_k\)</span>，k=1,2,…,K,<span class="math inline">\(|C_k|\)</span>为类<span class="math inline">\(C_k\)</span>样本个数.<span class="math inline">\(\sum_{k=1}^K |C_k|=|D|\)</span>.设特征A有n个不同的取值<span class="math inline">\({a_1,a_2,...,a_n}\)</span>，根据特征A的取值将D划分为n个子集<span class="math inline">\(D_1,D_2,...,D_n\)</span>,|D_i|为<span class="math inline">\(D_i\)</span>的样本数目，同样<span class="math inline">\(\sum_{i=1}^n |D_i|=|D|\)</span>.记子集<span class="math inline">\(D_i\)</span>中属于样本的集合为<span class="math inline">\(D_{ik}\)</span>，即<span class="math inline">\(D_{ij}=D_i \cap C_k\)</span>,<span class="math inline">\(|D_{ik}|\)</span>为<span class="math inline">\(D_{ik}\)</span>的样本个数，则有如下信息增益的算法:<br> - 计算数据集D的经验熵H(D)<span class="math display">\[H(D)=-\sum_{i=1}^K \frac{|C_k|}{|D|}\log_2\frac{|C_k|}{|D|}\]</span><br> - 计算特征A对数据集D的经验条件熵H(D|A)<span class="math display">\[H(D|A)=\sum_{i=1}^n\frac{|D_i|}{|D|}H(D_i) = -\sum_{i=1}^n\frac{|D_i|}{|D|} \sum_{k=1}^K \frac{|D_{ik}|}{|D_i|}\log_2 \frac{|D_{ik}|}{|D_i|}\]</span><br> - 计算信息增益比<span class="math display">\[g(D,A)=H(D)-H(D|A)\]</span><br></p><h3 id="信息增益比">信息增益比</h3><p>  特征A对数据集D的信息增益比<span class="math inline">\(g_R (D,A)\)</span>定义为其信息增益g(D,A)与训练数据集D关于特征值A的熵<span class="math inline">\(H_A (D)\)</span>之比，即<span class="math display">\[g_R(D,A)=\frac{g(D,A)}{H_A (D)}\]</span>其中，<span class="math inline">\(H_A (D)= -\sum_{i=1}^n \frac{|D_i|}{|D|} \log_2 \frac{|D_i|}{|D|}\)</span>,n是特征A取值的个数。</p><h2 id="决策树的生成">决策树的生成</h2><h3 id="id3-算法">ID3 算法</h3><p>输入：训练数据集D，特征集A，阈值<span class="math inline">\(\epsilon\)</span>;<br> 输出：决策树T.<br> - 若D中所有实例同属于一类<span class="math inline">\(C_k\)</span>，则T为单结点树，并将<span class="math inline">\(C_k\)</span>作为该结点的类标记，返回T;<br> - 若<span class="math inline">\(A=\varnothing\)</span>,则T为单结点树，并将D中实例数最大的类<span class="math inline">\(C_k\)</span>作为该结点的类标识，返回T;<br> - 否则，计算A中各特征对D的信息增益，选择信息增益最大的特征<span class="math inline">\(A_g\)</span>;<br> - 如果<span class="math inline">\(A_g\)</span>的信息增益小于阈值<span class="math inline">\(\varnothing\)</span>,则置T为单结点树，并将D中的实例数最大的类<span class="math inline">\(C_k\)</span>作为该节点的类标记，返回T;<br> - 否则，对<span class="math inline">\(A_g\)</span>的每一个可能的取值<span class="math inline">\(a_i\)</span>，依<span class="math inline">\(A_g=a_i\)</span>将D分割为若干个非空子集<span class="math inline">\(D_i\)</span>,<span class="math inline">\(D_i\)</span>中实例最大的类作为标记，构建子节点，由节点及其字节点构成树T，返回T;<br> - 对于第i个子结点，以<span class="math inline">\(D_i\)</span>为训练集，以<span class="math inline">\(A-\{A_g\}\)</span>为特征集。递归调用上述5步，得到字数<span class="math inline">\(T_i\)</span>，返回<span class="math inline">\(T_i\)</span>.<br></p><h3 id="c4.5-生成算法">C4.5 生成算法</h3><p>  以信息增益作为划分数据集的特征，存在偏向于选择特征较多的问题，使用信息增益比可以改善这一情况。<br> 输入：训练数据集D，特征集A，阈值<span class="math inline">\(\epsilon\)</span>;<br> 输出：决策树T.<br> - 若D中所有实例同属于一类<span class="math inline">\(C_k\)</span>，则T为单结点树，并将<span class="math inline">\(C_k\)</span>作为该结点的类标记，返回T;<br> - 若<span class="math inline">\(A=\varnothing\)</span>,则T为单结点树，并将D中实例数最大的类<span class="math inline">\(C_k\)</span>作为该结点的类标识，返回T;<br> - 否则，计算A中各特征对D的信息增益比，选择信息增益比最大的特征<span class="math inline">\(A_g\)</span>;<br> - 如果<span class="math inline">\(A_g\)</span>的信息增益比小于阈值<span class="math inline">\(\varnothing\)</span>,则置T为单结点树，并将D中的实例数最大的类<span class="math inline">\(C_k\)</span>作为该节点的类标记，返回T;<br> - 否则，对<span class="math inline">\(A_g\)</span>的每一个可能的取值<span class="math inline">\(a_i\)</span>，依<span class="math inline">\(A_g=a_i\)</span>将D分割为若干个非空子集<span class="math inline">\(D_i\)</span>,<span class="math inline">\(D_i\)</span>中实例最大的类作为标记，构建子节点，由节点及其字节点构成树 T，返回T;<br> - 对于第i个子结点，以<span class="math inline">\(D_i\)</span>为训练集，以<span class="math inline">\(A-\{A_g\}\)</span>为特征集。递归调用上述5步，得到字数<span class="math inline">\(T_i\)</span>，返回<span class="math inline">\(T_i\)</span>.<br></p><center>To be continued…</center>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;决策树&quot;&gt;决策树&lt;/h2&gt;
&lt;p&gt;  决策树是一种基本的分类和回归算法。分类决策树是一种描述对实例进行分类的树形结构。决策树是由节点和有向边组成，节点分为内部节点和叶节点。内部节点表示一个特征或属性，叶节点表示一个类。&lt;br&gt;   用决策树分类，从根节点开始，对实
      
    
    </summary>
    
    
      <category term="Machine learning" scheme="http://www.mysry.com/tags/Machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>63. Unique Paths II</title>
    <link href="http://www.mysry.com/2017/11/30/63-Unique-Paths-II/"/>
    <id>http://www.mysry.com/2017/11/30/63-Unique-Paths-II/</id>
    <published>2017-11-30T13:49:57.000Z</published>
    <updated>2017-11-30T13:53:00.154Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Follow up for “Unique Paths”: Now consider if some obstacles are added to the grids. How many unique paths would there be? An obstacle and empty space is marked as 1 and 0 respectively in the grid.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Also use dp to solve this problem.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int uniquePathsWithObstacles(int[][] obstacleGrid) &#123;</div><div class="line">      int width = obstacleGrid[0].length;</div><div class="line">int []dp = new int[width];</div><div class="line">dp[0]=1;</div><div class="line">for (int[]row:obstacleGrid) &#123;</div><div class="line">for (int j=0;j&lt;width;j++) &#123;</div><div class="line">if(row[j]==1)</div><div class="line">dp[j]=0;</div><div class="line">else if (j&gt;0)</div><div class="line">dp[j]+=dp[j-1];</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return dp[width-1];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Follow up for “Unique Paths”: Now consider if some obstacles are a
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>64. Minimum Path Sum</title>
    <link href="http://www.mysry.com/2017/11/30/64-Minimum-Path-Sum/"/>
    <id>http://www.mysry.com/2017/11/30/64-Minimum-Path-Sum/</id>
    <published>2017-11-30T13:43:30.000Z</published>
    <updated>2017-11-30T13:49:10.237Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.(you can only move down or right.)</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Use the Dp solution and four condition when we move.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int minPathSum(int[][] grid) &#123;</div><div class="line">        int m = grid.length;</div><div class="line">int n = grid[0].length;</div><div class="line">for (int i = 0; i &lt; m; i++) &#123;</div><div class="line">for (int j = 0; j &lt; n; j++) &#123;</div><div class="line">if (i == 0 &amp;&amp; j != 0) &#123;</div><div class="line">grid[i][j] = grid[i][j] + grid[i][j - 1];</div><div class="line">&#125; else if (i != 0 &amp;&amp; j == 0) &#123;</div><div class="line">grid[i][j] = grid[i][j] + grid[i - 1][j];</div><div class="line">&#125; else if (i == 0 &amp;&amp; j == 0) &#123;</div><div class="line">grid[i][j] = grid[i][j];</div><div class="line">&#125;else &#123;</div><div class="line">grid[i][j]=Math.min(grid[i-1][j], grid[i][j-1])+grid[i][j];</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return grid[m-1][n-1];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a m x n grid filled with non-negative numbers, find a path f
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
</feed>
