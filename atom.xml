<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mysry</title>
  
  <subtitle>Life is short, play more!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.mysry.com/"/>
  <updated>2017-11-04T05:26:26.967Z</updated>
  <id>http://www.mysry.com/</id>
  
  <author>
    <name>Mysry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>141. Linked List Cycle</title>
    <link href="http://www.mysry.com/2017/11/04/141-Linked-List-Cycle/"/>
    <id>http://www.mysry.com/2017/11/04/141-Linked-List-Cycle/</id>
    <published>2017-11-04T05:19:51.000Z</published>
    <updated>2017-11-04T05:26:26.967Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a linked list, determine if it has a cycle in it.</p></blockquote><blockquote><p>Follow up: Can you solve it without using extra space?</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>&amp;emap;We creat two pointers–slower and faster, the slower one walks one step every time, the faster pointer walks two step every time. If there is a cycle in the linked listed, faster will meet slower on sometime.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * class ListNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     ListNode next;</div><div class="line"> *     ListNode(int x) &#123;</div><div class="line"> *         val = x;</div><div class="line"> *         next = null;</div><div class="line"> *     &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">public class Solution &#123;</div><div class="line">    public boolean hasCycle(ListNode head) &#123;</div><div class="line">       if (head==null) return false;</div><div class="line">    ListNode slower=head;</div><div class="line">    ListNode faster=head;</div><div class="line">    while(faster.next!=null&amp;&amp;faster.next.next!=null) &#123;</div><div class="line">        slower = slower.next;</div><div class="line">        faster = faster.next.next;</div><div class="line">        if (slower ==faster) return true;</div><div class="line">    &#125;</div><div class="line">    return false; </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a linked list, determine if it has a cycle in it.&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>136. Single Number</title>
    <link href="http://www.mysry.com/2017/11/04/136-Single-Number/"/>
    <id>http://www.mysry.com/2017/11/04/136-Single-Number/</id>
    <published>2017-11-04T05:15:23.000Z</published>
    <updated>2017-11-04T05:19:12.297Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an array of integers, every element appears twice except for one. Find that single one.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> This could be very easy if you think of XOR, because a^a equals 0.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int singleNumber(int[] nums) &#123;</div><div class="line">     int result = 0;</div><div class="line">    for (int i=0;i&lt;nums.length;i++) &#123;</div><div class="line">        result^=nums[i];</div><div class="line">    &#125;</div><div class="line">    return result;   </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an array of integers, every element appears twice except for
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>125. Valid Palindrome</title>
    <link href="http://www.mysry.com/2017/11/04/125-Valid-Palindrome/"/>
    <id>http://www.mysry.com/2017/11/04/125-Valid-Palindrome/</id>
    <published>2017-11-04T05:08:15.000Z</published>
    <updated>2017-11-04T05:14:40.747Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> First, we should remove punctuation and turn capital letters into lowercase letters to get string a. Second, reverse the string and set it to string b, compare the two string, return a.equals(b).</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public boolean isPalindrome(String s) &#123;</div><div class="line">       String realString = s.replaceAll(&quot;[^A-Za-z0-9]&quot;, &quot;&quot;).toLowerCase();</div><div class="line">       String reverseString = new StringBuffer(realString).reverse().toString();</div><div class="line">       return realString.equals(reverseString);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a string, determine if it is a palindrome, considering only 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>122. Best Time to Buy and Sell Stock II</title>
    <link href="http://www.mysry.com/2017/11/04/122-Best-Time-to-Buy-and-Sell-Stock-II/"/>
    <id>http://www.mysry.com/2017/11/04/122-Best-Time-to-Buy-and-Sell-Stock-II/</id>
    <published>2017-11-04T05:00:32.000Z</published>
    <updated>2017-11-04T05:07:18.498Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Say you have an array for which the ith element is the price of a given stock on day i. Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Just as the before problem, reverse the time line,because when the sell prices were bigger than the purcharse prices, there will be profit during this transaction. Accumulated profits will be what we need.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int maxProfit(int[] prices) &#123;</div><div class="line">        if (prices.length==0||prices.length==1) return 0;</div><div class="line">    int maxProfit=0;</div><div class="line">    for (int i=prices.length-1;i&gt;0;i--) &#123;</div><div class="line">        if (prices[i]-prices[i-1]&gt;0)maxProfit+=prices[i]-prices[i-1];</div><div class="line">    &#125;</div><div class="line">    return maxProfit;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Say you have an array for which the ith element is the price of a 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>121. Best Time to Buy and Sell Stock</title>
    <link href="http://www.mysry.com/2017/11/04/121-Best-Time-to-Buy-and-Sell-Stock/"/>
    <id>http://www.mysry.com/2017/11/04/121-Best-Time-to-Buy-and-Sell-Stock/</id>
    <published>2017-11-04T04:54:36.000Z</published>
    <updated>2017-11-04T05:07:20.170Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Say you have an array for which the ith element is the price of a given stock on day i. If you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> This could be a easy dynamic programming ploblem. I’d like to use a for-loop to calculate the max difference and return the max-difference.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><pre><code>class Solution {    public int maxProfit(int[] prices) {        if (prices.length==0) return 0;    int max=0;    int softMin= prices[0];    for (int i=0;i&lt;prices.length;i++) {        if (prices[i]&gt;softMin) {            max=Math.max(max, prices[i]-softMin);        }        else {            softMin = prices[i];        }    }    return max;    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Say you have an array for which the ith element is the price of a 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>hexo+next personal setting</title>
    <link href="http://www.mysry.com/2017/11/03/hexo-next%E4%B8%AA%E6%80%A7%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.mysry.com/2017/11/03/hexo-next个性配置/</id>
    <published>2017-11-03T15:18:24.000Z</published>
    <updated>2017-11-03T16:25:49.922Z</updated>
    
    <content type="html"><![CDATA[<h2 id="add-fork-me-on-github"><font color="red">Add “Fork me on github”:</font></h2><p> <a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="external">click here</a> to select your favoriate style and copy the link code, like this: <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;https://github.com/yourGithubAddress&quot;&gt;&lt;img style=&quot;position: absolute; top: 0; left: 0; border: 0;&quot; src=&quot;https://camo.githubusercontent.com/567c3a48d796e2fc06ea80409cc9dd82bf714434/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f6461726b626c75655f3132313632312e706e67&quot; alt=&quot;Fork me on GitHub&quot; data-canonical-src=&quot;https://s3.amazonaws.com/github/ribbons/forkme_left_darkblue_121621.png&quot;&gt;&lt;/a&gt;</div></pre></td></tr></table></figure></p><p>Than open the swig file use <code>vim themes/next/layout/_layout.swig</code>, put the code under <code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code> and change the href to your github address.</p><h2 id="add-some-click-effect"><font color="red">Add some click effect:</font></h2><p> <a href="http://7u2ss1.com1.z0.glb.clouddn.com/love.js" target="_blank" rel="external">click here</a> to get the love.js code and copy it. Than use <code>vim thems/next/source/js/src/love.js</code> to create and edit file, copy love.js to this file. And than edit another file use <code>vim thems/next/layout/_layout.swig</code>. At the tail of this file add code like this: <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 页面点击小红心 --&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p><h2 id="add-tag-at-the-tail-of-every-article"><font color="red">Add tag at the tail of every article</font></h2><p> use <code>vim thems/next/layout/_macro/passage-end-tag.swig</code>, and add the behind code: <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;div&gt;</div><div class="line">    &#123;% if not is_index %&#125;</div><div class="line">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------End&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;Thank you for watching!-------------&lt;/div&gt;</div><div class="line">    &#123;% endif %&#125;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p><p> Than <code>vim thems/next/layout/_macro/post.swig</code> add the below code between <code>post-body</code> and <code>post-footer</code>: <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;div&gt;</div><div class="line">  &#123;% if not is_index %&#125;</div><div class="line">    &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</div><div class="line">  &#123;% endif %&#125;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p><p> After that, <code>vim _config.yml</code> and set passage-end-tag to be true: <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">passage_end_tag:</div><div class="line">  enabled: true</div></pre></td></tr></table></figure></p><h2 id="add-visitors-number"><font color="red">Add visitors number:</font></h2><p> <code>vim thems/next/layout_partials/footer.swig</code>, add the below code before copy right: <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p><p> Than add the statistical code in any where if suitable: <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;powered-by&quot;&gt;</div><div class="line">&lt;i class=&quot;fa fa-user-md&quot;&gt;&lt;/i&gt;&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</div><div class="line">  Viditors:&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;</div><div class="line">&lt;/span&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p><p> There are two kind ways of statistical vistors, pv and uv: pv: <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;</div><div class="line">    Visitors:&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure></p><p>uv: <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</div><div class="line">  Visitors:&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure></p><h2 id="hide-power-by-hexo"><font color="red">Hide “Power By Hexo”:</font></h2><p> use <code>vim thems/next/layout/_partials/footer.swig</code>, use <code>&lt;!----&gt;</code>to hide below code or directly delete the code: <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;dir class = &quot;powered-by&quot;&gt;</div><div class="line">&#123;&#123;_(&apos;footer.powered&apos;,&apos;&lt;a class=&quot;theme-link&quot; href =&quot;http://hexo.io&quot; rel = &quot;external nofollow&quot;&gt;Hexo&lt;/a&gt;&apos;)&#125;&#125;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;div class &quot;theme-info&quot;&gt;</div><div class="line">&#123;&#123;_(&apos;footer.theme&apos;)&#125;&#125; - &lt;a class = &quot;theme-link&quot; href=&quot;https://github.com/iissnan/hexo-theme-next&quot; rel = &quot;extenal nofollow&quot;&gt;</div><div class="line">NexT.&#123;&#123; theme.scheme&#125;&#125;</div><div class="line">&lt;/a&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;add-fork-me-on-github&quot;&gt;&lt;font color=&quot;red&quot;&gt;Add “Fork me on github”:&lt;/font&gt;&lt;/h2&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/blog/273-github-ribbon
      
    
    </summary>
    
    
      <category term="skills" scheme="http://www.mysry.com/tags/skills/"/>
    
  </entry>
  
  <entry>
    <title>119. Pascal&#39;s Triangle II</title>
    <link href="http://www.mysry.com/2017/11/03/119-Pascal-s-Triangle-II/"/>
    <id>http://www.mysry.com/2017/11/03/119-Pascal-s-Triangle-II/</id>
    <published>2017-11-03T07:39:37.000Z</published>
    <updated>2017-11-03T07:45:19.284Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an index k, return the kth row of the Pascal’s triangle.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Use 2 layer for loop to get the k row of the Pascla’s triangle.</p><h2 id="java-code"><font color="black">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public List&lt;Integer&gt; getRow(int rowIndex) &#123;</div><div class="line">        List&lt;Integer&gt; res = new ArrayList&lt;Integer&gt;();</div><div class="line">    for(int i=0;i&lt;rowIndex+1;i++) &#123;</div><div class="line">        res.add(1);</div><div class="line">        for (int j=i-1;j&gt;0;j--)</div><div class="line">            res.set(j,res.get(j-1)+res.get(j));</div><div class="line">    &#125;</div><div class="line">    return res;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an index k, return the kth row of the Pascal’s triangle.&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>118. Pascal&#39;s Triangle</title>
    <link href="http://www.mysry.com/2017/11/03/118-Pascal-s-Triangle/"/>
    <id>http://www.mysry.com/2017/11/03/118-Pascal-s-Triangle/</id>
    <published>2017-11-03T07:17:27.000Z</published>
    <updated>2017-11-03T07:38:56.635Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given numRows, generate the first numRows of Pascal’s triangle.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p> Pascal’s triangle is a triangular array of the binomial coefficients, every num is equal to the sum of its shoudlers(one or two numbers’ sum).</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public List&lt;List&lt;Integer&gt;&gt; generate(int numRows) &#123;</div><div class="line">       List&lt;List&lt;Integer&gt;&gt; allrows = new ArrayList&lt;List&lt;Integer&gt;&gt;();</div><div class="line">    ArrayList&lt;Integer&gt; row = new ArrayList&lt;Integer&gt;();</div><div class="line">    for (int i=0;i&lt;numRows;i++) &#123;</div><div class="line">        row.add(0,1);</div><div class="line">        for(int j=1;j&lt;row.size()-1;j++)</div><div class="line">            row.set(j, row.get(j)+row.get(j+1));</div><div class="line">        allrows.add(new ArrayList&lt;Integer&gt;(row));</div><div class="line">    &#125;</div><div class="line">    return allrows; </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given numRows, generate the first numRows of Pascal’s triangle.&lt;/p
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>112. Path Sum</title>
    <link href="http://www.mysry.com/2017/11/03/112-Path-Sum/"/>
    <id>http://www.mysry.com/2017/11/03/112-Path-Sum/</id>
    <published>2017-11-03T07:09:38.000Z</published>
    <updated>2017-11-03T07:15:05.304Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use the recursion to traversal its path, every level has two choice, and reduce the sum with node.val(left.val or right.val).</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public boolean hasPathSum(TreeNode root, int sum) &#123;</div><div class="line">        if (root==null)return false;</div><div class="line">    if(root.left==null&amp;&amp;root.right==null&amp;&amp;sum-root.val==0)</div><div class="line">        return true;</div><div class="line">    return hasPathSum(root.left,sum-root.val)||hasPathSum(root.right,sum-root.val);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree and a sum, determine if the tree has a root-to
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>111. Minimum Depth of Binary Tree</title>
    <link href="http://www.mysry.com/2017/11/03/111-Minimum-Depth-of-Binary-Tree/"/>
    <id>http://www.mysry.com/2017/11/03/111-Minimum-Depth-of-Binary-Tree/</id>
    <published>2017-11-03T07:03:09.000Z</published>
    <updated>2017-11-03T07:16:34.921Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a binary tree, find its minimum depth.</p></blockquote><blockquote><p>The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use a recursion, constantly return the shallow children subtree, until the child node equals null.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public int minDepth(TreeNode root) &#123;</div><div class="line">        if(root==null)return 0;</div><div class="line">    int  left =minDepth(root.left);</div><div class="line">    int  right=minDepth(root.right);</div><div class="line">    return (left==0||right==0)?left+right+1:Math.min(left,right)+1;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree, find its minimum depth.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;bl
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>110. Balanced Binary Tree</title>
    <link href="http://www.mysry.com/2017/11/03/110-Balanced-Binary-Tree/"/>
    <id>http://www.mysry.com/2017/11/03/110-Balanced-Binary-Tree/</id>
    <published>2017-11-03T06:55:54.000Z</published>
    <updated>2017-11-03T07:02:40.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a binary tree, determine if it is height-balanced.</p></blockquote><blockquote><p>For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use recursion to traverse the left and right nodes at the same time, if node depth between the left and right is no more than 1, we consider it as a balanced binary tree.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public boolean isBalanced(TreeNode root) &#123;</div><div class="line">    if (root==null) return true;</div><div class="line">    return height(root)!=-1;    </div><div class="line">&#125;</div><div class="line">public int height(TreeNode node) &#123;</div><div class="line">    if(node==null) &#123;</div><div class="line">        return 0;</div><div class="line">    &#125;</div><div class="line">    int lH=height(node.left);</div><div class="line">    if(lH==-1) return -1;</div><div class="line">    int rH =height(node.right);</div><div class="line">    if (rH==-1) return -1;</div><div class="line">    if(lH-rH&lt;-1||lH-rH&gt;1) return -1;</div><div class="line">    return Math.max(lH, rH)+1;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree, determine if it is height-balanced.&lt;/p&gt;
&lt;/blo
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>108. Convert Sorted Array to Binary Search Tree</title>
    <link href="http://www.mysry.com/2017/11/03/108-Convert-Sorted-Array-to-Binary-Search-Tree/"/>
    <id>http://www.mysry.com/2017/11/03/108-Convert-Sorted-Array-to-Binary-Search-Tree/</id>
    <published>2017-11-03T06:47:33.000Z</published>
    <updated>2017-11-03T06:54:58.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given an array where elements are sorted in ascending order, convert it to a height balanced BST.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Fisrt, find the middle number of the array, and than put the smaller number to be the left tree node, the larger be the right tree node.Also to use a recursive to solve this problem.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public TreeNode sortedArrayToBST(int[] nums) &#123;</div><div class="line">        if (nums.length==0)return null;</div><div class="line">    TreeNode head=helper(nums,0,nums.length-1);</div><div class="line">    return head;</div><div class="line">    &#125;</div><div class="line">    public TreeNode helper(int []nums,int low,int high) &#123;</div><div class="line">    if(low&gt;high)return null;</div><div class="line">    int mid=(low+high)/2;</div><div class="line">    TreeNode node=new TreeNode(nums[mid]);</div><div class="line">    node.left=helper(nums,low,mid-1);</div><div class="line">    node.right=helper(nums,mid+1,high);</div><div class="line">    return node;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an array where elements are sorted in ascending order, conve
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>107.Binary Tree Level Order Traversal II</title>
    <link href="http://www.mysry.com/2017/11/02/107-Binary-Tree-Level-Order-Traversal-II/"/>
    <id>http://www.mysry.com/2017/11/02/107-Binary-Tree-Level-Order-Traversal-II/</id>
    <published>2017-11-02T12:25:09.000Z</published>
    <updated>2017-11-02T12:36:20.250Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a binary tree, return the bottom-up level order traversal of its nodes’ values. (ie, from left to right, level by level from leaf to root).</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  I am puzzled of this question even if I have seen the answer. If you have very clear understand of this problem, could you email to me? Thank you very much!</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public List&lt;List&lt;Integer&gt;&gt; levelOrderBottom(TreeNode root) &#123;</div><div class="line">        List&lt;List&lt;Integer&gt;&gt; result=new ArrayList&lt;&gt;();</div><div class="line">       if(root==null) return result;</div><div class="line">       Queue&lt;TreeNode&gt;q= new LinkedList&lt;&gt;();</div><div class="line">       q.add(root);</div><div class="line">       while(q.size()&gt;0) &#123;</div><div class="line">       List&lt;Integer&gt; list=new ArrayList&lt;&gt;();</div><div class="line">       int size= q.size();</div><div class="line">       for(int i=0;i&lt;size;i++) &#123;</div><div class="line">       TreeNode node=q.poll();</div><div class="line">       list.add(node.val);</div><div class="line">       if (node.left!=null) q.add(node.left);</div><div class="line">       if(node.right!=null) q.add(node.right);</div><div class="line">       &#125;</div><div class="line">       result.add(0,list);</div><div class="line">       &#125;</div><div class="line">       return result;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree, return the bottom-up level order traversal of
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>104. Maximum Depth of Binary Tree</title>
    <link href="http://www.mysry.com/2017/11/02/104-Maximum-Depth-of-Binary-Tree/"/>
    <id>http://www.mysry.com/2017/11/02/104-Maximum-Depth-of-Binary-Tree/</id>
    <published>2017-11-02T12:17:13.000Z</published>
    <updated>2017-11-02T12:24:38.024Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problems"><font color="black">Problems:</font></h2><blockquote><p>Given a binary tree, find its maximum depth.</p></blockquote><blockquote><p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use recursive to find the most depth child tree by search if its left or right node is null.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public int maxDepth(TreeNode root) &#123;</div><div class="line">        if(root==null) return 0;</div><div class="line">return 1+Math.max(maxDepth(root.left), maxDepth(root.right));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problems&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problems:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree, find its maximum depth.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>101. Symmetric Tree</title>
    <link href="http://www.mysry.com/2017/11/02/101-Symmetric-Tree/"/>
    <id>http://www.mysry.com/2017/11/02/101-Symmetric-Tree/</id>
    <published>2017-11-02T12:11:46.000Z</published>
    <updated>2017-11-02T12:16:46.890Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use recursive to costantly compare its left node with its right node. We will find that recursive is frequently occurred in solving tree ploblems.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public boolean isSymmetric(TreeNode root) &#123;</div><div class="line">        if (root==null) return true;</div><div class="line">return isMirror(root.left,root.right);</div><div class="line">    &#125;</div><div class="line">    public boolean isMirror(TreeNode p,TreeNode q) &#123;</div><div class="line">if (p==null&amp;&amp;q==null)return true;</div><div class="line">if (p==null||q==null)return false;</div><div class="line">return (p.val==q.val)&amp;&amp; isMirror(p.left,q.right)&amp;&amp; isMirror(p.right,q.left);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a binary tree, check whether it is a mirror of itself (ie, s
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>100. Same Tree</title>
    <link href="http://www.mysry.com/2017/11/02/100-Same-Tree/"/>
    <id>http://www.mysry.com/2017/11/02/100-Same-Tree/</id>
    <published>2017-11-02T12:05:29.000Z</published>
    <updated>2017-11-02T12:11:15.469Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given two binary trees, write a function to check if they are equal or not.</p></blockquote><blockquote><p>Two binary trees are considered equal if they are structurally identical and the nodes have the same value.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use recursive to constantly compare their left and right child bode.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Definition for a binary tree node.</div><div class="line"> public class TreeNode &#123;</div><div class="line">     int val;</div><div class="line">     TreeNode left;</div><div class="line">     TreeNode right;</div><div class="line">     TreeNode(int x) &#123; val = x; &#125;</div><div class="line">&#125;</div><div class="line">class Solution &#123;</div><div class="line">    public boolean isSameTree(TreeNode p, TreeNode q) &#123;</div><div class="line">        if (p==null &amp;&amp; q==null) return true;</div><div class="line">    if (p==null || q==null) return false;</div><div class="line">    if (p.val==q.val)   return isSameTree(p.left,q.left) &amp;&amp; isSameTree(p.right,q.right);</div><div class="line">return false;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given two binary trees, write a function to check if they are equa
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>88. Merge Sorted Array</title>
    <link href="http://www.mysry.com/2017/11/01/88-Merge-Sorted-Array/"/>
    <id>http://www.mysry.com/2017/11/01/88-Merge-Sorted-Array/</id>
    <published>2017-11-01T04:31:04.000Z</published>
    <updated>2017-11-01T04:36:32.854Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.</p></blockquote><blockquote><p>Note: You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2. The number of elements initialized in nums1 and nums2 are m and n respectively.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  Use ‘?:’ to judge what will be the next element of nums1(after merged), so all we should to do is to find the boundary conditions.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public void merge(int[] nums1, int m, int[] nums2, int n) &#123;</div><div class="line">     while(n&gt;0)&#123; </div><div class="line">         nums1[m+n-1] = (m==0||nums2[n-1] &gt; nums1[m-1]) ? nums2[--n] : nums1[--m];</div><div class="line">     &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given two sorted integer arrays nums1 and nums2, merge nums2 into 
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>83. Remove Duplicates from Sorted List</title>
    <link href="http://www.mysry.com/2017/11/01/83-Remove-Duplicates-from-Sorted-List/"/>
    <id>http://www.mysry.com/2017/11/01/83-Remove-Duplicates-from-Sorted-List/</id>
    <published>2017-11-01T04:24:39.000Z</published>
    <updated>2017-11-01T04:30:09.684Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a sorted linked list, delete all duplicates such that each element appear only once.</p></blockquote><blockquote><p>For example, Given 1-&gt;1-&gt;2, return 1-&gt;2. Given 1-&gt;1-&gt;2-&gt;3-&gt;3, return 1-&gt;2-&gt;3</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  This is a similar problem with the last one! It don’t need to wholely remove the dups and the original elements. We use a Recursive function to remove the dups.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><pre><code>/** * Definition for singly-linked list. * public class ListNode { *     int val; *     ListNode next; *     ListNode(int x) { val = x; } * } */class Solution {    public ListNode deleteDuplicates(ListNode head) {        if(head == null || head.next == null)return head;        head.next = deleteDuplicates(head.next);        return (head.val == head.next.val) ? head.next : head;    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a sorted linked list, delete all duplicates such that each e
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>82. Remove Duplicates from Sorted List II</title>
    <link href="http://www.mysry.com/2017/11/01/82-Remove-Duplicates-from-Sorted-List-II/"/>
    <id>http://www.mysry.com/2017/11/01/82-Remove-Duplicates-from-Sorted-List-II/</id>
    <published>2017-11-01T04:18:03.000Z</published>
    <updated>2017-11-01T04:24:05.305Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.</p></blockquote><blockquote><p>For example, Given 1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5, return 1-&gt;2-&gt;5. Given 1-&gt;1-&gt;1-&gt;2-&gt;3, return 2-&gt;3.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  We use two pointer, slow is to track the node before the dup nodes, fast is to fine the last nodes of dups. A while loop to find the last nodes of the dups, and than detect the dups and remove them.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * public class ListNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     ListNode next;</div><div class="line"> *     ListNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">class Solution &#123;</div><div class="line">    public ListNode deleteDuplicates(ListNode head) &#123;</div><div class="line">        ListNode a=new ListNode(0),fast=head,slow=a;</div><div class="line">    slow.next=fast;</div><div class="line">while(fast!=null) &#123;</div><div class="line">while(fast.next!=null&amp;&amp;fast.val==fast.next.val) &#123;</div><div class="line">fast=fast.next;</div><div class="line">&#125;</div><div class="line">if (slow.next!=fast) &#123;</div><div class="line">slow.next=fast.next;</div><div class="line">fast=slow.next;</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">slow=slow.next;</div><div class="line">fast=fast.next;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return a.next;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a sorted linked list, delete all nodes that have duplicate n
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>70. Climbing Stairs</title>
    <link href="http://www.mysry.com/2017/11/01/70-Climbing-Stairs/"/>
    <id>http://www.mysry.com/2017/11/01/70-Climbing-Stairs/</id>
    <published>2017-11-01T04:13:55.000Z</published>
    <updated>2017-11-01T04:17:31.827Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem"><font color="black">Problem:</font></h2><blockquote><p>You are climbing a stair case. It takes n steps to reach to the top.</p></blockquote><blockquote><p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?</p></blockquote><blockquote><p>Note: Given n will be a positive integer.</p></blockquote><h2 id="idea"><font color="red">Idea:</font></h2><p>  This is basic use of fibonacci.The key intuition to solve the problem is that given a number of stairs n, if we know the number ways to get to the points [n-1] and [n-2] respectively, denoted as n1 and n2 , then the total ways to get to the point [n] is n1 + n2. Because from the [n-1] point, we can take one single step to reach [n]. And from the [n-2] point, we could take two steps to get there. There is NO overlapping between these two solution sets, because we differ in the final step.</p><h2 id="java-code"><font color="orange">Java Code:</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int climbStairs(int n) &#123;</div><div class="line">        if (n==0) return 0;</div><div class="line">if (n==1) return 1;</div><div class="line">if (n==2) return 2;</div><div class="line">int oneStepBefore=2;</div><div class="line">int twoStepBefore=1;</div><div class="line">int allways=0;</div><div class="line">for (int i=2;i&lt;n;i++) &#123;</div><div class="line">allways=oneStepBefore+twoStepBefore;</div><div class="line">twoStepBefore=oneStepBefore;</div><div class="line">oneStepBefore=allways;</div><div class="line">&#125;</div><div class="line">return allways;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;problem&quot;&gt;&lt;font color=&quot;black&quot;&gt;Problem:&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;You are climbing a stair case. It takes n steps to reach to the to
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://www.mysry.com/tags/leetcode/"/>
    
  </entry>
  
</feed>
